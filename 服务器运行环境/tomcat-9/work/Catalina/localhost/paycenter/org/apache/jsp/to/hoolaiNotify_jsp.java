/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-06-05 11:53:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.to;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Base64;
import com.wanniu.paycenter.res.*;
import java.io.*;
import com.wanniu.paycenter.dao.PayDao;
import com.wanniu.paycenter.bean.*;
import com.wanniu.paycenter.utils.*;
import java.net.*;
import net.sf.json.JSONObject;
import com.wanniu.paycenter.utils.Md5;
import com.wanniu.paycenter.dao.OrderDetailsDao;

public final class hoolaiNotify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.wanniu.paycenter.utils");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.wanniu.paycenter.res");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("com.wanniu.paycenter.bean");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.wanniu.paycenter.utils.Md5");
    _jspx_imports_classes.add("java.util.Base64");
    _jspx_imports_classes.add("com.wanniu.paycenter.dao.OrderDetailsDao");
    _jspx_imports_classes.add("net.sf.json.JSONObject");
    _jspx_imports_classes.add("com.wanniu.paycenter.dao.PayDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	final int PAYMENT_ID = 61;
	Logger log = Logger.getLogger("hoolaiNotify");
	String ip = request.getRemoteHost();
	String order_id = request.getParameter("order_id");
	String parent_channel = request.getParameter("parent_channel");
	String channel = request.getParameter("channel");
	String product_id = request.getParameter("product_id");
	String channel_id = request.getParameter("channel_id");
	String channel_app_id = request.getParameter("channel_app_id");
	String uid = request.getParameter("uid");
	String channelUid = request.getParameter("channelUid");
	String pay_date = request.getParameter("pay_date");
	String amount = request.getParameter("amount");
	String currency_unit = request.getParameter("currency_unit");
	String currency = request.getParameter("currency");
	String appstore_product_id = request.getParameter("appstore_product_id");
	String cp_order_id = request.getParameter("callback_info");
	String sign = request.getParameter("sign");
	out.clearBuffer();

	String orgOrderId = cp_order_id.replace("-", "+").replace("_", "/").replace(".", "=");
	orgOrderId = new String(Base64.getDecoder().decode(orgOrderId));//base64转码
	String osid = orgOrderId.substring(orgOrderId.length() - 5, orgOrderId.length() - 4);
	String mf_appid = (orgOrderId.substring(orgOrderId.length() - 13, orgOrderId.length() - 9));
	String key = PartnerManager.getInstance().getSecretKey(String.valueOf(PAYMENT_ID), mf_appid, osid);
	//有参数名按字母顺序进行排序
	String params = SignUtil.sortParams(request.getParameterMap());
	String msg = params;
	params += "product_key=" + key;
	log.info("strMd5:" + params);
	String mfsign = Md5.getUCMD5Str(params);

	OrderDetailPO details = new OrderDetailPO(orgOrderId, amount, order_id, msg, "", "");
	OrderDetailsDao detailsDao = new OrderDetailsDao();
	if (!mfsign.equalsIgnoreCase(sign)) {
		String err = "hoolai订单" + orgOrderId + "验证不通过";
		log.info(err);
		out.write("fail");
		details.setF_ReceiveState("-2");
		details.setF_ReceiveResponseMsg("fail");
		details.setF_ReceiveErrMsg(err);
		return;
	}

	//验证订单是否过期
	boolean is_Expired = DateUtil.checkOrderDate(orgOrderId, 5);
	if (is_Expired) {
		out.write("timeout");
		String err = "hoolai:" + orgOrderId + "已过期.";
		log.info(err);
		details.setF_ReceiveErrMsg(err);
		details.setF_ReceiveResponseMsg("success");
		details.setF_ReceiveState("-2");
		detailsDao.updateOnReceive(details);//记录订单操作明细
		return;
	}
	PayDao paydao = new PayDao();
	RecvResult recvResult = new RecvResult(1, orgOrderId, Double.parseDouble(amount), "", PAYMENT_ID, "");//payType=98???TODO
	paydao.callBack(recvResult);
	out.write("ok");
	log.info("hoolai订单" + orgOrderId + "处理成功");
	details.setF_ReceiveResponseMsg("success");
	details.setF_ReceiveState("2");
	detailsDao.updateOnReceive(details);//记录订单操作明细

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

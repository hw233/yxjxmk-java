<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommonAI</name>
    </assembly>
    <members>
        <member name="T:CommonAI.RTS.Manhattan.IManhattanMap">
            <summary>
            曼哈顿寻路基础数据结构
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.IManhattanMap.XCount">
            <summary>
            获取地图X格子数
            </summary>
            <returns></returns>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.IManhattanMap.YCount">
            <summary>
            获取地图Y格子数
            </summary>
            <returns></returns>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.IManhattanMap.CellW">
            <summary>
            获取地图每格宽
            </summary>
            <returns></returns>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.IManhattanMap.CellH">
            <summary>
            获取地图每格高
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.IManhattanMap.TestBlock(System.Int32,System.Int32)">
            <summary>
            测试是否有阻挡,true＝不能通过
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
            <returns>true＝不能通过 ；false＝可以通过</returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.IManhattanMap.TestBlockValue(System.Int32)">
            <summary>
            测试值是否有阻挡,true＝不能通过
            </summary>
            <param name="value">碰撞值</param>
            <returns>true＝不能通过 ；false＝可以通过</returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.IManhattanMap.GetValue(System.Int32,System.Int32)">
            <summary>
            获取地块值
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.IManhattanMap.SetValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            设置地块值
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
            <param name="value"></param>
            <returns>是否发生变化</returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.IManhattanMap.CreateMapNode">
            <summary>
            创建地图节点
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonAI.RTS.Manhattan.AstarManhattan">
            <summary>
            实现了曼哈顿算法的A*寻路算法
            </summary>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.#ctor(CommonAI.RTS.Manhattan.IManhattanMap,System.Boolean,System.Int32)">
            <summary>
            创建一个以曼哈顿算法的A*寻路算法
            </summary>
            <param name="map_data">地图适配器</param>
            <param name="inclined">是否要检测斜边可以移动</param>
            <param name="space_size">空间切割尺寸</param>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.SpaceOptimizePathLimitDistance">
            <summary>
            超过多少格子（空间分割格子）不进行路径优化
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.SpaceDivEnableDistance">
            <summary>
            超过多少格子（空间分割格子）启用空间分割
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.SpaceDivSize">
            <summary>
            空间分割尺度
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.SpaceAstar">
            <summary>
            空间分割寻路
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.IsInclined">
            <summary>
            是否支持8方向
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.AreaCount">
            <summary>
            地图总共多少可行走区域
            </summary>
        </member>
        <member name="T:CommonAI.RTS.Manhattan.AstarManhattan.ForEachTerrainAction">
            <summary>
            
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
        </member>
        <member name="T:CommonAI.RTS.Manhattan.AstarManhattan.ForEachTerrainPredicate">
            <summary>
            
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
            <returns>True can break</returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.ResetArea">
            <summary>
            计算连续区域
            </summary>
        </member>
        <member name="F:CommonAI.RTS.Manhattan.AstarManhattan.FindPathResult.Cross">
            <summary>
            可通过
            </summary>
        </member>
        <member name="F:CommonAI.RTS.Manhattan.AstarManhattan.FindPathResult.NoWay">
            <summary>
            没有路径
            </summary>
        </member>
        <member name="F:CommonAI.RTS.Manhattan.AstarManhattan.FindPathResult.Destination">
            <summary>
            原地
            </summary>
        </member>
        <member name="F:CommonAI.RTS.Manhattan.AstarManhattan.FindPathResult.OutOfMap">
            <summary>
            寻路范围超出地图范围
            </summary>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.TouchMapLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x0"></param>
            <param name="y0"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.GetLineTouchPoint(System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            获得线段和地图碰撞最近的焦点
            </summary>
            <param name="x0">起始点X</param>
            <param name="y0">起始点Y</param>
            <param name="x1">结束点X</param>
            <param name="y1">结束点Y</param>
            <param name="touch_x">接触点</param>
            <param name="touch_y">接触点</param>
            <param name="touch_distance">接触距离</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.TryMoveToMapBorder(System.Single@,System.Single@,System.Single,System.Single)">
            <summary>
            尝试移动坐标，如果碰撞则贴在碰撞边缘
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.FindNearRandomMoveableNode(System.Random,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            找到附近可过去的随机一点
            </summary>
            <param name="random"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="distance"></param>
            <param name="recommend">优先四周无其他阻挡</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.FindNearMoveableNode(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            指定范围可过去的一点.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="distance"></param>
            <param name="recommend"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.FindNearMoveableNodeByBlock(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            找到离中心最近的可移动点
            </summary>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="sw"></param>
            <param name="sh"></param>
            <param name="recommend">优先四周无其他阻挡</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.CheckNearExpectByBlock(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检测范围内有无期望的地块
            </summary>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="sw"></param>
            <param name="sh"></param>
            <param name="expect_block"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.GetNearExpectCountByBlock(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检测范围内希望的地块数量
            </summary>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="sw"></param>
            <param name="sh"></param>
            <param name="expect_block"></param>
            <returns></returns>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.ActiveObjectCount">
            <summary>
            实例数量
            </summary>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.TouchRect(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            和矩形碰撞
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.TouchLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            和线段检测碰撞
            </summary>
            <returns></returns>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.GetLineTouchPoint(System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            获得线段和此碰撞最近的焦点
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.BlockMesh">
            <summary>
            单元格碰撞网格
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.BlockMesh.ActiveObjectCount">
            <summary>
            实例数量
            </summary>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.BlockMesh.TouchRect(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            和矩形碰撞
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.BlockMesh.TouchLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            和线段检测碰撞
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.MMapNode.BlockMesh.GetLineTouchPoint(System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            获得线段和此碰撞最近的焦点
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonAI.RTS.Manhattan.AstarManhattan.MWayPoint">
            <summary>
            曼哈顿寻路路点
            </summary>
        </member>
        <member name="P:CommonAI.RTS.Manhattan.AstarManhattan.MWayPoint.ActiveObjectCount">
            <summary>
            实例数量
            </summary>
        </member>
        <member name="T:CommonAI.RTS.Manhattan.AstarManhattan.MSpaceAStar">
            <summary>
            十字链表，预先寻路
            </summary>
        </member>
        <member name="M:CommonAI.RTS.Manhattan.AstarManhattan.MSpaceAStar.onNodeValueReset(CommonAI.RTS.Manhattan.AstarManhattan.MMapNode)">
            <summary>
            当地表数据改变
            </summary>
            <param name="node"></param>
        </member>
        <member name="F:CommonAI.RTS.Manhattan.AstarManhattan.MSpaceAStar.MSpaceNode.no_blocks">
            <summary>
            没有阻挡
            </summary>
        </member>
        <member name="F:CommonAI.RTS.Manhattan.AstarManhattan.MSpaceAStar.MSpaceNode.no_cross">
            <summary>
            没有空地
            </summary>
        </member>
        <member name="F:CommonAI.RTS.Manhattan.AstarManhattan.MSpaceAStar.MSpaceNode.complexity">
            <summary>
            复杂度，阻挡块越多，越复杂
            </summary>
        </member>
        <member name="P:CommonAI.RTS.MapNode.Nexts">
            <summary>
            临近节点
            </summary>
        </member>
        <member name="M:CommonAI.RTS.MapNode.TestCross(CommonAI.RTS.MapNode)">
            <summary>
            测试通过
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.MapNode.GetG(CommonAI.RTS.MapNode)">
            <summary>
            g(n) 是在状态空间中从初始节点到n节点的实际代价。值越大，优先级越低。
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.MapNode.GetH(CommonAI.RTS.MapNode)">
            <summary>
            h(n) 是从n到目标节点最佳路径的估计代价。值越大，优先级越低。
            </summary>
            <param name="father"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.MapNode.Dispose">
            <summary>
            销毁节点
            </summary>
        </member>
        <member name="P:CommonAI.RTS.WayPoint.count">
            <summary>
            从当前节点开始算总长
            </summary>
        </member>
        <member name="T:CommonAI.RTS.RTSAstar`1">
            <summary>
            抽象的A*寻路算法，子类可以自定义实现如何寻路。
             @author WAZA
            </summary>
        </member>
        <member name="P:CommonAI.RTS.TempMapNode.data">
            对应的地图数据
        </member>
        <member name="F:CommonAI.RTS.TempMapNode.s_father">
            每次寻路时，暂存的上一个节点
        </member>
        <member name="M:CommonAI.RTS.TempMapNode.setFather(CommonAI.RTS.TempMapNode,CommonAI.RTS.TempMapNode)">
            <summary>
            F = G + H
            这里：
            </summary>
            <param name="father"></param>
            <param name="target"></param>
        </member>
        <member name="T:CommonAI.RTS.SpaceDivision">
            <summary>
            管理空间分割类，十字链表空间管理。
            </summary>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.ToSpaceBlock(System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
            实际坐标转换为分割块坐标
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="cx"></param>
            <param name="cy"></param>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.GetSpaceCellNodeByBlock(System.Int32,System.Int32)">
            <summary>
            按格取分割块
            </summary>
            <param name="cx"></param>
            <param name="cy"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.GetSpaceCellNode(System.Single,System.Single)">
            <summary>
            按坐标取分割块
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.NearChange(CommonAI.RTS.SpaceDivision.ObjectCellNode)">
            <summary>
            刷新空间分割位置为有改变
            </summary>
            <param name="old_cell"></param>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.ClearSpace(CommonAI.RTS.SpaceDivision.ObjectCellNode)">
            <summary>
            清除空间位置
            </summary>
            <param name="old_cell"></param>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.SwapSpace(CommonAI.RTS.SpaceDivision.ObjectCellNode,System.Single,System.Single,System.Boolean)">
            <summary>
            切换单位空间位置
            </summary>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.IsNearChanged(System.Single,System.Single)">
            <summary>
            判断是否附近有位置变化
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.GetNearObjectsCapacity(System.Single,System.Single)">
            <summary>
            获取当前坐标附近的所有单位容量
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.RTS.SpaceDivision.ObjectForEachAction`1">
            <summary>
            遍历单位
            </summary>
            <param name="obj"></param>
            <param name="cancel">设置为True，立即停止遍历</param>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.ForEachNearObjects``1(System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.ForEachNearObjects``1(System.Single,System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.ForEachNearObjectsRect``1(System.Single,System.Single,System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="T:CommonAI.RTS.SpaceDivision.ObjectCellNode">
            <summary>
            单位链表结构节点
            </summary>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.ObjectCellNode.ForEach``1(CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <returns>is canceled</returns>
        </member>
        <member name="T:CommonAI.RTS.SpaceDivision.SpaceCellNode">
            <summary>
            空间分割节点，十字链表节点
            </summary>
        </member>
        <member name="M:CommonAI.RTS.SpaceDivision.SpaceCellNode.ForEach``1(CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="action"></param>
            <returns>is canceled</returns>
        </member>
        <member name="P:CommonAI.ZoneClient.Agent.AbstractAgent.IsEnd">
            <summary>
            Agent 是否已结束
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.Agent.AbstractAgent.IsDuplicate">
            <summary>
            是否允许多个同类实体
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.Agent.ActorMoveAgent.IsFinish">
            <summary>
            是否到达终点
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.Agent.ActorMoveAgent.Start">
            <summary>
            再次开始
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.Agent.ActorMoveAgent.Stop">
            <summary>
            外部打断寻路.
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.SyncMode">
            <summary>
            客户端同步模式
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.SyncMode.ForceByServer">
            <summary>
            服务端强同步
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.SyncMode.MoveByClient_PreSkillByClient">
            <summary>
            移动直接在客户端处理，技能在客户端预处理，（伤害数字由服务端同步）
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.ActiveZoneLayerCount">
            <summary>
            未释放实例数量
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.AllocZoneLayerCount">
            <summary>
            分配实例数量
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.AsyncUnitPosModifyMaxRange">
            <summary>
            超出此同步范围，立即将坐标修正
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.ActorSyncMode">
            <summary>
            是否主角做异步位置同步（即客户端先模拟假象）
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.ServerTimeMS">
            <summary>
            服务器时间，从游戏开始到现在多少毫秒
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.IsHalfSync">
            <summary>
            是否为Short，双字节同步单位，场景必须小于255
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.IsSyncZ">
            <summary>
            是否实时同步Z坐标，如果不实时同步Z坐标，那么客户端本地计算Z
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.CurrentIntervalMS">
            <summary>
            当前客户端更新Interval
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.CurrentPing">
            <summary>
            当前客户端Ping值
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.ServerResourceVersion">
            <summary>
            服务端资源版本号
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.ClientResourceVersion">
            <summary>
            本地资源版本号
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetEnvironmentVar(System.String)">
            <summary>
            获得当前服务端可同步环境变量
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.ListEnvironmentVars">
            <summary>
            获得当前服务端可同步环境变量列表
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.ProcessMessage(CommonLang.Protocol.IMessage)">
            <summary>
            接收新消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.SendAction(CommonAI.Zone.Action)">
            <summary>
            发送消息
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.SendRequest(CommonAI.Zone.ActorRequest,CommonAI.ZoneClient.ZoneLayer.OnResponseHandler,CommonAI.ZoneClient.ZoneLayer.OnRequestTimeoutHandler,System.Int32)">
            <summary>
            发送请求
            </summary>
            <param name="msg"></param>
            <param name="handler"></param>
            <param name="timeout"></param>
            <param name="timeOutMS"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.PreQueueEvent(CommonLang.Protocol.IMessage)">
            <summary>
            客户端模拟服务端的包
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.QueueTask(System.Action{CommonAI.ZoneClient.ZoneLayer})">
            <summary>
            【线程安全】向主线程排一个任务
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.AddTimeTask(System.Int32,System.Int32,System.Int32,CommonLang.TickHandler)">
            <summary>
            【线程安全】增加时间任务
            </summary>
            <param name="intervalMS"></param>
            <param name="delayMS"></param>
            <param name="repeat"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.AddTimeDelayMS(System.Int32,CommonLang.TickHandler)">
            <summary>
            【线程安全】增加延时回调方法
            </summary>
            <param name="delayMS"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.AddTimePeriodicMS(System.Int32,CommonLang.TickHandler)">
            <summary>
            【线程安全】增加定时回调方法
            </summary>
            <param name="intervalMS"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.TouchMap(CommonAI.ZoneClient.ZoneUnit)">
            <summary>
            和地图做碰撞检测，是否阻挡
            </summary>
            <param name="u"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.TryTouchMap(CommonAI.ZoneClient.ZoneUnit,System.Single,System.Single)">
            <summary>
            尝试用新的坐标和地图碰撞检测
            </summary>
            <param name="u"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.TouchObject2(CommonAI.ZoneClient.ZoneObject,CommonAI.ZoneClient.ZoneObject)">
            <summary>
            2个单位是否碰撞
            </summary>
            <param name="s"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.TryTouchObject2(CommonAI.ZoneClient.ZoneObject,System.Single,System.Single,CommonAI.ZoneClient.ZoneObject)">
            <summary>
            尝试用新的坐标碰撞检测
            </summary>
            <param name="s"></param>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.TouchUnit(CommonAI.ZoneClient.ZoneUnit)">
            <summary>
            获得和当前单位碰撞的单位
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.TouchBuilding(CommonAI.ZoneClient.ZoneUnit)">
            <summary>
            获得和当前单位碰撞的建筑
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetNearUnit``1(System.Single,System.Single,System.Single,System.Predicate{``0})">
            <summary>
            获取最近的一个单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="range"></param>
            <param name="select"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetNearTarget(CommonAI.ZoneClient.ZoneActor,System.Single,CommonAI.Zone.SkillTemplate.CastTarget)">
            <summary>
            获取最近的一个单位
            </summary>
            <param name="owner"></param>
            <param name="range"></param>
            <param name="expect"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetNearPickableItem(CommonAI.ZoneClient.ZoneActor)">
            <summary>
            获取最近可检取单位
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.IsPickableItem(CommonAI.ZoneClient.ZoneActor,CommonAI.ZoneClient.ZoneItem,System.Boolean)">
            <summary>
            判断是否可检取
            </summary>
            <param name="owner"></param>
            <param name="item"></param>
            <param name="no_touch">不碰撞检测</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetSkillAttackableUnits(CommonAI.ZoneClient.ZoneUnit,CommonAI.Zone.SkillTemplate,System.Collections.Generic.List{CommonAI.ZoneClient.ZoneUnit})">
            <summary>
            获取技能可打到的单位
            </summary>
            <param name="src"></param>
            <param name="skill"></param>
            <param name="list"></param>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.IsShareTerrain">
            <summary>
            是否标记为共享寻路数据，表示多个场景共享一个PathFinderTerrain数据；
            一般客户端多开或者共享服务端Terrain打开此功能。
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.IsIgnoreTerrainTouch">
            <summary>
            是否忽略本地Decoration碰撞
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.FindPath(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            寻路
            </summary>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetArea(System.Single,System.Single)">
            <summary>
            获取位置所在的编辑器Area
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.ForEachNearObjects``1(System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.ForEachNearObjects``1(System.Single,System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.ForEachNearObjectsRect``1(System.Single,System.Single,System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.Objects">
            <summary>
            获取所有单位状态
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.Flags">
            <summary>
            获取所有装饰物状态
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.Actor">
            <summary>
            主角
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayer.ActorID">
            <summary>
            主角ID
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetObject``1(System.UInt32)">
            <summary>
            获取一个可显示对象
            </summary>
            <typeparam name="T">ZoneObject的子类</typeparam>
            <param name="objID"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetObject(System.UInt32)">
            <summary>
            获取一个可显示对象
            </summary>
            <param name="objID"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetUnit(System.UInt32)">
            <summary>
            获取一个单位
            </summary>
            <param name="objID"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetUnitByTemplateID(System.Int32)">
            <summary>
            根据模板找单位
            </summary>
            <param name="templateID"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetPlayerUnit(System.String)">
            <summary>
            获取一个玩家单位
            </summary>
            <param name="uuid"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.GetFlag``1(System.String)">
            <summary>
            获取一个编辑器标记
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneLayer.LayerObjectMap.ForEachObjects(System.Predicate{CommonAI.ZoneClient.ZoneObject})">
            <summary>
            遍历所有元素，如果返回True，则立即Break
            </summary>
            <param name="action">return true if cancel for each</param>
            <returns>true if cancel</returns>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayerObject.ActiveObjectCount">
            <summary>
            实例数量
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayerObject.AllocObjectCount">
            <summary>
            实例数量
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneLayerObject.Z">
            <summary>
            这里表示高度
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneObject.ObjectID">
            <summary>
            单位ID
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneObject.IsEnable">
            <summary>
            是否在场景里
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneActor.IsSkillAutoFocusTarget">
            <summary>
            单位释放技能时，自动朝向锁定敌人
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneActor.IsGuard">
            <summary>
            当前是否为自动战斗
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneActor.IsFollow">
            <summary>
            当前是否为自动跟随
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneActor.TargetUnitID">
            <summary>
            选中的目标单位
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneActor.LoginData">
            <summary>
            进入场景推送过来的数据
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.DoEvent(CommonAI.Zone.ObjectEvent)">
            <summary>
            截获后端发送的事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreMoveTo(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            尝试客户端移动
            </summary>
            <returns>TRUE=无法移动</returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreMoveTo(System.Single,System.Single,System.Int32)">
            <summary>
            尝试客户端移动
            </summary>
            <param name="angle"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <returns>TRUE=无法移动</returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreGetSkillAttackableFirstTarget(CommonAI.Zone.SkillTemplate,System.Boolean@)">
            <summary>
            获取当前最适合攻击的目标
            </summary>
            <param name="skill"></param>
            <param name="directionChange"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreElasticOtherObjects">
            <summary>
            被别的单位挤开
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreElasticOtherObject(CommonAI.ZoneClient.ZoneUnit)">
            <summary>
            被别的单位挤开
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreBlockMove(System.Single@,System.Single@)">
            <summary>
            和所有单位（包括地图）做碰撞检测，是否阻挡
            </summary>
            <param name="src"></param>
            <param name="addX"></param>
            <param name="addY"></param>
            <returns>阻挡</returns>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneActor.IsClientControlMove">
            <summary>
            是否客户端位移模式
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreSkillByClient.doBodyBlock">
            <summary>
            防止技能位移导致单位重合
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneActor.PreSkillByClient.doMoveToTarget">
            <summary>
            移动到目标面前
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.ZoneActor.OnGuardFocusTargetHandler">
            <summary>
            自动战斗锁定目标
            </summary>
            <param name="actor"></param>
            <param name="target"></param>
            <param name="expect"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneUnit.FixPos(System.Int32,CommonLang.Vector.Vector2,CommonLang.Vector.IVector2)">
            <summary>
            修正本地坐标//
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneUnit.IsNeedFixPos(CommonLang.Vector.Vector2,CommonLang.Vector.IVector2)">
            <summary>
            是否需要修正坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneUnit.SetDirection(System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="direction"></param>
            <param name="smooth">是否慢慢转身</param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneUnit.GetEnvironmentVar(System.String)">
            <summary>
            获得当前单位服务端可同步环境变量
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneUnit.ListEnvironmentVars">
            <summary>
            获得当前单位服务端可同步环境变量列表
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.ZoneClient.ZoneUnit.FallingDown">
            <summary>
            落体运动
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneUnit.IsChanttingSkill">
            <summary>
            是否正在吟唱
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneUnit.IsVisible">
            <summary>
            是否可被发现
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneUnit.IsInvincible">
            <summary>
            是否无敌
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneUnit.IsNoneBlock">
            <summary>
            此单位是否霸体
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneUnit.IsStun">
            <summary>
            是否为眩晕
            </summary>
        </member>
        <member name="P:CommonAI.ZoneClient.ZoneUnit.IsSilent">
            <summary>
            是否沉默
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneUnit.IsTimeLineEnable(System.Int32)">
            <summary>
            指定TimeLine是否还有任务
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.ZoneClient.IUnitVisibleData">
            <summary>
            单位的客户端显示数据，通常存储横向功能，比如Avatar
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.SyncObjectInfo.ExtData">
            <summary>
            用于扩展属性
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.SyncUnitInfo">
            <summary>
            场景中同步单位数据
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.SyncItemInfo">
            <summary>
            场景中同步物品数据
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.SyncSpellInfo">
            <summary>
            场景中同步法术数据
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.SyncObjectsEvent">
            <summary>
            同步场景中所有单位
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.LockActorEvent">
            <summary>
            玩家登陆到服务器后，服务器分配对应的单位ID
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.LockActorEvent.UnitData">
            <summary>
            当前房间单位信息
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.LockActorEvent.GameServerProp">
            <summary>
            服务端传过来的单位信息
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.LockActorEvent.ServerUpdateInterval">
            <summary>
            服务端更新速度/秒
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.LockActorEvent.ClientSyncObjectRange">
            <summary>
            客户端同步范围
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.LockActorEvent.ClientSyncObjectOutRange">
            <summary>
            客户端同步范围
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.ConnectToProxy">
            <summary>
            连接到代理服务器
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.DisconnectFromProxy">
            <summary>
            从代理服务器断开
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.SyncFlagsEvent">
            <summary>
            同步场景中所有Flag状态
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.ClientEnterScene.sceneID">
            <summary>
            场景ID
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.ClientEnterScene.spaceDiv">
            <summary>
            分割大小
            </summary>
        </member>
        <member name="F:CommonAI.ZoneClient.ClientEnterScene.resVersion">
            <summary>
            资源版本
            </summary>
        </member>
        <member name="T:CommonAI.ZoneClient.PlayerLeaveScene">
            <summary>
            玩家离开场景.
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneSpell.updateMotion(System.Int32)">
            <summary>
            更新移动行为
            </summary>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneSpell.updateTargetZ(CommonLang.Vector.IVector2,System.Single)">
            <summary>
            计算有固定目标Z坐标
            </summary>
            <param name="targetPos"></param>
            <param name="targetZ"></param>
        </member>
        <member name="M:CommonAI.ZoneClient.ZoneSpell.updateKeyFrames">
            <summary>
            更新范围检测以及关键帧
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.CreateRoomInfoR2B">
            <summary>
            创建房间额外的参数
            由游戏服发起(游戏服->战斗服)
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.CreateUnitInfoR2B">
            <summary>
            创建玩家单位额外的参数
            由游戏服发起(游戏服->战斗服)
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.CreateUnitInfoR2B.UnitTemplateID">
            <summary>
            角色模板ID
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.CreateUnitInfoR2B.Force">
            <summary>
            出生阵营
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.CreateUnitInfoR2B.StartFlag">
            <summary>
            玩家出生点
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.CreateUnitInfoR2B.UnitPropData">
            <summary>
            玩家扩展属性
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.RoomFinishInfoB2R">
            <summary>
            房间战斗结束，结算报文(战斗服->游戏服)
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.SceneID">
            <summary>
            游戏编辑器对应的Xml场景ID
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.WinnerForce">
            <summary>
            胜利方
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.Message">
            <summary>
            自定义消息
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.TotalTimeSEC">
            <summary>
            游戏总共进行时间
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResults">
            <summary>
            玩家所有统计信息
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.BinLog">
            <summary>
            战斗记录
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult">
            <summary>
            玩家战斗结果
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.PlayerUUID">
            <summary>
            玩家唯一标识
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.ZoneObjectID">
            <summary>
            场景中的ID
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.IsWin">
            <summary>
            是否胜利
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.Force">
            <summary>
            此次战斗的阵营
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.TotalTakeMoney">
            <summary>
            获取的金币数量
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.DeadCount">
            <summary>
            死亡次数
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.SelfDamage">
            <summary>
            承受伤害
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.ItemTemplates">
            <summary>
            收获的所有道具 编辑器道具ID[]
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.KillUnitCount">
            <summary>
            总共杀死单位数量
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.KillEnemyCount">
            <summary>
            总共杀敌人/小兵数量
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.KillNeutralityCount">
            <summary>
            总共杀野怪数量
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.KillBuildingCount">
            <summary>
            总共杀死建筑数量
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.KillPlayerCount">
            <summary>
            总共杀死玩家数量
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.KilledEllitMonsters">
            <summary>
            杀死精英怪物 编辑器单位ID[]
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.KillPlayers">
            <summary>
            杀死的玩家 玩家UUID[]
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.MonsterDamage">
            <summary>
            对怪物造成的总伤害
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.RoomFinishInfoB2R.PlayerResult.PlayerDamage">
            <summary>
            对玩家造成的总伤害
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.UnitKillMonsterB2R">
            <summary>
            通知玩家杀死怪物 (战斗服->游戏服)
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.UnitGotItemB2R">
            <summary>
            通知获得道具  (战斗服->游戏服)
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.UnitGotMoneyB2R">
            <summary>
            通知获得金币 (战斗服->游戏服)
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.ClientCostRequestB2R">
            <summary>
            客户端请求使用游戏币，(战斗服->游戏服)
            [Request的MessageID和Response的MessageID必须相等]
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.ClientCostRequestB2R.PlayerUUID">
            <summary>
            玩家标识
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.ClientCostRequestB2R.CostDiamond">
            <summary>
            消耗付费游戏币
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.ClientCostRequestB2R.CostGold">
            <summary>
            消耗产出金币
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.ClientCostRequestB2R.ItemTemplateID">
            <summary>
            消耗道具
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.ClientCostResponseR2B">
            <summary>
            客户端请求使用游戏币回馈，(游戏服->战斗服)
            [Request的MessageID和Response的MessageID必须相等]
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.UnitUseItemB2R">
            <summary>
            使用背包道具 (战斗服->游戏服)
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.UnitUseItemB2R.PlayerUUID">
            <summary>
            玩家标识
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.CloseRoomNotifyR2B">
            <summary>
            游戏服关闭房间
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.CloseRoomNotifyR2B.Result">
            <summary>
            关闭消息类型
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.CloseRoomNotifyR2B.Message">
            <summary>
            关闭消息
            </summary>
        </member>
        <member name="F:CommonAI.ZoneServer.CloseRoomNotifyR2B.TimeDelayMS">
            <summary>
            关闭倒计时
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.SendMessageR2B">
            <summary>
            游戏服向战斗服发送
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.SendMessageB2R">
            <summary>
            战斗服向游戏服发送
            </summary>
        </member>
        <member name="T:CommonAI.ZoneServer.SendEventB2R">
            <summary>
            战斗服向游戏服发送自定义事件.
            </summary>
        </member>
        <member name="T:CommonAI.Zone.EventTrigger.IEditorValueAdapter">
            <summary>
            抽象值数据接口
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEditorValueAdapter.ZoneAPI">
            <summary>
            场景触发器
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEditorValueAdapter.UnitAPI">
            <summary>
            单位触发器
            </summary>
        </member>
        <member name="T:CommonAI.Zone.EventTrigger.EventTriggerAdapter">
            <summary>
            执行事件触发器的数据接口
            </summary>
        </member>
        <member name="M:CommonAI.Zone.EventTrigger.EventTriggerAdapter.TestAndDoAction(CommonAI.Zone.EventTrigger.EventArguments)">
            <summary>
            测试并执行一次触发器
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.EventTrigger.EventTriggerAdapter.ResetTimeTask">
            <summary>
            重置TaskTimer().
            </summary>
        </member>
        <member name="T:CommonAI.Zone.EventTrigger.BindValuesAdapter">
            <summary>
            绑定环境变量用的数据接口
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventName">
            <summary>
            触发器名字
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventIsActive">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventComment">
            <summary>
            注释
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventTreePath">
            <summary>
            保存
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventDelayTimeMS">
            <summary>
            延迟执行
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventLocalVars">
            <summary>
            临时变量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventTriggers">
            <summary>
            事件触发
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventConditions">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:CommonAI.Zone.EventTrigger.IEventDataNode.EventActions">
            <summary>
            动作
            </summary>
        </member>
        <member name="M:CommonAI.Zone.EventTrigger.IEventDataNode.FunctionText">
            <summary>
            功能文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.AttackRangeHelper.GetShapeAttackable(System.Collections.Generic.List{CommonAI.Zone.Instance.InstanceUnit},CommonAI.Zone.Helper.AttackReason,CommonAI.Zone.ITemplateData,System.Single,System.Single,System.Single,System.Single,System.Int32,CommonAI.Zone.Helper.ObjectAoiStatus)">
            <summary>
                   范围伤害，碰撞检测 
            </summary>
            <param name="list"></param>
            <param name="reason"></param>
            <param name="weapon"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="PrevX"></param>
            <param name="PrevY"></param>
            <param name="max_affect"></param>
            <param name="aoi"></param>
            <returns></returns>
            
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.OnQuestAcceptedHandler(System.String,System.String)">
            <summary>
            【第三方系统通知】任务已接受
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.OnQuestCommittedHandler(System.String,System.String)">
            <summary>
            【第三方系统通知】任务已完成
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.OnQuestDroppedHandler(System.String,System.String)">
            <summary>
            【第三方系统通知】任务已放弃
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.OnQuestStatusChangedHandler(System.String,System.String,System.String,System.String)">
            <summary>
            【第三方系统通知】任务状态已改变
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.DoAcceptQuest(System.String,System.String,System.String)">
            <summary>
            【战斗模块请求】接受任务
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.DoCommitQuest(System.String,System.String,System.String)">
            <summary>
            【战斗模块请求】
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.DoDropQuest(System.String,System.String,System.String)">
            <summary>
            【战斗模块请求】
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.IQuestAdapter.DoUpdateQuestStatus(System.String,System.String,System.String,System.String)">
            <summary>
            【战斗模块请求】
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.TeamFormationGroup.ResetPos">
            <summary>
            初始化，直接放置坐标位置
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Helper.ObjectAoiStatus.CanSeeMe">
            <summary>
            别人可以看到自己
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Helper.ObjectAoiStatus.CanSeeOther">
            <summary>
            自己可以看到别人
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Helper.ObjectAoiStatus.IsNeedNotifyClient">
            <summary>
            是否需要通知客户端进入位面
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Helper.ObjectAoiStatus.GetObjectCount``1(System.Predicate{``0})">
            <summary>
            获取AOI内指定类型单位数量
            </summary>
            <typeparam name="T"></typeparam>
            <param name="select">选择器</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.ObjectAoiStatus.GetUnitCountByName(System.String)">
            <summary>
            获取AOI内指定name单位数量
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.ObjectAoiStatus.GetUnitCountByForce(System.Int32)">
            <summary>
            获取AOI内指定Force单位数量
            </summary>
            <param name="force"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.ObjectAoiStatus.GetUnitCountByTemplateID(System.Int32)">
            <summary>
            获取AOI内指定模板单位数量
            </summary>
            <param name="unit_template_id"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.ObjectAoiStatus.GetUnitCount(System.Int32,System.Int32)">
            <summary>
            获取AOI内指定Force和指定模板单位数量
            </summary>
            <param name="force"></param>
            <param name="unit_template_id"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Helper.ManhattanMapAreaGenerator.ContinuousMapNode">
            <summary>
            扫描地块区域结果
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Helper.ManhattanMapAreaGenerator.GetContinuousMapNode(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x">中心点</param>
            <param name="y">中心点</param>
            <param name="xr">x半径</param>
            <param name="yr">y半径</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.HateSystem.GetHated">
            <summary>
            当前首要目标
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Helper.ObjectSorterNearest`1">
            <summary>
            从小到大排序
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CommonAI.Zone.Helper.ObjectSorterFarthest`1">
            <summary>
            从大到小排序
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CommonAI.Zone.Helper.ObjectBodySorterNearest`1">
            <summary>
            从小到大排序
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CommonAI.Zone.Helper.ObjectBodySorterFarthest`1">
            <summary>
            从大到小排序
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveHelper.UpdateSpeed(System.Int32,System.Single@,System.Single,System.Single)">
            <summary>
            更新速度
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveHelper.DirectionChange(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            转身算法
            </summary>
            <param name="dstD">目标角度</param>
            <param name="curD">当前角度</param>
            <param name="turnSpeedSEC">角速度</param>
            <param name="intervalMS">时间间隔</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveHelper.MoveToTargetTunning(System.Single@,System.Single@,System.Single@,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            导弹一样飞向目标，并自动调整方向
            </summary>
            <param name="pos"></param>
            <param name="direction"></param>
            <param name="targetX"></param>
            <param name="targetY"></param>
            <param name="speedSEC"></param>
            <param name="turnSpeedSEC"></param>
            <param name="intervalMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveHelper.CalculateFlyTimeMS(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            预估击飞到落下的时间
            </summary>
            <param name="z">要计算的高度</param>
            <param name="z_speed">Z速度</param>
            <param name="z_limit">Z坐标上限</param>
            <param name="gravity">重力加速度</param>
            <param name="intervalMS">时间精度，越小越精确，一般10足够精度</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveHelper.CalulateParabolicHeight(System.Single,System.Int32,System.Int32)">
            <summary>
            给定最大距离和总时间，计算当前抛物线高度
            y = ax2 + bx + c;
            </summary>
            <param name="maxHeight"></param>
            <param name="totalTimeMS"></param>
            <param name="currentTimeMS"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveHelper.CalculateHitMoveDirection(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.InstanceZoneObject,CommonAI.Zone.AttackProp.HitMoveType)">
            <summary>
            计算单位击退方向
            </summary>
            <param name="damage">受击者</param>
            <param name="attacker">攻击者</param>
            <param name="mtype"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.PopupKeyFrames`1.PopKeyFrames(System.Int32,System.Collections.Generic.List{`0})">
            <summary>
            取出所有到时间的关键帧
            </summary>
            <param name="passTimeMS"></param>
            <param name="ret"></param>
            <returns></returns>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_TOUCH_MAP_ALL">
            <summary>
            标志状态，本次移动任何方向接触过地图
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_TOUCH_OBJ_GETAWAY">
            <summary>
            标志状态，阻挡的单位同意让开
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_HOLD">
            <summary>
            标志状态，本次移动等等
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_NO_WAY">
            <summary>
            标志状态，无法移动
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_ARRIVED">
            <summary>
            标志判断，到达目标
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_BLOCK_OBJ">
            <summary>
            标志判断，被单位阻挡
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_BLOCK_MAP">
            <summary>
            标志判断，被地图阻挡
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.MOVE_RESULT_MIN_STEP">
            <summary>
            标志判断，没有达到预期距离或者移动距离太小
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.RESULTS_BLOCK_ANY">
            <summary>
            【标志判断组】，被任何东西阻挡
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveResult.RESULTS_MOVE_END">
            <summary>
            【标志判断】，移动结束（被阻挡或者到达目标）
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveImpactResult.MOVE_RESULT_TOUCH_MAP">
            <summary>
            标志状态，本次移动任何方向接触过地图
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveImpactResult.MOVE_RESULT_TOUCH_OBJ">
            <summary>
            标志状态，阻挡的单位同意让开
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveImpactResult.MOVE_RESULT_BLOCK_OBJ">
            <summary>
            标志判断，被单位阻挡
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveImpactResult.MOVE_RESULT_BLOCK_MAP">
            <summary>
            标志判断，被地图阻挡
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveImpactResult.MOVE_RESULT_MIN_STEP">
            <summary>
            标志判断，没有达到预期距离或者移动距离太小
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Helper.MoveImpactResult.RESULTS_CAN_NOT_MOVE">
            <summary>
            【标志判断组】，被任何东西阻挡
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Helper.MoveAI.MoveTurnPosObject">
            <summary>
            如果向目标移动过程中被单位阻挡，则向左或右调整一段距离
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveAI.MoveTurnPosObject.move(System.Single,System.Int32,CommonAI.Zone.Helper.MoveBlockResult@)">
            <summary>
            绕过某个单位移动
            </summary>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <param name="result"></param>
            <returns>是否移动结束</returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveAI.MoveTurnPosObject.GetNearTurnPos(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            获取绕过去，离目标最近的点
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveAI.MoveTurnPosObject.TurnRandomBypass">
            <summary>
            碰到障碍时，绕过去
            </summary>
            <param name="unit"></param>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveAI.MoveTurnPosObject.TurnNearBypass">
            <summary>
            从最近点绕过去
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Helper.MoveAI.MoveTurnPosMapBlock">
            <summary>
            如果向目标移动过程中被单位阻挡，则向左或右调整一段距离
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Helper.MoveAI.MoveTurnPosMapBlock.move(System.Single,System.Int32,CommonAI.Zone.Helper.MoveBlockResult@)">
            <summary>
            绕过某个单位移动
            </summary>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <param name="result"></param>
            <returns>是否移动结束</returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTrigger">
            <summary>
            观察一定范围的触发器
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTrigger.ViewTriggerListener">
            <summary>
            监听单位进出观察范围
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.ViewTrigger.ViewTriggerListener.onObjectEnterView(CommonAI.Zone.Instance.ViewTrigger,CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            当一个单位进入观察范围后触发
            </summary>
            <param name="src">观察者</param>
            <param name="obj">进入视野的单位</param>
        </member>
        <member name="M:CommonAI.Zone.Instance.ViewTrigger.ViewTriggerListener.onObjectLeaveView(CommonAI.Zone.Instance.ViewTrigger,CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            当一个单位离开观察范围后触发
            </summary>
            <param name="src">观察者</param>
            <param name="obj">离开视野范围的单位</param>
        </member>
        <member name="M:CommonAI.Zone.Instance.ViewTrigger.ViewTriggerListener.select(CommonAI.Zone.Instance.ViewTrigger,CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            是否可见
            </summary>
            <param name="src"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="F:CommonAI.Zone.Instance.ViewTrigger.mCheckRate">
            <summary>
            检测频率
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.ViewTrigger.setMaxViewd(System.Int32)">
            <summary>
            设置最大观察单位数量
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.ViewTrigger.setListener(CommonAI.Zone.Instance.ViewTrigger.ViewTriggerListener)">
            <summary>
            增加观察者监听器
            </summary>
            <param name="listener"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTriggerBlind">
            <summary>
            瞎子
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTriggerRoundCenter">
            <summary>
            观察目标坐标是否在圆形范围内
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTriggerRoundBody">
            <summary>
            观察目标BlockBody是否在圆形范围内
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTriggerRectCenter">
            <summary>
            观察目标坐标是否在矩形范围内
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTriggerFanCenter">
            <summary>
            观察目标坐标是否在扇形范围内
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.ViewTriggerFanBody">
            <summary>
            观察目标身体是否在扇形范围内
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.AbstractSpawnTrigger">
            <summary>
            生成单位的触发器
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.AbstractSpawnTrigger.AliveCount">
            <summary>
            当前存活数量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.AbstractSpawnTrigger.IsSpawnOver">
            <summary>
            是否已完成刷新
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setSpawnInterval(System.Int32)">
            <summary>
            生产单位间隔时间
            </summary>
            <param name="interval"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setSpawnCount(System.Int32)">
            <summary>
            设置每次产生个数
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setSpawnEffect(CommonAI.Zone.LaunchEffect)">
            <summary>
            设置出生特效
            </summary>
            <param name="effect"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setUnitTag(System.String)">
            <summary>
            单位产生绑定的标志
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setSpawnWithoutAlive(System.Boolean)">
            <summary>
            只有当前怪物没有存活时才刷新
            </summary>
            <param name="without_alive"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setLimitedAliveCount(System.Int32)">
            <summary>
            设置怪物存活最大上限
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setLimitedSpawnCount(System.Int32)">
            <summary>
            设置怪物最大产生数量
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.setDelayTime(System.Int32)">
            <summary>
            设置当前触发器禁止时间，就是多长时间后才起效。
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.reset">
            <summary>
            重置计时器
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.bindToRegion(CommonAI.Zone.Instance.ZoneRegion)">
            <summary>
            绑定到区域
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.SpawnObject(CommonLang.Vector.IPositionObject)">
            <summary>
            创建并生成一个单位
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.OnObjectSpawned(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            当一个单位被生成
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.AbstractSpawnTrigger.OnSpawnedObjectRemoved(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            当被生成的单位被移除场景
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.SpawnUnitTrigger">
            <summary>
            生成单位的触发器
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnUnitTrigger.setUnitForce(System.Byte)">
            <summary>
            设置产生单位的Force
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnUnitTrigger.setUnitName(System.String)">
            <summary>
            设置出生单位名字
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnUnitTrigger.addUnitInfo(CommonAI.Zone.UnitInfo,System.Int32,System.Single)">
            <summary>
            添加单位模板
            </summary>
            <param name="info">将要产生的单位模板</param>
            <param name="level"></param>
            <param name="percent"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnUnitTrigger.addUnitInfo(System.Int32,System.Int32,System.Single)">
            <summary>
            添加单位模板
            </summary>
            <param name="templateID">将要产生的单位模板</param>
            <param name="level"></param>
            <param name="percent"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnUnitTrigger.addUnits(System.Int32[],System.Int32)">
            <summary>
            添加多个单位模板
            </summary>
            <param name="unitsTemplateID"></param>
            <param name="level"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnUnitTrigger.clearTemplates">
            <summary>
            清除所有怪物模板
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnUnitTrigger.setStartPath(CommonAI.Zone.Instance.InstanceZone,System.String,System.Int32,System.Int32)">
            <summary>
            设置移动路线
            </summary>
            <param name="zone"></param>
            <param name="flagName"></param>
            <param name="minHoldTimeMS"></param>
            <param name="maxHoldTimeMS"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.SpawnItemTrigger">
            <summary>
            生成物品的触发器
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnItemTrigger.setUnitForce(System.Byte)">
            <summary>
            设置产生单位的Force
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnItemTrigger.setUnitName(System.String)">
            <summary>
            设置出生单位名字
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnItemTrigger.addItemInfo(System.Int32,System.Single)">
            <summary>
            添加单位模板
            </summary>
            <param name="info">将要产生的单位模板</param>
        </member>
        <member name="M:CommonAI.Zone.Instance.SpawnItemTrigger.clearTemplates">
            <summary>
            清除所有怪物模板
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceManual">
            <summary>
            纯手动控制AI，完全没有自动成分
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceNature">
            <summary>
            中立AI
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceGuard">
            <summary>
            所有自动电脑AI
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.setOrginPosition(System.Single,System.Single)">
            <summary>
            设置警戒地点，如果在寻路或保护单位，则无效
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.followAndAttack(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Helper.AttackReason)">
            <summary>
            寻路攻击目标
            </summary>
            <param name="src"></param>
            <param name="reason"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.attackTo(CommonAI.Zone.Instance.ZoneWayPoint)">
            <summary>
            寻路并一路警戒
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.patrolWith(CommonAI.Zone.Instance.ZoneWayPoint,System.Int32,System.Int32)">
            <summary>
            在路点范围内警戒
            </summary>
            <param name="wp"></param>
            <param name="holdMinTimeMS"></param>
            <param name="holdMaxTimeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.guardUnit(CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            保护单位
            </summary>
            <param name="vip"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.guard">
            <summary>
            待机
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.backToOrgin">
            <summary>
            立刻开始返回原点
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.idleMove(System.Int32,System.Int32)">
            <summary>
            在一定范围内浪
            </summary>
            <param name="timeMS">浪多久</param>
            <param name="range">浪多远</param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceGuard.tryMoveScatterTarget(CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            攻击间歇，尝试换个位置，避免怪物堆在一个点
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceGuard.StateMoveAway">
            <summary>
            移动状态
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstancePet.Master">
            <summary>
            获取主人
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstancePet.StateFollowMaster">
            <summary>
            移动状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstancePlayer">
            <summary>
            可自动战斗的可操作单位
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstancePlayer.OnDisconnected">
            <summary>
            联网模式，断开连接。
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstancePlayer.OnReconnected(CommonAI.Zone.UnitInfo,System.Byte,System.Int32,CommonLang.Vector.Vector2)">
            <summary>
            联网模式，重新连接。
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstancePlayer.StatePlayerUpdateMove">
            <summary>
            更新坐标移动状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstancePlayer.StatePlayerControlMove">
            <summary>
            摇杆控制移动状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone">
            <summary>
            代理用类
            </summary>
            <summary>
            服务端场景
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UpdateHandler">
            <summary>
            场景更新触发
            </summary>
            <param name="zone"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitActivatedHandler">
            <summary>
            当单位可攻击时触发，如果单位有出生动画，则动画完结后触发。
            </summary>
            <param name="zone"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitAddedHandler">
            <summary>
            单位进入触发
            </summary>
            <param name="zone"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitRemovedHandler">
            <summary>
            单位移除触发
            </summary>
            <param name="zone"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitLaunchSkillHandler">
            <summary>
            单位开始放技能
            </summary>
            <param name="zone"></param>
            <param name="u"></param>
            <param name="skill"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitDeadHandler">
            <summary>
            单位死亡触发
            </summary>
            <param name="zone"></param>
            <param name="obj"></param>
            <param name="attacker"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitDamageHandler">
            <summary>
            单位受到攻击触发
            </summary>
            <param name="zone"></param>
            <param name="obj"></param>
            <param name="attacker"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitRebirthHandler">
            <summary>
            单位复活触发
            </summary>
            <param name="zone"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitGotInstanceItemHandler">
            <summary>
            单位获取场景物品
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="item"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitGotInventoryItemHandler">
            <summary>
            单位获取物品进背包
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="item"></param>
            <param name="count"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitLostInventoryItemHandler">
            <summary>
            单位丢失物品
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="item"></param>
            <param name="count"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitUseItemHandler">
            <summary>
            单位获取物品
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="item"></param>
            <param name="item_creater"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitGotBuffHandler">
            <summary>
            单位中BUFF
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="buff"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitLostBuffHandler">
            <summary>
            单位失去BUFF
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="buff"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitGotMoneyHandler">
            <summary>
            单位获取金币
            </summary>
            <param name="obj"></param>
            <param name="add_money"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.UnitPickUnitHandler">
            <summary>
            单位和其他单位产生交互
            </summary>
            <param name="zone"></param>
            <param name="obj"></param>
            <param name="pickable"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.TryPickItemHandler">
            <summary>
            单位尝试检取道具监听，
            返回False禁止检取
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.FinishPickItemHandler">
            <summary>
            单位完成采集道具
            </summary>
            <param name="zone"></param>
            <param name="unit"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.ItemAddedHandler">
            <summary>
            添加物品到场景
            </summary>
            <param name="zone"></param>
            <param name="item"></param>
            <param name="item_creater"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.PlayerReadyHandler">
            <summary>
            玩家准备完毕
            </summary>
            <param name="player"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.QuestAcceptedHandler">
            <summary>
            【服务端】任务已接受
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.QuestCommittedHandler">
            <summary>
            【服务端】任务已提交
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.QuestDroppedHandler">
            <summary>
            【服务端】任务已放弃
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZone.QuestStatusChangedHandler">
            <summary>
            【服务端】任务状态已更新
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.TouchObject2(CommonAI.Zone.Instance.InstanceZoneObject,CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            2个单位是否碰撞
            </summary>
            <param name="s"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.TouchMap(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            单位和地图碰撞检测
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.TryTouchMap(CommonAI.Zone.Instance.InstanceZoneObject,System.Single,System.Single)">
            <summary>
            单位尝试用心的坐标和地图碰撞
            </summary>
            <param name="o"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.TryMoveToMapBorder(CommonAI.Zone.Instance.InstanceZoneObject,System.Single@,System.Single@,System.Single,System.Single)">
            <summary>
            单位尝试移动，并自动对齐到地图边界
            </summary>
            <param name="o"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.RaycastMap(CommonAI.Zone.Instance.InstanceUnit,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            单位视线是否和地图相交
            </summary>
            <param name="src"></param>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.intersectNearStaticBlockable(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            当前单位是否和建筑碰撞
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.intersectNearStaticBlockableZ(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            包含身体高度和建筑碰撞
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.intersectNearUnit(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            当前单位是否和单位碰撞
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSpaceCellNode(System.Single,System.Single)">
            <summary>
            按坐标取分割块
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSpaceCellNodeByBlock(System.Int32,System.Int32)">
            <summary>
            按格取分割块
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.nearChange(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            刷新空间分割位置为有改变
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.clearSpace(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            清除空间位置
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.IsNearChanged(System.Single,System.Single)">
            <summary>
            判断是否附近有位置变化
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getNearObjectsCapacity(System.Single,System.Single)">
            <summary>
            获取当前坐标附近的所有单位容量
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getNearObjects(System.Single,System.Single)">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getNearObjects(System.Single,System.Single,System.Single)">
            <summary>
            获取当前圆形坐标附近所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getNearObjectsRect(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            获取当前矩形附近所有单位
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getNearObjects(System.Single,System.Single,System.Collections.Generic.List{CommonAI.Zone.Instance.InstanceZoneObject})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="list"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getNearObjects(System.Single,System.Single,System.Single,System.Collections.Generic.List{CommonAI.Zone.Instance.InstanceZoneObject})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="list"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getNearObjectsRect(System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.List{CommonAI.Zone.Instance.InstanceZoneObject})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="list"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.ForEachNearObjects``1(System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.ForEachNearObjects``1(System.Single,System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.ForEachNearObjectsRect``1(System.Single,System.Single,System.Single,System.Single,CommonAI.RTS.SpaceDivision.ObjectForEachAction{``0})">
            <summary>
            获取当前坐标附近的所有单位
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="indexer"></param>
            <returns>is cancel</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getObjectsRectRange``1(CommonAI.Zone.Instance.Collider.ObjectBodyTouchRect,System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.List{``0},CommonAI.Zone.Helper.ObjectAoiStatus)">
            <summary>
            获取【矩形】范围内的所有单位
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="list"></param>
            <param name="aoi"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getObjectsRoundRange``1(CommonAI.Zone.Instance.Collider.ObjectBodyTouchRound,System.Single,System.Single,System.Single,System.Collections.Generic.List{``0},CommonAI.Zone.Helper.ObjectAoiStatus)">
            <summary>
            获取【圆形】范围内的所有单位
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="list"></param>
            <param name="aoi"></param>   
            <returns></returns> 
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getObjectsFanRange``1(CommonAI.Zone.Instance.Collider.ObjectBodyTouchFan,System.Single,System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.List{``0},CommonAI.Zone.Helper.ObjectAoiStatus)">
            <summary>
            获取【扇形】范围内的所有单位，扇形范围为【弧度】
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="distance"></param>
            <param name="startAngle"></param>
            <param name="endAngle"></param>
            <param name="list"></param>
            <param name="aoi"></param> 
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getObjectsRectLineRange``1(CommonAI.Zone.Instance.Collider.ObjectBodyTouchRectLine,System.Single,System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.List{``0},CommonAI.Zone.Helper.ObjectAoiStatus)">
            <summary>
            获取【直线】穿过范围内的所有单位(粗线段)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="line_r"></param>
            <param name="list"></param>
            <param name="aoi"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getObjectsRoundLineRange``1(CommonAI.Zone.Instance.Collider.ObjectBodyTouchRoundLine,System.Single,System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.List{``0},CommonAI.Zone.Helper.ObjectAoiStatus)">
            <summary>
            单位【运动轨迹】从A点移动到B点经过的碰撞
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="line_r"></param>
            <param name="list"></param>
            <param name="aoi"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSyncFlagsEvent">
            <summary>
            获得场景当前所有装饰物状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSyncUnitsEvent(CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            获得所有单位同步信息，一般在进入场景时同步
            </summary>
            <param name="exclude"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSyncUnitsEventInRange(System.Single,System.Single,System.Single,CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            获得半径内所有单位同步信息
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="exclude"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSyncUnitsEventBySpace(System.Int32,System.Int32,CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            获得空间分割块所有单位同步信息
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
            <param name="exclude"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSyncPosEventInRange(System.Single,System.Single,System.Single)">
            <summary>
            得到半径范围内的所有移动信息
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.GetSyncPosEventBySpace(System.Int32,System.Int32)">
            <summary>
            得到空间分割块范围内的所有移动信息
            </summary>
            <param name="bx"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZone.AllocZoneCount">
            <summary>
            分配实例数量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZone.ActiveZoneCount">
            <summary>
            未释放实例数量
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.#ctor(CommonAI.Zone.TemplateManager,CommonAI.Zone.InstanceZoneListener,CommonAI.Zone.ZoneEditor.SceneData,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="templates"></param>
            <param name="listener">消息接收者</param>
            <param name="data">场景数据</param>
            <param name="spaceDivSize">空间分割参数</param>
            <param name="maxUnitCount">最大单位数</param>
            <param name="randomSeed">随机种子</param>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZone.SyncPos">
            <summary>
            是否发 SyncPosEvent 包
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZone.IsHalfSync">
            <summary>
            是否为低速率网络同步(将优化为半字通信)
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZone.IsSyncZ">
            <summary>
            同步包是否包含Z
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.queueTask(System.Action{CommonAI.Zone.Instance.InstanceZone})">
            <summary>
            【线程安全】向主线程排一个任务
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.AddTimeTask(System.Int32,System.Int32,System.Int32,CommonLang.TickHandler)">
            <summary>
            【线程安全】增加时间任务
            </summary>
            <param name="intervalMS"></param>
            <param name="delayMS"></param>
            <param name="repeat"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.AddTimeDelayMS(System.Int32,CommonLang.TickHandler)">
            <summary>
            【线程安全】增加延时回调方法
            </summary>
            <param name="delayMS"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.AddTimePeriodicMS(System.Int32,CommonLang.TickHandler)">
            <summary>
            【线程安全】增加定时回调方法
            </summary>
            <param name="intervalMS"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.pushAction(CommonAI.Zone.Action)">
            <summary>
            【线程安全】向当前场景输入指令
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.queueEvent(CommonAI.Zone.ZoneEvent,CommonAI.Zone.GameEntity)">
            <summary>
            【内部调用】输出消息
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.queueObjectEvent(CommonAI.Zone.Instance.InstanceZoneObject,CommonAI.Zone.ObjectEvent)">
            <summary>
            【内部调用】输出消息
            </summary>
            <param name="obj"></param>
            <param name="evt"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.sendActorResponse(CommonAI.Zone.Instance.InstanceZoneObject,CommonAI.Zone.ActorRequest,CommonAI.Zone.ActorResponse)">
            <summary>
            立即发送指令
            </summary>
            <param name="obj"></param>
            <param name="req"></param>
            <param name="rsp"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.CreateUnit(CommonAI.Zone.UnitInfo,System.String,System.Byte,System.Int32)">
            <summary>
            创建一个单位实体
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.AddUnit(CommonAI.Zone.UnitInfo,System.String,System.Byte,System.Int32,System.Single,System.Single,System.Single,CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            添加一个单位
            </summary>
            <param name="info">单位模板</param>
            <param name="name">场景中名字（Key）</param>
            <param name="force">单位阵营</param>
            <param name="level">单位等级</param>
            <param name="x">坐标</param>
            <param name="y">坐标</param>
            <param name="direction">方向</param>
            <param name="summoner">召唤者</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.AddUnit(CommonAI.Zone.UnitInfo,System.String,System.Byte,System.Int32,System.Single,System.Single,System.Single,CommonAI.Zone.AddUnitEvent@,CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            添加一个单位
            </summary>
            <param name="info">单位模板</param>
            <param name="name">场景中名字（Key）</param>
            <param name="force">单位阵营</param>
            <param name="level">单位等级</param>
            <param name="x">坐标</param>
            <param name="y">坐标</param>
            <param name="direction">方向</param>
            <param name="add">输出事件</param>
            <param name="summoner">召唤者</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.AddSpell(CommonAI.Zone.SpellTemplate,CommonAI.Zone.LaunchSpell,CommonAI.Zone.Instance.InstanceZoneObject,CommonAI.Zone.Instance.InstanceUnit,System.UInt32,CommonLang.Vector.Vector2,System.Single,System.Single,System.Single,CommonAI.Zone.Helper.SpellChainLevelInfo)">
            <summary>
            添加一个法术或飞行道具
            </summary>
            <param name="template"></param>
            <param name="launch"></param>
            <param name="sender"></param>
            <param name="launcher">此法术的最初发起者</param>
            <param name="target_obj_id"></param>
            <param name="targetPos"></param>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="direction"></param>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.IsTeammates(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            获得两个对象是否是队友
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.IsVisibleAOI(CommonAI.Zone.Instance.InstanceZoneObject,CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            测试是否可见，单位间可交互（AOI）
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.IsAttackable(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.SkillTemplate.CastTarget,CommonAI.Zone.Helper.AttackReason,CommonAI.Zone.ITemplateData)">
            <summary>
            测试是否可攻击
            </summary>
            <param name="src"></param>
            <param name="target"></param>
            <param name="expectTarget"></param>
            <param name="reason"></param>
            <param name="weapon"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.getAttackableUnits(CommonAI.Zone.Instance.InstanceUnit,System.Collections.Generic.List{CommonAI.Zone.Instance.InstanceUnit},CommonAI.Zone.SkillTemplate.CastTarget,CommonAI.Zone.Helper.AttackReason,CommonAI.Zone.ITemplateData)">
            <summary>
            扫描所有可攻击对象
            </summary>
            <param name="src"></param>
            <param name="list"></param>
            <param name="expectTarget"></param>
            <param name="reason"></param>
            <param name="weapon"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.unitAttackSingle(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource,CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.SkillTemplate.CastTarget)">
            <summary>
            对单个单位攻击。
            </summary>
            <param name="src"></param>
            <param name="attack"></param>
            <param name="target"></param>
            <param name="expectTarget">判断IsAttackable</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.unitAttack(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource,System.Collections.Generic.List{CommonAI.Zone.Instance.InstanceUnit},CommonAI.Zone.SkillTemplate.CastTarget)">
            <summary>
            某个单位对指定列表里的 IsAttackable 单位发起攻击。
            此操作会修改List
            </summary>
            <param name="src"></param>
            <param name="attack"></param>
            <param name="list">调用完成后，列表中未命中单位会自动移除。</param>
            <param name="expectTarget">判断IsAttackable</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.unitAttackDirect(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource,System.Collections.Generic.List{CommonAI.Zone.Instance.InstanceUnit})">
            <summary>
            直接对列表中的单位攻击，不做任何判断。
            </summary>
            <param name="src"></param>
            <param name="attack"></param>
            <param name="list"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.unitAttackRound(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource,System.Single,CommonAI.Zone.SkillTemplate.CastTarget)">
            <summary>
            某个单位发起周身攻击
            </summary>
            <param name="src"></param>
            <param name="attack"></param>
            <param name="range"></param>
            <param name="expectTarget"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.unitAttackFan(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource,System.Single,System.Single,System.Single,CommonAI.Zone.SkillTemplate.CastTarget)">
            <summary>
            某个单位发起扇形范围攻击
            </summary>
            <param name="src"></param>
            <param name="attack"></param>
            <param name="direction"></param>
            <param name="range"></param>
            <param name="angle"></param>
            <param name="expectTarget"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.SeekSpellAttackable(CommonAI.Zone.Instance.InstanceSpell,System.Single,System.Single,System.Single,CommonAI.Zone.SkillTemplate.CastTarget,CommonAI.Zone.SpellTemplate.SeekingExpect,CommonAI.Zone.Helper.SpellChainLevelInfo)">
            <summary>
            锁定范围内指定目标
            </summary>
            <param name="spell"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="range"></param>
            <param name="expectTarget"></param>
            <param name="expectSeeking"></param>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.gs_OnQuestAccepted(System.String,System.String)">
            <summary>
            【第三方系统通知】任务已接受
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.gs_OnQuestCommitted(System.String,System.String)">
            <summary>
            【第三方系统通知】任务已完成
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.gs_OnQuestDropped(System.String,System.String)">
            <summary>
            【第三方系统通知】任务已放弃
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.gs_OnQuestStatusChanged(System.String,System.String,System.String,System.String)">
            <summary>
            【第三方系统通知】任务状态已改变
            </summary>
            <param name="playerUUID"></param>
            <param name="quest"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.doAcceptQuest(CommonAI.Zone.Instance.InstancePlayer,System.String,System.String)">
            <summary>
            本地通知游戏服
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.doCommitQuest(CommonAI.Zone.Instance.InstancePlayer,System.String,System.String)">
            <summary>
            本地通知游戏服
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.doDropQuest(CommonAI.Zone.Instance.InstancePlayer,System.String,System.String)">
            <summary>
            本地通知游戏服
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
            <param name="args"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZone.doUpdateQuestStatus(CommonAI.Zone.Instance.InstancePlayer,System.String,System.String,System.String)">
            <summary>
            本地通知游戏服
            </summary>
            <param name="player"></param>
            <param name="quest"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ISummonedUnit">
            <summary>
            召唤单位
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.ISummonedUnit.SummonerUnit">
            <summary>
            主人
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.IGuardUnit">
            <summary>
            所有自动电脑AI
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceTriggerUnit">
            <summary>
            场景内机关
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit">
            <summary>
            所有常态状态（Buff，技能，被动系）
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.AddMoveSpeedPct(System.Single)">
            <summary>
            设置当前移动速度加成
            基础速度*(1 + add / 100f)
            </summary>
            <param name="add"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetMoveSpeed(System.Single)">
            <summary>
            直接设置移动速度
            </summary>
            <param name="speed"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetSkillCdReduce(System.Single)">
            <summary>
            直接设置当前技能cd减少
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetControledTimeReduce(System.Single)">
            <summary>
            直接设置受到控制效果的持续时间减少
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetSkillActionSpeedRate(System.Single)">
            <summary>
            设置所有技能动作速度加成
            </summary>
            <param name="rate"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetFastCastRate(System.Single)">
            <summary>
            设置当前快速施法速度(基准0)(1是1倍速)
            </summary>
            <param name="fcr"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetVisibleInfo(CommonAI.ZoneClient.IUnitVisibleData)">
            <summary>
            设置单位显示信息
            </summary>
            <param name="visible_data"></param>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.CurrentActionStatus">
            <summary>
            当前动做主状态
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.CurrentActionSubstate">
            <summary>
            当前动做子状态
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.State.onBlock(CommonAI.Zone.Instance.InstanceUnit.State)">
            当前状态是否可以被新状态打断
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateIdle">
            <summary>
            待机状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateIdleMove">
            <summary>
            浪
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateIdleMove.FindTargetPos">
            <summary>
            搜索要去的地方
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateMove">
            <summary>
            移动状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateSkill">
            <summary>
            释放技能状态
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.StateSkill.IsDone">
            <summary>
            技能是否完结
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.StateSkill.IsChanting">
            <summary>
            是否在吟唱中
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.StateSkill.ActionSpeed">
            <summary>
            动作加速因子
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.StateSkill.StopFaceTo">
            <summary>
            技能释放结束后的朝向
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.StateSkill.ActionTotalTimeMS">
            <summary>
            动作总时间
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.tryLaunch">
            <summary>
            释放前判断
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.doHitAttack(CommonAI.Zone.AttackProp)">
            <summary>
            近战攻击
            </summary>
            <param name="attack"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.doBodyHit(CommonAI.Zone.UnitActionData)">
            <summary>
            身体攻击
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.doBodyBlock(CommonAI.Zone.UnitActionData)">
            <summary>
            防止技能位移导致单位重合
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.doMoveToTarget(CommonAI.Zone.UnitActionData)">
            <summary>
            移动到目标面前
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.checkTargetRange">
            <summary>
            检测目标距离
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.checkMoveToTarget(CommonAI.Zone.UnitActionData)">
            <summary>
            检测冲锋距离
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateSkill.checkJumpToTarget(CommonAI.Zone.UnitActionData)">
            <summary>
            检测跳跃速度
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StatePickObject.SetCheckTargetAcvite(CommonAI.Zone.Instance.InstanceUnit.StatePickObject.OnCheckPickable)">
            <summary>
            设置目标检测状态方法
            </summary>
            <param name="check">check返回True，终止状态机。</param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateDamage">
            <summary>
            被击中受击过程
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateDamage.doFlyDownAttack">
            <summary>
            自己落地摔一下
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateDamage.doBodyAttack">
            <summary>
            飞行过程中打别人
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateDead">
            <summary>
            死亡状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateRebirth">
            <summary>
            复活
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateStun">
            <summary>
            眩晕状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateMoveNoneControllable">
            <summary>
            状态限制移动
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateMoveNoneControllable.FindTargetPos">
            <summary>
            搜索要去的地方
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateEscape">
            <summary>
            逃跑状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateChaos">
            <summary>
            混乱状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateFollow">
            <summary>
            移动状态
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.StateFollow.StartMoveHoldTimeMS">
            <summary>
            Hold到Move之间的检测间隔
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateFollow.CheckTargetInMinRange">
            <summary>
            检查目标是否在跟随范围内。
            检测为True，停止移动。
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateFollow.CheckTargetInMaxRange">
            <summary>
            检查目标是否在跟随范围内。
            检测为False，开始移动。
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateFollow.onInRangeChanged">
            <summary>
            行为改变
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateFollow.onUpdateFollowed(CommonLang.Vector.IPositionObject)">
            <summary>
            目标已经被追踪到
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateFollow.onChangedToMove(CommonLang.Vector.IPositionObject)">
            <summary>
            开始移动
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StateFollow.onChangedToHold(CommonLang.Vector.IPositionObject)">
            <summary>
            changeToHold
            </summary>
            <param name="target"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateFollowObject">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateFollowAndGuard">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateFollowAndAttack">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.StateFollowAndAttack.IsActive">
            <summary>
            是否追踪
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateFollowAndPickObject">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateFollowAndPickItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateAttackTo">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateGuardInPosition">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateBackToPosition">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.ForceStateMoveTo">
            <summary>
            强制移动到目标点，一般用于剧情动画
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.Statistic">
            <summary>
            统计信息
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mIntersectMap">
            <summary>
            当前单位是否地图阻挡
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mIntersectObj">
            <summary>
            当前单位是否单位阻挡
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mDeadTime">
            <summary>
            单位最后死亡时间
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mRecoveryTime">
            <summary>
            自动恢复计数器 
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.Virtual">
            <summary>
            扩展功能绑定接口
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.Properties">
            <summary>
            扩展数据
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsPlayer">
            <summary>
            是否为玩家
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsNature">
            <summary>
            是否中立
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsActive">
            <summary>
            此单位是否能被攻击并且活着
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsAttackable">
            <summary>
            此单位是否可以被打到，包括鞭尸
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsNoneSkill">
            <summary>
            此单位是否无技能
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsSkillControllableByServer">
            <summary>
            技能可产生位移，或者多段由服务器决定
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsControllable">
            <summary>
            单位是否可控
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.ExtProp">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.VisibleInfo">
            <summary>
            用于显示的，单位横向数据
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.CurrentState">
            <summary>
            当前状态机
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.NextState">
            <summary>
            下一个状态
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsStateDead">
            <summary>
            死亡状态可能的状态机，一般配合<see cref="P:CommonAI.Zone.Instance.InstanceUnit.IsDead"/>使用
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.onAction(CommonAI.Zone.ObjectAction)">
            <summary>
            收到协议
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.onNewStateBeginChange(CommonAI.Zone.Instance.InstanceUnit.State,CommonAI.Zone.Instance.InstanceUnit.State@)">
            <summary>
            新的状态将要切换时回调
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.onStateChanged(CommonAI.Zone.Instance.InstanceUnit.State,CommonAI.Zone.Instance.InstanceUnit.State)">
            <summary>
            状态已切换时回调
            </summary>
            <param name="old_state"></param>
            <param name="state"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.doHitAttack(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource)">
            <summary>
            单位被攻击核心函数，里面处理手机状态，死亡状态
            </summary>
            <param name="attacker"></param>
            <param name="source"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.doHitAttackEndEffect(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource)">
            <summary>
            死亡后自爆或者触发法术
            </summary>
            <param name="attacker"></param>
            <param name="source"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.ReduceHP(System.Int32,CommonAI.Zone.Instance.InstanceUnit,System.Boolean,CommonAI.Zone.UnitHitEvent)">
            <summary>
            有伤害源的扣血
            </summary>
            <param name="hp"></param>
            <param name="attacker"></param>
            <param name="sendHit"></param>
            <param name="hitMessage"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.transport(System.Single,System.Single)">
            <summary>
            瞬移
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startIdle">
            <summary>
            单位待机
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startRebirth(System.Int32,System.Int32)">
            <summary>
            直接复活
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startMoveTo(System.Single,System.Single)">
            <summary>
            单位移动
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startAdjustLaunchSkill(CommonAI.Zone.SkillTemplate,CommonAI.Zone.Instance.InstanceUnit,System.Predicate{CommonAI.Zone.Instance.InstanceUnit.StateMove})">
            <summary>
            调整射击位置
            </summary>
            <param name="expect_skill"></param>
            <param name="target"></param>
            <param name="onEndAction"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startFollowTo(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            单位移动
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startEscape(System.Int32,System.Single)">
            <summary>
            单位逃跑
            </summary>
            <param name="timeMS"></param>
            <param name="distance"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startPickProgressSelf(System.Int32,CommonAI.Zone.Instance.InstanceUnit.StatePickObject.OnPickDone,System.String)">
            <summary>
            和自身交互（搓炉石）
            </summary>
            <param name="timeMS"></param>
            <param name="done"></param>
            <param name="status"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.startPickProgressObject(CommonAI.Zone.Instance.InstanceZoneObject,System.Int32,CommonAI.Zone.Instance.InstanceUnit.StatePickObject.OnPickDone,System.String)">
            <summary>
            和目标交互
            </summary>
            <param name="item"></param>
            <param name="timeMS"></param>
            <param name="done"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.IsTargetInSkillRange(CommonAI.Zone.SkillTemplate,CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            判断当前目标在攻击范围内
            </summary>
            <param name="skill"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.getAvailableSkill(CommonAI.Zone.SkillTemplate.CastTarget)">
            <summary>
            获得可用的技能
            </summary>
            <param name="expect"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.getSkillAttackableFirstTarget(CommonAI.Zone.SkillTemplate,CommonAI.Zone.Helper.AttackReason,System.Boolean@)">
            <summary>
            获取当前最适合攻击的目标
            </summary>
            <param name="skill"></param>
            <param name="reason"></param>
            <param name="directionChange"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.launchDefaultSkill(CommonAI.Zone.Instance.InstanceUnit.LaunchSkillParam)">
            <summary>
            释放默认技能
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.launchSkill(System.Int32,CommonAI.Zone.Instance.InstanceUnit.LaunchSkillParam)">
            <summary>
            单位释放技能
            </summary>
            <param name="skillID"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.launchRandomSkill(CommonAI.Zone.SkillTemplate.CastTarget,CommonAI.Zone.Instance.InstanceUnit.LaunchSkillParam)">
            <summary>
            释放随机技能，一般用于AI
            </summary>
            <param name="expectTarget"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.tryLaunchRandomSkillAndCancelCurrentSkill(CommonAI.Zone.Instance.InstanceUnit,System.Boolean)">
            <summary>
            尝试取消当前技能，打出连击
            </summary>
            <param name="target"></param>
            <param name="autoFocusNearTarget"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.tryFollowAndLaunchRandomSkillToTargetInRange(System.Single,System.Boolean)">
            <summary>
            尝试在范围内找到目标释放技能，并进入StateFollowAndAttack，自己走过去打。
            </summary>
            <param name="range"></param>
            <param name="skill_auto_launchable"></param>
            <returns></returns>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsVisible">
            <summary>
            是否可被发现
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsInvincible">
            <summary>
            是否无敌
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsNoneBlock">
            <summary>
            此单位是否霸体
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsStun">
            <summary>
            是否为眩晕
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsSilent">
            <summary>
            是否沉默
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.RegistMultiTimeLine(System.Int32@)">
            <summary>
            注册自定义MultiTimeLine
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.GetTimeLine(System.Int32)">
            <summary>
            获取指定ID TimeLine
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.IsTimeLineEnable(System.Int32)">
            <summary>
            指定TimeLine是否还有任务
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.GetTimeLineIndex(CommonLang.MultiTimeLine)">
            <summary>
            获取指定 TimeLine 的 ID
            </summary>
            <param name="timeline"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.AddTimeLineTask(System.Int32,System.Int32)">
            <summary>
            添加TimeLine任务
            </summary>
            <param name="index"></param>
            <param name="timeMS"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.RemoveTimeLineTask(System.Int32,CommonLang.TimeExpire{System.Int32})">
            <summary>
            强制移除TimeLine任务
            </summary>
            <param name="index"></param>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mNoneBlockTimeMS">
            <summary>
            被击中后不会被中断（霸体），是一个叠加值
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mStunTimeMS">
            <summary>
            眩晕，移动限制状态，是一个叠加值
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mInvisibleTimeMS">
            <summary>
            隐形，是一个叠加值
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mInvincibleTimeMS">
            <summary>
            无敌时间，是个叠加值
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.mSilentTimeMS">
            <summary>
            沉默时间，是个爹价值
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetNoneBlockTimeMS(System.Int32)">
            <summary>
            设置霸体时间，如果当前已霸体，则取最大值
            </summary>
            <param name="timeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetStunTimeMS(System.Int32)">
            <summary>
            设置眩晕时间，如果当前已眩晕，则取最大值
            </summary>
            <param name="timeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetInvisibleTimeMS(System.Int32)">
            <summary>
            设置隐身时间，如果当前已隐身，则取最大值
            </summary>
            <param name="timeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetInvincibleTimeMS(System.Int32)">
            <summary>
            设置无敌时间，如果当前已无敌，则取最大值
            </summary>
            <param name="timeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetSilentTimeMS(System.Int32)">
            <summary>
            设置沉默时间
            </summary>
            <param name="timeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.GetSyncSkillActives">
            <summary>
            初始化技能可用性
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.ResetSkills">
            <summary>
            重置当前单位技能，当前单位技能重置为单位模板指定技能
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.InitSkills(CommonAI.Zone.LaunchSkill,CommonAI.Zone.LaunchSkill[])">
            <summary>
            设置当前单位技能
            </summary>
            <param name="baseSkill"></param>
            <param name="skills"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.InitSkills(CommonAI.Zone.SkillTemplate,CommonAI.Zone.SkillTemplate[])">
            <summary>
            设置当前单位技能
            </summary>
            <param name="baseSkill"></param>
            <param name="skills"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.getRandomLaunchableExpectSkill(CommonAI.Zone.SkillTemplate.CastTarget)">
            <summary>
            获得当前随机可释放的技能
            </summary>
            <param name="expectTarget"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.getRandomLaunchableExpectSkill(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.SkillTemplate.CastTarget,CommonAI.Zone.Helper.AttackReason,System.Boolean)">
            <summary>
            获得当前随机可释放的技能
            </summary>
            <param name="target"></param>
            <param name="expectTarget"></param>
            <param name="reason"></param>
            <param name="checkRange"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.getRandomLaunchableSkill">
            <summary>
            获得当前随机可释放的技能
            </summary>
            <returns></returns>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.SkillState.pass_time">
            <summary>
            从技能开始时的逝去时间
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.SkillState.stop_time">
            <summary>
            最后CD完成时间
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.SkillState.action_step">
            <summary>
            如果是多段攻击，记录段数
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.SkillState.auto_increase_action_step">
            <summary>
            多段攻击自动下段
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.SkillState.is_cd">
            <summary>
            当前是否在冷却
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceUnit.SkillState.state">
            <summary>
            当前释放技能时的状态机
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.SkillState.IsCD">
            <summary>
            当前技能是否在转CD
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.SkillState.IsDone">
            <summary>
            当前技能是否放完
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.SkillState.TotalCDTime">
            <summary>
            CD 需要的总时间
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SkillState.checkTargetRange(CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            检测目标距离
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SkillState.SetFastActionRate(System.Single)">
            <summary>
            设置技能动作播放速度比率
            </summary>
            <param name="rate"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SkillState.SetActionIndex(System.Byte)">
            <summary>
            指定技能动作
            </summary>
            <param name="step"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SkillState.SetAutoIncreaseActionIndex(System.Boolean)">
            <summary>
            设置是否自动控制多段攻击（如果要手动指定播放技能，则设置为False）
            </summary>
            <param name="at"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.SetSkillActive(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            设置技能可用性
            </summary>
            <param name="skillTemplateID"></param>
            <param name="active"></param>
            <param name="pause_on_deactive"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.ClearSkillCD(System.Int32)">
            <summary>
            清除技能CD
            </summary>
            <param name="skillTemplateID"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.ClearAllSkillCD">
            <summary>
            清除所有技能CD
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.DecreaseSkillCD(System.Int32,System.Int32)">
            <summary>
            减少当前CD固定时间
            </summary>
            <param name="skillTemplateID"></param>
            <param name="updateTimeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.DecreaseAllSkillCD(System.Int32)">
            <summary>
            减少当前CD固定时间
            </summary>
            <param name="updateTimeMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.BuffMap.ForEachRead(System.Predicate{CommonAI.Zone.Instance.InstanceUnit.BuffState})">
            <summary>
            
            </summary>
            <param name="action">返回true终止迭代!</param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.BuffMap.ForEachWrite(System.Predicate{CommonAI.Zone.Instance.InstanceUnit.BuffState})">
            <summary>
            
            </summary>
            <param name="action">返回true终止迭代!</param>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.IsBuffChangeSkills">
            <summary>
            是否存在技能变身BUFF
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.GetChangeSkillBuff">
            <summary>
            获得技能变身BUFF
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.addBuff(CommonAI.Zone.BuffTemplate,CommonAI.Zone.Instance.InstanceUnit,System.Boolean)">
            <summary>
            增加Buff
            </summary>
            <param name="buff"></param>
            <param name="sender"></param>
            <param name="equip">如果为True，则表示Buff不受时间CD控制</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.removeBuffByCatgory(System.Int32,System.Int32,System.Int32)">
            <summary>
            移除互斥技能，根据优先级
            </summary>
            <param name="buffID"></param>
            <param name="catgory"></param>
            <param name="priority"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.TriggerState">
            <summary>
            保存被动状态
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceUnit.TriggerState.IsActive">
            <summary>
            是否处于冷却状态
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.TryStartDamageTriggers(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource)">
            <summary>
            如果被攻击，尝试启动单位触发器
            </summary>
            <param name="attacker"></param>
            <param name="source"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.TryStartAttackTriggers(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Formula.AttackSource)">
            <summary>
            如果攻击别人，尝试启动触发器
            </summary>
            <param name="target"></param>
            <param name="source"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.IsItemCoolDown(System.Int32)">
            <summary>
            检测此道具是否在CD
            </summary>
            <param name="itemTemplateID"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.AddItemToEmptyInventory(CommonAI.Zone.ItemTemplate,System.Int32)">
            <summary>
            添加道具到白空的背包
            </summary>
            <param name="item"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.AddItemToInventory(CommonAI.Zone.ItemTemplate,System.Int32,System.Int32)">
            <summary>
            添加道具到指定背包
            </summary>
            <param name="item"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.AddItemToInventory(System.Int32,System.Int32,System.Int32)">
            <summary>
            添加道具到指定背包
            </summary>
            <param name="itemTemplateID"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.UseInventoryItem(System.Int32,System.Int32)">
            <summary>
            使用背包的道具
            </summary>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.ContainsItemInInventory(System.Int32)">
            <summary>
            背包内是否有此道具
            </summary>
            <param name="itemTemplateID"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StartFly(System.Object,System.Single,System.Single,System.Single)">
            <summary>
            开始自由落体
            </summary>
            <param name="launcher"></param>
            <param name="speedZ"></param>
            <param name="gravity"></param>
            <param name="zlimit"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceUnit.StartHitMove(System.Object,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            开始复杂移动
            </summary>
            <param name="launcher"></param>
            <param name="direction"></param>
            <param name="rotateSpeedSEC"></param>
            <param name="expectlTimeMS"></param>
            <param name="moveSpeedSEC"></param>
            <param name="moveSpeedAdd"></param>
            <param name="moveSpeedAcc"></param>
            <param name="isNoneTouch"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.FallingDown">
            <summary>
            落体运动
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.UpdateHandler">
            <summary>
            单位更新触发 
            </summary>
            <param name="unit"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.HandleActionHandler">
            <summary>
            收到网络协议
            </summary>
            <param name="unit"></param>
            <param name="act"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.AddedHandler">
            <summary>
            单位添加到场景
            </summary>
            <param name="unit"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.RemovedHandler">
            <summary>
            单位被移除触发 
            </summary>
            <param name="unit"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.ActivatedHandler">
            <summary>
            当单位可攻击时触发，如果单位有出生动画，则动画完结后触发。
            </summary>
            <param name="unit"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.DeadHandler">
            <summary>
            单位死亡触发
            </summary>
            <param name="unit"></param>
            <param name="attacker"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.RebirthHandler">
            <summary>
            单位重生触发
            </summary>
            <param name="unit"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.DamageHandler">
            <summary>
            单位受到攻击触发
            </summary>
            <param name="obj"></param>
            <param name="attacker"></param>
            <param name="hp"></param>
            <param name="source"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.AttackHandler">
            <summary>
            单位打到别人触发
            </summary>
            <param name="obj"></param>
            <param name="target"></param>
            <param name="hp"></param>
            <param name="source"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.StateChangedHandler">
            <summary>
            单位状态机切换
            </summary>
            <param name="old_state"></param>
            <param name="new_state"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.SkillChangedHandler">
            <summary>
            技能改变
            </summary>
            <param name="obj"></param>
            <param name="baseSkill"></param>
            <param name="skills"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.TryPickUnitHandler">
            <summary>
            尝试Pick单位
            </summary>
            <param name="obj"></param>
            <param name="picking"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.PickUnitHandler">
            <summary>
            单位和其他单位产生交互
            </summary>
            <param name="obj"></param>
            <param name="pickable"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceUnit.TryAddSkill">
            <summary>
            单位尝试添加技能，可重置技能属性
            </summary>
            <param name="unit"></param>
            <param name="sk"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.Collider.ObjectBodyTouchRound">
            <summary>
            单位和【圆形】碰撞
            </summary>
            <param name="o"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.Collider.ObjectBodyTouchFan">
            <summary>
            单位和【扇形】碰撞
            </summary>
            <param name="o"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="sa"></param>
            <param name="ea"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.Collider.ObjectBodyTouchRectLine">
            <summary>
            单位和【直线】碰撞(粗线段)
            </summary>
            <param name="o"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="line_r"></param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.Collider.ObjectBodyTouchRoundLine">
            <summary>
            单位【运动轨迹】从A点移动到B点经过的碰撞(圆角粗线段)
            </summary>
            <param name="o"></param>
            <param name="sx"></param>
            <param name="sy"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="line_r">粗度</param>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.Instance.Collider.ObjectBodyTouchRect">
            <summary>
            单位和【矩形】碰撞
            </summary>
            <param name="o"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.Collider.Object_BlockBody_TouchRoundLine(CommonAI.Zone.Instance.InstanceZoneObject,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            圆角粗线段
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.Collider.Object_HitBody_TouchRoundLine(CommonAI.Zone.Instance.InstanceZoneObject,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            圆角粗线段
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.Collider.Object_BlockBody_TouchRectLine(CommonAI.Zone.Instance.InstanceZoneObject,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            方角粗线段
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.Collider.Object_HitBody_TouchRectLine(CommonAI.Zone.Instance.InstanceZoneObject,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            方角粗线段
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.Helper.IUnitStatistic.ToUnitStatisticData">
            <summary>
            转存可序列化协议对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.DeadCount">
            <summary>
            死亡次数
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.KillPlayerCount">
            <summary>
            总共杀死玩家数量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.KillUnitCount">
            <summary>
            总共杀死单位数量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.SelfDamage">
            <summary>
            承受伤害
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.TotalDamage">
            <summary>
            对所有单位输出的总伤害
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.PlayerDamage">
            <summary>
            对玩家输出的总伤害
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.TotalHealing">
            <summary>
            对所有单位输出的总治疗量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.Helper.IUnitStatistic.PlayerHealing">
            <summary>
            对玩家输出的总治疗量
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.Helper.IUnitStatistic.GetKillUnitCount(CommonAI.Zone.UnitInfo.UnitType)">
            <summary>
            总共杀死特定类型单位数量
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.Helper.IUnitStatistic.onDead(CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            当自己死亡
            </summary>
            <param name="killer"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.Helper.IUnitStatistic.onKill(CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            干掉别人
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.Helper.IUnitStatistic.onDamage(CommonAI.Zone.Instance.InstanceUnit,System.Int32)">
            <summary>
            当受到伤害
            </summary>
            <param name="attacker"></param>
            <param name="reduceHP"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.Helper.IUnitStatistic.onAttack(CommonAI.Zone.Instance.InstanceUnit,System.Int32)">
            <summary>
            当造成伤害
            </summary>
            <param name="target"></param>
            <param name="reduceHP"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.Helper.IUnitStatistic.onUseItem(CommonAI.Zone.ItemTemplate)">
            <summary>
            当使用道具
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceItem">
            <summary>
            可拾取的道具
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceItem.TryPickItem">
            <summary>
            单位尝试检取道具监听，
            返回False禁止检取
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceFlag.look_at_target(System.String)">
            <summary>
            Show Check Point
            </summary>
            <param name="target"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceFlag.InitHandler">
            <summary>
            触发器开始
            </summary>
            <param name="flag"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceFlag.FlagEnabledHandler">
            <summary>
            触发器被开启
            </summary>
            <param name="flag"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceFlag.FlagDisabledHandler">
            <summary>
            触发器被关闭
            </summary>
            <param name="flag"></param>
        </member>
        <member name="P:CommonAI.Zone.Instance.ZoneRegion.RadiusSize">
            <summary>
            Center of the position
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.ZoneRegion.GetSpawnTriggers">
            <summary>
            获取此区域绑定的怪物刷新点
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.ZoneRegion.GetSpawnTrigger(System.String)">
            <summary>   
            获取此区域绑定的怪物刷新点
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:CommonAI.Zone.Instance.ZoneRegion.IsSpawnOver">
            <summary>
            检测是否所有刷怪点都结束
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.ZoneRegion.IsSpawnNoneAlive">
            <summary>
            检测是否所有刷怪点都无存活
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.ZoneRegion.getSpawnedObjectsInRegion``1(System.Collections.Generic.List{``0})">
            <summary>
            获得所有由此刷新点产生的单位
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ZoneRegion.UnitEnterHandler">
            <summary>
            某单位进入此区域
            </summary>
            <param name="region"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ZoneRegion.UnitLeaveHandler">
            <summary>
            某单位离开此区域
            </summary>
            <param name="region"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ZoneRegion.ZoneUpdateHandler">
            <summary>
            区域更新
            </summary>
            <param name="region"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ZoneRegion.SpawnOverHandler">
            <summary>
            刷新点刷新完毕
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.ZoneRegion.ListenUnitEnterOnce(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.ZoneRegion.UnitEnterHandler)">
            <summary>
            监听单位进入一次，触发器只触发一次
            </summary>
            <param name="unit"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.ZoneRegion.ListenUnitLeaveOnce(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.ZoneRegion.UnitLeaveHandler)">
            <summary>
            监听单位离开一次，触发器只触发一次
            </summary>
            <param name="unit"></param>
            <param name="handler"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ZoneArea.UnitEnterHandler">
            <summary>
            某单位进入此区域
            </summary>
            <param name="area"></param>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.ZoneArea.UnitLeaveHandler">
            <summary>
            某单位离开此区域
            </summary>
            <param name="area"></param>
            <param name="obj"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.ZoneArea.ListenUnitEnterOnce(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.ZoneArea.UnitEnterHandler)">
            <summary>
            监听单位进入一次，触发器只触发一次
            </summary>
            <param name="unit"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.ZoneArea.ListenUnitLeaveOnce(CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.ZoneArea.UnitLeaveHandler)">
            <summary>
            监听单位离开一次，触发器只触发一次
            </summary>
            <param name="unit"></param>
            <param name="handler"></param>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceSpell.Launcher">
            <summary>
            最先技能的发起者
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceSpell.Sender">
            <summary>
            技能的出口，比如技能触发技能，则Sender就是一个Spell
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceSpell.ChainLevel">
            <summary>
            连锁等级
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceSpell.updateMotion">
            <summary>
            更新移动行为
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceSpell.updateKeyFrames">
            <summary>
            更新范围检测以及关键帧
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.ActiveObjectCount">
            <summary>
            活动实例数量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.AllocObjectCount">
            <summary>
            分配实例数量
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.CurrentSpaceCellNode">
            <summary>
            获得当前空间分割节点
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Instance.InstanceZoneObject.IsStaticBlockable">
            <summary>
            是否为静态阻挡物
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.IsInZone">
            <summary>
            是否已被添加到场景
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.Enable">
            <summary>
            是否未被从场景移除
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.RadiusSize">
            <summary>
            BodyBlockSize
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.Direction">
            <summary>
            朝向
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.PassTimeMS">
            <summary>
            总共存活了多久
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.UnitTag">
            <summary>
            从编辑器继承过来的参数
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.IsPaused">
            <summary>
            是否被标记为暂停逻辑
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.AoiStatus">
            <summary>
            IAO标记
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.Pause(System.Boolean,System.Int32)">
            <summary>
            暂停逻辑
            </summary>
            <param name="pause"></param>
            <param name="timeMS"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZoneObject.ObjectAddedHandler">
            <summary>
            单位添加到场景
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZoneObject.ObjectRemovedHandler">
            <summary>
            单位被移除触发 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZoneObject.ObjectSpaceChangedHandler">
            <summary>
            单位空间分割区域改变时触发
            </summary>
            <param name="obj"></param>
            <param name="old_node"></param>
            <param name="new_node"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZoneObject.ObjectAreaChangedHandler">
            <summary>
            单位空间分割区域改变时触发
            </summary>
            <param name="obj"></param>
            <param name="old_node"></param>
            <param name="new_node"></param>
        </member>
        <member name="T:CommonAI.Zone.Instance.InstanceZoneObject.ObjectSendingEventHandler">
            <summary>
            单位发送事件时触发
            </summary>
            <param name="obj"></param>
            <param name="evt"></param>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.IntersectMap">
            <summary>
            地图阻挡 ?
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.IntersectObj">
            <summary>
            单位阻挡
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.Moveable">
            <summary>
            是否可以动
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.BodyBlockSize">
            <summary>
            自身体积（半径）
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.BodyHitSize">
            <summary>
            受击半径
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.BodyHeight">
            <summary>
            身体高度
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.ClientVisible">
            <summary>
            是否同步客户端
            </summary>
        </member>
        <member name="P:CommonAI.Zone.Instance.InstanceZoneObject.SyncPos">
            <summary>
            是否允许帧同步
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.GenSyncInfo(System.Boolean)">
            <summary>
            获取同步信息
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.faceTo(System.Single,System.Single)">
            <summary>
            直接转向
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.faceTo(System.Single)">
            <summary>
            直接转向
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.turn(System.Single)">
            <summary>
            基于当前角度转向
            </summary>
            <param name="add"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.onMoveBlockWithObject(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            在移动时被某个单位阻挡
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.onBlockOther(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            阻挡到其他单位移动
            </summary>
            <param name="obj"></param>
            <returns >通知其他单位自己可以让开</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.flyTo(System.Single,System.Single,System.Int32)">
            <summary>
            无碰撞移动
            </summary>
            <param name="direction"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.flyToTarget(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <returns>是否到达终点</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.jumpTo(System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            越过单位跳跃
            </summary>
            <param name="direction"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <param name="ignore_z"></param>
            <returns>是否到达终点</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveBlockTo(System.Single,System.Single,System.Int32)">
            <summary>
            移动到目标点
            </summary>
            <param name="angle"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <returns>可以顺利移动</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveBlockTo(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            移动到目标点
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <returns>可以顺利移动</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveBlock(System.Single,System.Single)">
            <summary>
            尝试碰撞移动偏移量
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveImpactTo(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            挤开对方的移动方式
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <returns>TRUE=无法移动</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveImpact(System.Single,System.Single,System.Int32)">
            <summary>
            挤开对方的移动方式
            </summary>
            <param name="angle"></param>
            <param name="speedSEC"></param>
            <param name="intervalMS"></param>
            <returns>TRUE=无法移动</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveLinearMap(System.Single,System.Single)">
            <summary>
            线性移动，只和地图碰撞
            </summary>
            <param name="distance"></param>
            <param name="angle"></param>
            <returns>和地图碰撞</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveLinearMap2(System.Single,System.Single)">
            <summary>
            线性移动，只和地图碰撞
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns>和地图碰撞</returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.moveLinear(System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            线性移动，不会穿
            </summary>
            <param name="distance"></param>
            <param name="angle"></param>
            <param name="ignore_map"></param>
            <param name="ignore_obj"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.ElasticOtherObjects">
            <summary>
            挤开其他和自己重叠的单位，或者被Weight大于自己的人挤开
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.Instance.InstanceZoneObject.ElasticOtherObject(CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            挤开其他和自己重叠的单位，或者被Weight大于自己的人挤开
            </summary>
            <param name="o"></param>
            <returns>自己发生位移</returns>
        </member>
        <member name="M:CommonAI.Zone.ZoneEditor.EditorTemplates.IsTemplateLoaded(System.Type,System.Int32,System.Object@)">
            <summary>
            判断当前模板是否加载
            </summary>
            <param name="type"></param>
            <param name="templateID"></param>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.ZoneEditor.EditorTemplates.LoadCFG">
            <summary>
            加载配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.ZoneEditor.EditorTemplates.LoadAllTemplates(System.Boolean)">
            <summary>
            重新读取所有模板
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:CommonAI.Zone.ZoneEditor.EditorTemplates.LoadScene(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据ID加载场景
            </summary>
            <param name="id"></param>
            <param name="cache">是否缓存起来（占用内存，一般服务端用）</param>
            <param name="client_data">是否是客户端使用</param>
            <param name="clone">是否克隆(仅cache)</param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.ZoneEditor.EditorTemplates.CacheAllScenes">
            <summary>
            缓存所有场景数据，一般服务器用。消耗内存较大
            </summary>
        </member>
        <member name="M:CommonAI.Zone.ZoneEditor.EditorTemplates.ExistSceneInCache(System.Int32)">
            <summary>
            是否缓存场景
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.ZoneEditor.EditorTemplates.SelectTemplates(System.Object)">
            <summary>
            有选择的递归读取字段标识的所有相关的模板 [TemplateID] [TemplatesID]
            返回资源标记[ResourceID]列表，提供给客户端预加载资源
            </summary>
            <param name="dir"></param>
            <param name="data"></param>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgSetScene">
            <summary>
            地形数据通知
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgPutUnit">
            <summary>
            增加单位数据，如果单位已存在，则更新信息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgPutItem">
            <summary>
            增加物品数据，如果单位已存在，则更新信息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgPutPoint">
            <summary>
            增加单位数据，如果单位已存在，则更新信息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgPutRegion">
            <summary>
            增加单位数据，如果单位已存在，则更新信息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgPutDecoration">
            <summary>
            增加装饰物数据，如果单位已存在，则更新信息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgPutArea">
            <summary>
            增加区域数据，如果单位已存在，则更新信息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgRemoveObject">
            <summary>
            删除一个单位
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgRenameObject">
            <summary>
            单位被重命名
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgSelectObject">
            <summary>
            由编辑器UI层选中一个单位
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgSelectObject.IsLocateCamera">
            <summary>
            摄像机是否聚焦此单位
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgShowTerrain">
            <summary>
            设置是否显示地形阻挡
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgLocateCamera">
            <summary>
            定位摄像机
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgSetTerrainBrush">
            <summary>
            设置笔刷
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.EditorToScene.MsgSetEditorMode">
            <summary>
            设置编辑模式
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspEditorState">
            <summary>
            场景初始化状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspTerrainBrushChanged">
            <summary>
            设置笔刷
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspOnObjectSelected">
            <summary>
            有单位被选中
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspObjectPositionChanged">
            <summary>
            有单位位置改变
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspObjectSizeChanged">
            <summary>
            有单位尺寸改变
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspObjectDirectionChanged">
            <summary>
            有单位方向改变
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspPointLinkChanged">
            <summary>
            路点链接数据改变
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspZoneFlagChanged">
            <summary>
            最终回馈场景地形数据
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspZoneFlagChanged.SceneX">
            <summary>
            场景坐标
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspZoneFlagChanged.SceneY">
            <summary>
            场景坐标
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspZoneFlagChanged.Flag">
            <summary>
            标志
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspZoneFlagBathChanged">
            <summary>
            最终回馈场景地形数据
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.Plugin.SceneToEditor.RspCameraChanged">
            <summary>
            摄像机位置或者尺寸改变
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneEditor.ZoneEvent">
            <summary>
            事件动作触发器
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.Name">
            <summary>
            触发器名字
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.Active">
            <summary>
            启用
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.Comment">
            <summary>
            注释
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.SavePath">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.DelayTimeMS">
            <summary>
            延迟执行
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.LocalVars">
            <summary>
            临时变量
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.Triggers">
            <summary>
            事件触发
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.Conditions">
            <summary>
            条件
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ZoneEditor.ZoneEvent.Actions">
            <summary>
            动作
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.TemplateIDAttribute">
            <summary>
            标识 Field Int32 字段为 类型的模板ID
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.TemplateLevelAttribute">
            <summary>
            标识 Field Int32 字段为 UnitInfo 模板ID的等级
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.TemplatesIDAttribute">
            <summary>
            标识 Field 数组或List字段为 Int32 类型的模板ID
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.ResourceIDAttribute">
            <summary>
            标识 Field 字段为资源文件
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.SceneObjectIDAttribute">
            <summary>
            标识 Field 字段为场景单位 Name
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.SceneEventIDAttribute">
            <summary>
            标识 Field 字段为场景事件触发 Name
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.SceneVarIDAttribute">
            <summary>
            标识 Field 字段为场景环境变量 Key
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.LocalVarIDAttribute">
            <summary>
            标识 Field 字段为临时变量 Key
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.SceneScriptIDAttribute">
            <summary>
            标识 Field 字段为 脚本文件
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.UnitTriggerEventTypeAttribute">
            <summary>
            标识 UnitTrigger （单位被动系） 触发类型。
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.UnitEventIDAttribute">
            <summary>
            标识 Field 字段为单位事件触发 Name
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.ObjectMemberNameAttribute">
            <summary>
            标记对象字段名字，用于AbstractValue取Field
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.LocalizationTextAttribute">
            <summary>
            标记对象字段名字，用于生成Language.csv
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.QuestIDAttribute">
            <summary>
            标记对象字段名字，用于AbstractValue取QuestID
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Attributes.EventTriggerDescAttribute">
            <summary>
            标记 event 是否可以在编辑时反射成事件触发器
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.Attack">
            <summary>
            攻击属性.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.FromSkill">
            <summary>
            技能模板.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.FromSpell">
            <summary>
            法术模板.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.FromBuff">
            <summary>
            BUFF模板.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.FromSkillState">
            <summary>
            技能实际状态.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.FromBuffState">
            <summary>
            BUFF实际状态.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.FromSpellUnit">
            <summary>
            法术实际状态.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutSendEvent">
            <summary>
            是否发送协议
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutHitted">
            <summary>
            是否命中
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutIsDamage">
            <summary>
            是否产生硬直.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutIsCrush">
            <summary>
            是否击溃.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutIsCritical">
            <summary>
            是否暴击.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutHasFly">
            <summary>
            是否击飞.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutHasKnockDown">
            <summary>
            是否击倒.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutKnockDownTimeMS">
            <summary>
            击倒时间.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutHitEffect">
            <summary>
            打击特效.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutExtendsResult">
            <summary>
            扩展模块用于特殊计算.
            </summary>
        </member>
        <member name="F:CommonAI.Zone.Formula.AttackSource.OutClientState">
            <summary>
            用于表示攻击特殊状态：招架、闪避、反伤.
            </summary>
        </member>
        <member name="M:CommonAI.Zone.Formula.IFormula.BindLogger(CommonLang.Log.Logger)">
            <summary>
            绑定日志系统
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:CommonAI.Zone.Formula.IFormula.InitPluginsData(CommonAI.Zone.ZoneEditor.EditorTemplates)">
            <summary>
            游戏加载初始化
            </summary>
            <param name="data_root"></param>
        </member>
        <member name="M:CommonAI.Zone.Formula.IFormula.OnEditorSaving(CommonAI.Zone.ZoneEditor.EditorTemplatesData,System.IO.DirectoryInfo,System.Collections.Generic.List{System.IO.FileInfo},CommonLang.Concurrent.AtomicFloat)">
            <summary>
            编辑器保存时
            </summary>
            <param name="datas"></param>
            <param name="data_root"></param>
            <param name="savedfiles"></param>
            <param name="progress_percent"></param>
        </member>
        <member name="M:CommonAI.Zone.Formula.IFormula.ListXCSVFiles(System.IO.DirectoryInfo,System.Collections.Generic.List{System.IO.FileInfo})">
            <summary>
            列出所有需要转换的XLS文件
            </summary>
            <param name="data_root"></param>
            <param name="xls_files"></param>
        </member>
        <member name="M:CommonAI.Zone.Formula.IFormula.OnEditorPluginSaved(CommonAI.Zone.ZoneEditor.EditorTemplatesData,System.Collections.Generic.List{CommonLang.XCSV.XCSVMeta},System.Collections.Generic.List{System.IO.FileInfo},CommonLang.Concurrent.AtomicFloat)">
            <summary>
            编辑器xls目录保存时
            </summary>
            <param name="datas"></param>
            <param name="xls2csv"></param>
            <param name="savedfiles"></param>
            <param name="progress_percent"></param>
        </member>
        <member name="M:CommonAI.Zone.TerrainDefinitionMap.ContainsValue(System.Int32)">
            <summary>
            去从
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ZoneInfo">
            <summary>
            场景基础数据
            </summary>
        </member>
        <member name="P:CommonAI.Zone.ZoneInfo.TotalWidth">
            <summary>
            地图总宽
            </summary>
        </member>
        <member name="P:CommonAI.Zone.ZoneInfo.TotalHeight">
            <summary>
            地图总高
            </summary>
        </member>
        <member name="P:CommonAI.Zone.ZoneInfo.TerrainMatrix">
            <summary>
            所有地图碰撞块信息
            </summary>
        </member>
        <member name="P:CommonAI.Zone.ZoneInfo.GridCellW">
            <summary>
            地图碰撞格宽
            </summary>
        </member>
        <member name="P:CommonAI.Zone.ZoneInfo.GridCellH">
            <summary>
            地图碰撞格高
            </summary>
        </member>
        <member name="P:CommonAI.Zone.ZoneInfo.XCount">
            <summary>
            地图横向格子数
            </summary>
        </member>
        <member name="P:CommonAI.Zone.ZoneInfo.YCount">
            <summary>
            地图纵向格子数
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitInfo">
            <summary>
            单位模板数据
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitInfo.UnitType">
            <summary>
            单位类型
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.UType">
            <summary>
            单位类型
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.ID">
            <summary>
            模板ID
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.Name">
            <summary>
            单位名字
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.FileName">
            <summary>
            对应的模型文件名
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.BodyHeight">
            <summary>
            身体高度
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.BodySize">
            <summary>
            身体尺寸（半径）
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.BodyHitSize">
            <summary>
            警戒距离范围
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.GuardRange">
            <summary>
            警戒距离范围
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.MoveSpeedSEC">
            <summary>
            移动距离，像素或者码
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.BaseSkillID">
            <summary>
            此单位普通攻击技能
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.Skills">
            <summary>
            此单位绑定的所有技能ID
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.Triggers">
            <summary>
            触发类特效
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.DropItemsSet">
            <summary>
            掉落道具列表
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.LifeTimeMS">
            <summary>
            若是召唤类，则表示存活时间
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.SpawnTimeMS">
            <summary>
            单位出生延时时间，通常播放出生动画
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.DeadTimeMS">
            <summary>
            ‘持续时间
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.RebirthTimeMS">
            <summary>
            复活时间
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitInfo.Properties">
            <summary>
            用户自定义扩展属性
            </summary>
        </member>
        <member name="T:CommonAI.Zone.SkillTemplate">
            <summary>
            技能模板
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SkillTemplate.Name">
            <summary>
            技能名字
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SkillTemplate.ActionQueue">
            <summary>
            攻击动作序列
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SkillTemplate.Properties">
            <summary>
            用户自定义扩展属性
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitActionData">
            <summary>
            单位动作模板
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitActionData.KeyFrames">
            <summary>
            所有关键帧
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitActionData.BodyHit">
            <summary>
            身体攻击判定
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitActionData.StatusChange">
            <summary>
            动作状态数据
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitActionData.KeyFrame">
            <summary>
            动作关键帧数据
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitActionData.KeyFrame.Spell">
            <summary>
            关键帧产生的法术或远程道具单位模板ID
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitActionData.KeyFrame.Effect">
            <summary>
            当前关键帧特效
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitActionData.KeyFrame.Attack">
            <summary>
            攻击属性
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitActionData.KeyFrame.SelfBuff">
            <summary>
            对自己产生BUFF
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitActionData.KeyFrame.Move">
            <summary>
            此动作关键帧产生的位移
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitTriggerTemplate">
            <summary>
            单位行为触发器
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitTriggerTemplate.Properties">
            <summary>
            用户自定义扩展属性
            </summary>
        </member>
        <member name="T:CommonAI.Zone.SpellTemplate">
            <summary>
            法术/飞行道具模板
            </summary>
        </member>
        <member name="P:CommonAI.Zone.SpellTemplate.IsLaunchSpellEventSyncPos">
            <summary>
            往客户端推送，是否包含坐标
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.Name">
            <summary>
            法术名字
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.LifeTimeMS">
            <summary>
            生命周期，帧
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.MType">
            <summary>
            运动类型
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.MSpeedSEC">
            <summary>
            运动速度,AOE或者扩散类，缩放速度
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.RotateSpeedSEC">
            <summary>
            转动速度
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.HitOnExplosion">
            <summary>
            击中就消失
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.HitIntervalMS">
            <summary>
            每间隔多少帧就触发一次，0代表只造成一次伤害或效果
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.KeyFrames">
            <summary>
            按顺序触发的所有关键帧
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.FileName">
            <summary>
            模型名字或者Perfab名字
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.Properties">
            <summary>
            用户自定义扩展属性
            </summary>
        </member>
        <member name="T:CommonAI.Zone.SpellTemplate.KeyFrame">
            <summary>
            法术伤害或特效关键帧
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.KeyFrame.Effect">
            <summary>
            触发的特效
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.KeyFrame.Spell">
            <summary>
            触发新的法术
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.KeyFrame.Attack">
            <summary>
            攻击伤害
            </summary>
        </member>
        <member name="F:CommonAI.Zone.SpellTemplate.KeyFrame.Summon">
            <summary>
            召唤小弟
            </summary>
        </member>
        <member name="T:CommonAI.Zone.BuffTemplate">
            <summary>
            BUFF类数据结构
            </summary>
        </member>
        <member name="T:CommonAI.Zone.BuffTemplate.KeyFrame">
            <summary>
            BUFF伤害或特效关键帧
            </summary>
        </member>
        <member name="F:CommonAI.Zone.BuffTemplate.KeyFrame.Effect">
            <summary>
            触发的特效
            </summary>
        </member>
        <member name="F:CommonAI.Zone.BuffTemplate.KeyFrame.Spell">
            <summary>
            触发新的法术
            </summary>
        </member>
        <member name="F:CommonAI.Zone.BuffTemplate.KeyFrame.Attack">
            <summary>
            攻击伤害
            </summary>
        </member>
        <member name="F:CommonAI.Zone.BuffTemplate.KeyFrame.Item">
            <summary>
            直接使用道具
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ItemTemplate">
            <summary>
            掉落道具类数据结构
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ItemTemplate.Properties">
            <summary>
            道具扩展属性
            </summary>
        </member>
        <member name="T:CommonAI.Zone.AttackProp">
            <summary>
            技能或者法术产生的攻击属性
            </summary>
        </member>
        <member name="F:CommonAI.Zone.AttackProp.Attack">
            <summary>
            攻击力
            </summary>
        </member>
        <member name="F:CommonAI.Zone.AttackProp.Properties">
            <summary>
            用户自定义扩展属性
            </summary>
        </member>
        <member name="M:CommonAI.Zone.AttackProp.IsDamage">
            <summary>
            是否产生受击
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonAI.Zone.LaunchEffect">
            <summary>
            触发特效，一般只用于显示
            </summary>
        </member>
        <member name="T:CommonAI.Zone.LaunchSkill">
            <summary>
            发起法术或者飞行道具
            </summary>
        </member>
        <member name="T:CommonAI.Zone.LaunchSpell">
            <summary>
            发起法术或者飞行道具
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.PosType.POS_TYPE_DEFAULT_SINGLE">
            <summary>
            默认释放一个法术
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.PosType.POS_TYPE_RANDOM_FOR_SPELL">
            <summary>
            单位不支持随机范围内法术，仅由Spell再次触发效果有效
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.PosType.POS_TYPE_CYCLE">
            <summary>
            打出扇形多个法术
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.PosType.POS_TYPE_FAN">
            <summary>
            打出圆环多个法术
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.PosType.POS_TYPE_RANDOM_DIRECTION">
            <summary>
            随机方向
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.PosType.POS_TYPE_AREA">
            <summary>
            范围
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.SpellID">
            <summary>
            触发新的法术
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.PType">
            <summary>
            触发新的法术运行方式
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.Count">
            <summary>
            触发新的法术数量
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchSpell.Angle">
            <summary>
            如果触发为扇形，则定义扇形范围
            </summary>
        </member>
        <member name="T:CommonAI.Zone.LaunchBuff">
            <summary>
            发起BUFF
            </summary>
        </member>
        <member name="F:CommonAI.Zone.LaunchBuff.BuffID">
            <summary>
            Buff模板ID
            </summary>
        </member>
        <member name="T:CommonAI.Zone.SummonUnit">
            <summary>
            召唤单位
            </summary>
        </member>
        <member name="T:CommonAI.Zone.StartMove">
            <summary>
            移动距离
            </summary>
        </member>
        <member name="T:CommonAI.Zone.DropItem">
            <summary>
            道具掉落
            </summary>
        </member>
        <member name="F:CommonAI.Zone.DropItem.ItemTemplateID">
            <summary>
            掉落道具模板ID
            </summary>
        </member>
        <member name="F:CommonAI.Zone.DropItem.DropCount">
            <summary>
            掉落数量
            </summary>
        </member>
        <member name="F:CommonAI.Zone.DropItem.DropPercent">
            <summary>
            掉落道具百分比
            </summary>
        </member>
        <member name="T:CommonAI.Zone.DropItemList">
            <summary>
            道具掉落
            </summary>
        </member>
        <member name="F:CommonAI.Zone.DropItemList.DropItems">
            <summary>
            掉落道具模板ID
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UseItem.ItemTemplateID">
            <summary>
            掉落道具模板ID
            </summary>
        </member>
        <member name="T:CommonAI.Zone.LaunchTrigger">
            <summary>
            单位被动触发
            </summary>
        </member>
        <member name="T:CommonAI.Zone.InventoryItem">
            <summary>
            携带道具
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Action">
            <summary>
            向服务器端发送的指令
            </summary>
        </member>
        <member name="T:CommonAI.Zone.Event">
            <summary>
            客户端接收到的消息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.PositionMessage">
            <summary>
            某个位置上的事件
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ActorMessage">
            <summary>
            主角的事件
            </summary>
        </member>
        <member name="T:CommonAI.Zone.SystemMessage">
            <summary>
            系统消息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ObjectAction">
            <summary>
            向服务器端某个单位发送的指令
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ObjectAction.object_id">
            <summary>
            不需要传输object_id, 使用sender对象来绑定Session和InstanceUnit的关联//
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ObjectEvent">
            <summary>
            某个单位的事件消息
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ActorRequest">
            <summary>
            向服务器端某个单位发送的请求
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ActorResponse">
            <summary>
            向服务器端某个单位发送请求对应的回馈
            </summary>
        </member>
        <member name="T:CommonAI.Zone.AddUnitEvent">
            <summary>
            添加单位事件
            </summary>
        </member>
        <member name="T:CommonAI.Zone.AddSpellEvent">
            <summary>
            添加法术/飞行道具效果事件
            </summary>
        </member>
        <member name="T:CommonAI.Zone.AddEffectEvent">
            <summary>
            单位动作中击中别的单位
            </summary>
        </member>
        <member name="T:CommonAI.Zone.AddItemEvent">
            <summary>
            添加道具事件
            </summary>
        </member>
        <member name="T:CommonAI.Zone.RemoveObjectEvent">
            <summary>
            某个对象从场景中移除
            </summary>
        </member>
        <member name="T:CommonAI.Zone.SyncPosEvent">
            <summary>
            同步场景中移动单位的坐标
            </summary>
        </member>
        <member name="T:CommonAI.Zone.DoScriptEvent">
            <summary>
            服务端通知客户端执行一段脚本
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ScriptCommandEvent">
            <summary>
            脚本系统指令
            </summary>
        </member>
        <member name="T:CommonAI.Zone.GameOverEvent">
            <summary>
            游戏结束指令
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitFieldChangedEvent">
            <summary>
            同步单位数据，频繁需要改变的数据
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitChantSkillEvent">
            <summary>
            单位进入吟唱状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitLaunchSkillEvent">
            <summary>
            单位进入技能状态
            </summary>
        </member>
        <member name="P:CommonAI.Zone.UnitLaunchSkillEvent.action_index">
            <summary>
            如果是单一动作，则标识是哪一段攻击
            </summary>
        </member>
        <member name="P:CommonAI.Zone.UnitLaunchSkillEvent.action_time_array">
            <summary>
            技能每段动作的时间，单一动作的话(SkillTemplate.IsSingleAction)，长度为1
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitEffectEvent">
            <summary>
            单位动作中击中别的单位
            </summary>
        </member>
        <member name="P:CommonAI.Zone.UnitEffectEvent.effect">
            <summary>
            特效名字
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitDoActionEvent">
            <summary>
            单位仅做一个动作
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitHitEvent">
            <summary>
            单位被击中
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitDeadEvent">
            <summary>
            单位被击中
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitLaunchBuffEvent">
            <summary>
            单位中BUFF
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitStopBuffEvent">
            <summary>
            单位停止BUFF
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitRebirthEvent">
            <summary>
            单位复活
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitDamageEvent">
            <summary>
            单位受攻击
            </summary>
        </member>
        <member name="P:CommonAI.Zone.UnitDamageEvent.TotalTimeMS">
            <summary>
            总共受击时间（位移时间+受击时间）
            </summary>
        </member>
        <member name="P:CommonAI.Zone.UnitDamageEvent.DamageActionName">
            <summary>
            特殊受击动作
            </summary>
        </member>
        <member name="P:CommonAI.Zone.UnitDamageEvent.HasDamageAction">
            <summary>
            受击的特殊动作
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitSkillActionChangeEvent">
            <summary>
            技能动作序列被意外取消
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitStartPickObjectEvent">
            <summary>
            单位开始检取道具读条
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitGotInstanceItemEvent">
            <summary>
            单位从场景中获得道具
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitJumpEvent">
            <summary>
            别的单位释放技能跳起
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitForceSyncPosEvent">
            <summary>
            立即同步客户端坐标，比如单位传送之类，用于MoveByClient的模式
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ObjectForceSyncPosEvent">
            <summary>
            立即同步客户端坐标，比如单位传送之类，用于MoveByClient的模式
            </summary>
        </member>
        <member name="T:CommonAI.Zone.SpellLockTargetEvent">
            <summary>
            Missile类法术，锁定单位时触发
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitGuardAction">
            <summary>
            单位待机
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitAttackToAction">
            <summary>
            A过去
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitMoveAction">
            <summary>
            单位移动
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitFaceToAction">
            <summary>
            玩家选择朝向
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitSlipAction">
            <summary>
            单位移动
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitFocuseTargetAction">
            <summary>
            锁定目标
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitLaunchSkillAction">
            <summary>
            单位技能动作
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitAxisAction">
            <summary>
            客户端手动控制同步包
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitStopMoveAction">
            <summary>
            客户端手动控制同步包
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitUseItemAction">
            <summary>
            单位使用道具
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitPickObjectAction">
            <summary>
            单位手动检取场景道具
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitUpdatePosAction">
            <summary>
            单位移动
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitStatisticData">
            <summary>
            单位统计数据
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.DeadCount">
            <summary>
            死亡次数
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.KillUnitCount">
            <summary>
            总共杀死单位数量
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.KillPlayerCount">
            <summary>
            总共杀死玩家数量
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.SelfDamage">
            <summary>
            承受伤害
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.TotalDamage">
            <summary>
            对所有单位造成的总伤害
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.PlayerDamage">
            <summary>
            对玩家造成的总伤害
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.TotalHealing">
            <summary>
            对所有单位输出的总治疗量
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitStatisticData.PlayerHealing">
            <summary>
            对玩家输出的总治疗量
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitSetSubStateAction">
            <summary>
            设置子动做
            </summary>
        </member>
        <member name="T:CommonAI.Zone.UnitReadAction">
            <summary>
            单位准备完毕
            </summary>
        </member>
        <member name="T:CommonAI.Zone.LookAtEvent">
            <summary>
            显示箭头
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ChangeTimeScaleEvent">
            <summary>
            改变游戏运行速度
            </summary>
        </member>
        <member name="F:CommonAI.Zone.ChangeTimeScaleEvent.TimeScalePct">
            <summary>
            时间尺度百分比
            </summary>
        </member>
        <member name="T:CommonAI.Zone.GamePauseEvent">
            <summary>
            暂停游戏
            </summary>
        </member>
        <member name="F:CommonAI.Zone.GamePauseEvent.Seconds">
            <summary>
            暂停多少秒，如果为0，则无限暂停
            </summary>
        </member>
        <member name="T:CommonAI.Zone.GameResumeEvent">
            <summary>
            继续游戏
            </summary>
        </member>
        <member name="T:CommonAI.Zone.CameraMoveToEvent">
            <summary>
            移动镜头到
            </summary>
        </member>
        <member name="F:CommonAI.Zone.CameraMoveToEvent.MoveSpeedSec">
            <summary>
            镜头移动速度(每秒距离)
            </summary>
        </member>
        <member name="F:CommonAI.Zone.CameraMoveToEvent.TimeMS">
            <summary>
            移动过去的总时间，如果为0，则按速度计算
            </summary>
        </member>
        <member name="T:CommonAI.Zone.CameraFocusUnitEvent">
            <summary>
            锁定镜头到单位
            </summary>
        </member>
        <member name="T:CommonAI.Zone.CameraZoomToEvent">
            <summary>
            拉近镜头
            </summary>
        </member>
        <member name="F:CommonAI.Zone.CameraZoomToEvent.ZoomDistance">
            <summary>
            镜头拉近距离
            </summary>
        </member>
        <member name="F:CommonAI.Zone.CameraZoomToEvent.ZoomSpeedSec">
            <summary>
            镜头拉近速度(每秒距离)
            </summary>
        </member>
        <member name="T:CommonAI.Zone.CameraRotateToEvent">
            <summary>
            旋转镜头
            </summary>
        </member>
        <member name="F:CommonAI.Zone.CameraRotateToEvent.RotateAngle">
            <summary>
            镜头旋转角度（0～360）
            </summary>
        </member>
        <member name="F:CommonAI.Zone.CameraRotateToEvent.RotateSpeedSec">
            <summary>
            镜头旋转速度(每秒角度)
            </summary>
        </member>
        <member name="T:CommonAI.Zone.CameraResetEvent">
            <summary>
            重置镜头
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ClientEventQueue">
            <summary>
            客户端动作序列
            </summary>
        </member>
        <member name="T:CommonAI.Zone.CameraHoldEvent">
            <summary>
            移动锁定一段时间
            </summary>
        </member>
        <member name="T:CommonAI.Zone.PlayerScriptCommandEvent">
            <summary>
            脚本系统指令
            </summary>
        </member>
        <member name="T:CommonAI.Zone.PlayerSkillActiveChangedEvent">
            <summary>
            技能可用性发生变化
            </summary>
        </member>
        <member name="T:CommonAI.Zone.PlayerFocuseTargetEvent">
            <summary>
            锁定目标
            </summary>
        </member>
        <member name="T:CommonAI.Zone.PackEvent">
            <summary>
            打包一组消息，一次性发出
            </summary>
        </member>
        <member name="T:CommonAI.Zone.TestMessageBox">
            <summary>
            系统消息框，测试用
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ServerStatusB2C">
            <summary>
            通知客户端服务器运行状态
            </summary>
        </member>
        <member name="T:CommonAI.Zone.ServerExceptionB2C">
            <summary>
            通知客户端服务器报错
            </summary>
        </member>
        <member name="T:CommonAI.Zone.InstanceZoneListener">
            <summary>
            客户端用于监听场景行为的监听器
            </summary>
        </member>
        <member name="P:CommonAI.Zone.InstanceZoneFactory.Formula">
            <summary>
            扩展以及公式
            </summary>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.CreateEditorScene(CommonAI.Zone.TemplateManager,CommonAI.Zone.InstanceZoneListener,CommonAI.Zone.ZoneEditor.SceneData)">
            <summary>
            创建场景
            </summary>
            <param name="templates"></param>
            <param name="listener"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.CreateSpell(CommonAI.Zone.Instance.InstanceZone,CommonAI.Zone.SpellTemplate,CommonAI.Zone.LaunchSpell,CommonAI.Zone.Instance.InstanceUnit,CommonAI.Zone.Instance.InstanceZoneObject)">
            <summary>
            创建法术
            </summary>
            <param name="zone"></param>
            <param name="data"></param>
            <param name="launch"></param>
            <param name="launcher"></param>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.CreateItem(CommonAI.Zone.Instance.InstanceZone,CommonAI.Zone.ItemTemplate,System.String,System.Byte,CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            创建物品
            </summary>
            <param name="zone"></param>
            <param name="item"></param>
            <param name="name"></param>
            <param name="force"></param>
            <param name="creater"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.CreateUnit(CommonAI.Zone.Instance.InstanceZone,CommonAI.Zone.UnitInfo,System.String,System.Byte,System.Int32)">
            <summary>
            创建单位
            </summary>
            <param name="zone"></param>
            <param name="info"></param>
            <param name="name"></param>
            <param name="force"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.CreateHateSystem(CommonAI.Zone.Instance.InstanceUnit)">
            <summary>
            创建单位仇恨系统
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.CreateQuestAdapter(CommonAI.Zone.Instance.InstanceZone)">
            <summary>
            创建任务事件接口
            </summary>
            <param name="zone"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.ToClientDisplayName(CommonAI.Zone.UnitInfo,CommonAI.ZoneClient.SyncUnitInfo)">
            <summary>
            创建客户端显示名称规则
            </summary>
            <param name="info"></param>
            <param name="syncInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CommonAI.Zone.InstanceZoneFactory.CreateClientZoneLayer(CommonAI.Zone.ZoneEditor.EditorTemplates,CommonAI.ZoneClient.ILayerClient)">
            <summary>
            创建客户端代理场景
            </summary>
            <param name="templates"></param>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:CommonAI.Zone.UnitEvent" -->
        <member name="F:CommonAI.Zone.UnitEvent.Name">
            <summary>
            触发器名字
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.Active">
            <summary>
            启用
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.Comment">
            <summary>
            注释
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.SavePath">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.DelayTimeMS">
            <summary>
            延迟执行
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.LocalVars">
            <summary>
            临时变量
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.Triggers">
            <summary>
            事件触发
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.Conditions">
            <summary>
            条件
            </summary>
        </member>
        <member name="F:CommonAI.Zone.UnitEvent.Actions">
            <summary>
            动作
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.RoomInfo">
            <summary>
            房间状态信息
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.GameServerID">
            <summary>
            当前房间是哪个GameServer
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.RoomID">
            <summary>
            房间ID
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.NetDriverString">
            <summary>
            网络驱动
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.ClientConnectString">
            <summary>
            链接套接字
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.Dummy">
            <summary>
            
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.Status">
            <summary>
            房间状态
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.PlayerCount">
            <summary>
            当前玩家数量
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.PlayerMax">
            <summary>
            最大玩家数量
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.TotalTimeSEC">
            <summary>
            房间运行了多久
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.RoomInfo.Progress">
            <summary>
            如果是副本关卡，传出副本关卡进度
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.CreateRoomRequestR2B">
            <summary>
            战斗管理器创建房间
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.CreateRoomRequestR2B.RoomID">
            <summary>
            由房间管理器分配的房间ID
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.CreateRoomRequestR2B.Data">
            <summary>
            扩展属性(用于游戏逻辑)
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.CreateRoomResponseB2R">
            <summary>
            战斗管理器创建房间
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.PlayerWillConnectRequestR2B">
            <summary>
            玩家将要进入房间服务
            此时，游戏服给予战斗服此玩家对应的Token用于连接上来的玩家的信息验证
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectRequestR2B.PlayerUUID">
            <summary>
            玩家全局唯一ID
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectRequestR2B.PlayerDisplayName">
            <summary>
            玩家显示名字
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectRequestR2B.Token">
            <summary>
            Token验证串
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectRequestR2B.TokenValidTimeSec">
            <summary>
            Token有效时间，秒
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectRequestR2B.RoomID">
            <summary>
            玩家将要进入的房间ID
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectRequestR2B.Data">
            <summary>
            扩展属性(用于游戏逻辑)
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.PlayerWillConnectResponseB2R">
            <summary>
            玩家将要进入房间，
            给当前玩家分配的房间ID
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectResponseB2R.PlayerUUID">
            <summary>
            玩家全局唯一ID
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.PlayerWillConnectResponseB2R.Room">
            <summary>
            回馈给玩家的房间以及服务器信息
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.PlayerEnterRoomNotifyB2R">
            <summary>
            玩家已经离开战斗服务器，实际上此时，Token已经无效
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.PlayerLeaveBattleNotifyB2R">
            <summary>
            玩家已经离开战斗服务器，实际上此时，Token已经无效
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.ServerInfoNotifyB2R">
            <summary>
            服务器心跳
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.ServerInfoNotifyB2R.ClientConnectString">
            <summary>
            客户端连接套接字
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.ServerInfoNotifyB2R.Dummy">
            <summary>
            
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.ServerInfoNotifyB2R.CurRoomCount">
            <summary>
            当前已创建房间数量
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.ServerInfoNotifyB2R.MaxRoomCount">
            <summary>
            服务器最大承载房间数量
            </summary>
        </member>
        <member name="F:RoomService.Net.BsClient.ServerInfoNotifyB2R.AllRooms">
            <summary>
            所有房间信息
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.RoomInfoNotifyB2R">
            <summary>
            房间状态同步
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.DestroyRoomNotifyB2R">
            <summary>
            房间销毁通知
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.RoomEventNotifyB2R">
            <summary>
            一些扩展数据 战斗服->角色服
            比如任务信息同步，场景内触发的事件，等等
            </summary>
        </member>
        <member name="T:RoomService.Net.BsClient.RoomEventNotifyR2B">
            <summary>
            一些扩展数据 角色服->战斗服
            比如任务信息同步，场景内触发的事件，等等
            </summary>
        </member>
        <member name="T:RoomService.Net.BsServer.EnterRoomRequestC2B">
            <summary>
            客户端进入房间请求
            </summary>
        </member>
        <member name="F:RoomService.Net.BsServer.EnterRoomRequestC2B.TestToken">
            <summary>
            测试数据，模拟战斗管理服报文
            </summary>
        </member>
        <member name="T:RoomService.Net.BsServer.EnterRoomResponseB2C">
            <summary>
            客户端进入房间回馈
            </summary>
        </member>
        <member name="F:RoomService.Net.BsServer.EnterRoomResponseB2C.RoomData">
            <summary>
            创建房间的扩展属性(用于游戏逻辑)
            </summary>
        </member>
        <member name="F:RoomService.Net.BsServer.EnterRoomResponseB2C.PlayerData">
            <summary>
            角色的扩展属性(用于游戏逻辑)
            </summary>
        </member>
        <member name="T:RoomService.Net.BsServer.LeaveRoomRequestC2B">
            <summary>
            客户端离开房间请求
            </summary>
        </member>
        <member name="T:RoomService.Net.BsServer.KickedByServerNotifyB2C">
            <summary>
            被服务端踢掉
            </summary>
        </member>
    </members>
</doc>

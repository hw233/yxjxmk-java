<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommonLang</name>
    </assembly>
    <members>
        <member name="M:CommonLang.Geometry.BoundingBox.CreateFromPoints(System.Collections.Generic.IEnumerable{CommonLang.Geometry.Vector3})">
            <summary>
            Create a bounding box from the given list of points.
            </summary>
            <param name="points">The list of Vector3 instances defining the point cloud to bound</param>
            <returns>A bounding box that encapsulates the given point cloud.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given list has no points.</exception>
        </member>
        <member name="T:CommonLang.Geometry.BoundingFrustum">
            <summary>
            Defines a viewing frustum for intersection operations.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.BoundingFrustum.PlaneCount">
            <summary>
            The number of planes in the frustum.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.BoundingFrustum.CornerCount">
            <summary>
            The number of corner points in the frustum.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.BoundingFrustum.Matrix">
            <summary>
            Gets or sets the <see cref="P:CommonLang.Geometry.BoundingFrustum.Matrix"/> of the frustum.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.BoundingFrustum.Near">
            <summary>
            Gets the near plane of the frustum.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.BoundingFrustum.Far">
            <summary>
            Gets the far plane of the frustum.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.BoundingFrustum.Left">
            <summary>
            Gets the left plane of the frustum.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.BoundingFrustum.Right">
            <summary>
            Gets the right plane of the frustum.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.BoundingFrustum.Top">
            <summary>
            Gets the top plane of the frustum.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.BoundingFrustum.Bottom">
            <summary>
            Gets the bottom plane of the frustum.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.#ctor(CommonLang.Geometry.Matrix)">
            <summary>
            Constructs the frustum by extracting the view planes from a matrix.
            </summary>
            <param name="value">Combined matrix which usually is (View * Projection).</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.op_Equality(CommonLang.Geometry.BoundingFrustum,CommonLang.Geometry.BoundingFrustum)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.BoundingFrustum"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:CommonLang.Geometry.BoundingFrustum"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:CommonLang.Geometry.BoundingFrustum"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.op_Inequality(CommonLang.Geometry.BoundingFrustum,CommonLang.Geometry.BoundingFrustum)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.BoundingFrustum"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:CommonLang.Geometry.BoundingFrustum"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:CommonLang.Geometry.BoundingFrustum"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Contains(CommonLang.Geometry.BoundingBox)">
            <summary>
            Containment test between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingBox"/>.
            </summary>
            <param name="box">A <see cref="T:CommonLang.Geometry.BoundingBox"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingBox"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Contains(CommonLang.Geometry.BoundingBox@,CommonLang.Geometry.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingBox"/>.
            </summary>
            <param name="box">A <see cref="T:CommonLang.Geometry.BoundingBox"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingBox"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Contains(CommonLang.Geometry.BoundingFrustum)">
            <summary>
            Containment test between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="frustum">A <see cref="T:CommonLang.Geometry.BoundingFrustum"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Contains(CommonLang.Geometry.BoundingSphere)">
            <summary>
            Containment test between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingSphere"/>.
            </summary>
            <param name="sphere">A <see cref="T:CommonLang.Geometry.BoundingSphere"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingSphere"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Contains(CommonLang.Geometry.BoundingSphere@,CommonLang.Geometry.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingSphere"/>.
            </summary>
            <param name="sphere">A <see cref="T:CommonLang.Geometry.BoundingSphere"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Contains(CommonLang.Geometry.Vector3)">
            <summary>
            Containment test between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="point">A <see cref="T:CommonLang.Geometry.Vector3"/> for testing.</param>
            <returns>Result of testing for containment between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Contains(CommonLang.Geometry.Vector3@,CommonLang.Geometry.ContainmentType@)">
            <summary>
            Containment test between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="point">A <see cref="T:CommonLang.Geometry.Vector3"/> for testing.</param>
            <param name="result">Result of testing for containment between this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> and specified <see cref="T:CommonLang.Geometry.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Equals(CommonLang.Geometry.BoundingFrustum)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="other">The <see cref="T:CommonLang.Geometry.BoundingFrustum"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.GetCorners">
            <summary>
            Returns a copy of internal corners array.
            </summary>
            <returns>The array of corners.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.GetCorners(CommonLang.Geometry.Vector3[])">
            <summary>
            Returns a copy of internal corners array.
            </summary>
            <param name="corners">The array which values will be replaced to corner values of this instance. It must have size of <see cref="F:CommonLang.Geometry.BoundingFrustum.CornerCount"/>.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.BoundingBox)">
            <summary>
            Gets whether or not a specified <see cref="T:CommonLang.Geometry.BoundingBox"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="box">A <see cref="T:CommonLang.Geometry.BoundingBox"/> for intersection test.</param>
            <returns><c>true</c> if specified <see cref="T:CommonLang.Geometry.BoundingBox"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.BoundingBox@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:CommonLang.Geometry.BoundingBox"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="box">A <see cref="T:CommonLang.Geometry.BoundingBox"/> for intersection test.</param>
            <param name="result"><c>true</c> if specified <see cref="T:CommonLang.Geometry.BoundingBox"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>; <c>false</c> otherwise as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.BoundingFrustum)">
            <summary>
            Gets whether or not a specified <see cref="T:CommonLang.Geometry.BoundingFrustum"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="frustum">An other <see cref="T:CommonLang.Geometry.BoundingFrustum"/> for intersection test.</param>
            <returns><c>true</c> if other <see cref="T:CommonLang.Geometry.BoundingFrustum"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.BoundingSphere)">
            <summary>
            Gets whether or not a specified <see cref="T:CommonLang.Geometry.BoundingSphere"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="sphere">A <see cref="T:CommonLang.Geometry.BoundingSphere"/> for intersection test.</param>
            <returns><c>true</c> if specified <see cref="T:CommonLang.Geometry.BoundingSphere"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.BoundingSphere@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:CommonLang.Geometry.BoundingSphere"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="sphere">A <see cref="T:CommonLang.Geometry.BoundingSphere"/> for intersection test.</param>
            <param name="result"><c>true</c> if specified <see cref="T:CommonLang.Geometry.BoundingSphere"/> intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>; <c>false</c> otherwise as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.Plane)">
            <summary>
            Gets type of intersection between specified <see cref="T:CommonLang.Geometry.Plane"/> and this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="plane">A <see cref="T:CommonLang.Geometry.Plane"/> for intersection test.</param>
            <returns>A plane intersection type.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.Plane@,CommonLang.Geometry.PlaneIntersectionType@)">
            <summary>
            Gets type of intersection between specified <see cref="T:CommonLang.Geometry.Plane"/> and this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.
            </summary>
            <param name="plane">A <see cref="T:CommonLang.Geometry.Plane"/> for intersection test.</param>
            <param name="result">A plane intersection type as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.Ray)">
            <summary>
            Gets the distance of intersection of <see cref="T:CommonLang.Geometry.Ray"/> and this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> or null if no intersection happens.
            </summary>
            <param name="ray">A <see cref="T:CommonLang.Geometry.Ray"/> for intersection test.</param>
            <returns>Distance at which ray intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> or null if no intersection happens.</returns>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.Intersects(CommonLang.Geometry.Ray@,System.Nullable{System.Single}@)">
            <summary>
            Gets the distance of intersection of <see cref="T:CommonLang.Geometry.Ray"/> and this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> or null if no intersection happens.
            </summary>
            <param name="ray">A <see cref="T:CommonLang.Geometry.Ray"/> for intersection test.</param>
            <param name="result">Distance at which ray intersects with this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> or null if no intersection happens as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.BoundingFrustum.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.BoundingFrustum"/> in the format:
            {Near:[nearPlane] Far:[farPlane] Left:[leftPlane] Right:[rightPlane] Top:[topPlane] Bottom:[bottomPlane]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.BoundingFrustum"/>.</returns>
        </member>
        <member name="T:CommonLang.Geometry.CollisionMath">
            <summary>
            A code container for collision-related mathematical functions.
            </summary>
        </member>
        <member name="T:CommonLang.Geometry.CollisionMath.CircleLineCollisionResult">
            <summary>
            Data defining a circle/line collision result.
            </summary>
            <remarks>Also used for circle/rectangles.</remarks>
        </member>
        <member name="M:CommonLang.Geometry.CollisionMath.CircleCircleIntersect(CommonLang.Geometry.Vector2,System.Single,CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Determine if two circles intersect or contain each other.
            </summary>
            <param name="center1">The center of the first circle.</param>
            <param name="radius1">The radius of the first circle.</param>
            <param name="center2">The center of the second circle.</param>
            <param name="radius2">The radius of the second circle.</param>
            <returns>True if the circles intersect or contain one another.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CollisionMath.LineLineIntersect(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2@)">
            <summary>
            Determines the point of intersection between two line segments, 
            as defined by four points.
            </summary>
            <param name="a">The first point on the first line segment.</param>
            <param name="b">The second point on the first line segment.</param>
            <param name="c">The first point on the second line segment.</param>
            <param name="d">The second point on the second line segment.</param>
            <param name="point">The output value with the interesection, if any.</param>
            <remarks>The output parameter "point" is only valid
            when the return value is true.</remarks>
            <returns>True if intersecting, false otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CollisionMath.CircleLineCollide(CommonLang.Geometry.Vector2,System.Single,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.CollisionMath.CircleLineCollisionResult@)">
            <summary>
            Determines if a circle and line segment intersect, and if so, how they do.
            </summary>
            <param name="center">The center of the circle.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="lineStart">The first point on the line segment.</param>
            <param name="lineEnd">The second point on the line segment.</param>
            <param name="result">The result data for the collision.</param>
            <returns>True if a collision occurs, provided for convenience.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CollisionMath.PointInPolygon(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2[])">
            <summary>
            点在凸多边形内部。
            </summary>
            <param name="center"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:CommonLang.Geometry.ContainmentType">
            <summary>
            Defines how the bounding volumes intersects or contain one another.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.ContainmentType.Disjoint">
            <summary>
            Indicates that there is no overlap between two bounding volumes.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.ContainmentType.Contains">
            <summary>
            Indicates that one bounding volume completely contains another volume.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.ContainmentType.Intersects">
            <summary>
            Indicates that bounding volumes partially overlap one another.
            </summary>
        </member>
        <member name="T:CommonLang.Geometry.Curve">
            <summary>
            Contains a collection of <see cref="T:CommonLang.Geometry.CurveKey"/> points in 2D space and provides methods for evaluating features of the curve they define.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Curve.IsConstant">
            <summary>
            Returns <c>true</c> if this curve is constant (has zero or one points); <c>false</c> otherwise.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Curve.Keys">
            <summary>
            The collection of curve keys.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Curve.PostLoop">
            <summary>
            Defines how to handle weighting values that are greater than the last control point in the curve.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Curve.PreLoop">
            <summary>
            Defines how to handle weighting values that are less than the first control point in the curve.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Curve.#ctor">
            <summary>
            Constructs a curve.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Curve.Clone">
            <summary>
            Creates a copy of this curve.
            </summary>
            <returns>A copy of this curve.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Curve.Evaluate(System.Single)">
            <summary>
            Evaluate the value at a position of this <see cref="T:CommonLang.Geometry.Curve"/>.
            </summary>
            <param name="position">The position on this <see cref="T:CommonLang.Geometry.Curve"/>.</param>
            <returns>Value at the position on this <see cref="T:CommonLang.Geometry.Curve"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Curve.ComputeTangents(CommonLang.Geometry.CurveTangent)">
            <summary>
            Computes tangents for all keys in the collection.
            </summary>
            <param name="tangentType">The tangent type for both in and out.</param>
        </member>
        <member name="M:CommonLang.Geometry.Curve.ComputeTangents(CommonLang.Geometry.CurveTangent,CommonLang.Geometry.CurveTangent)">
            <summary>
            Computes tangents for all keys in the collection.
            </summary>
            <param name="tangentInType">The tangent in-type. <see cref="P:CommonLang.Geometry.CurveKey.TangentIn"/> for more details.</param>
            <param name="tangentOutType">The tangent out-type. <see cref="P:CommonLang.Geometry.CurveKey.TangentOut"/> for more details.</param>
        </member>
        <member name="M:CommonLang.Geometry.Curve.ComputeTangent(System.Int32,CommonLang.Geometry.CurveTangent)">
            <summary>
            Computes tangent for the specific key in the collection.
            </summary>
            <param name="keyIndex">The index of a key in the collection.</param>
            <param name="tangentType">The tangent type for both in and out.</param>
        </member>
        <member name="M:CommonLang.Geometry.Curve.ComputeTangent(System.Int32,CommonLang.Geometry.CurveTangent,CommonLang.Geometry.CurveTangent)">
            <summary>
            Computes tangent for the specific key in the collection.
            </summary>
            <param name="keyIndex">The index of key in the collection.</param>
            <param name="tangentInType">The tangent in-type. <see cref="P:CommonLang.Geometry.CurveKey.TangentIn"/> for more details.</param>
            <param name="tangentOutType">The tangent out-type. <see cref="P:CommonLang.Geometry.CurveKey.TangentOut"/> for more details.</param>
        </member>
        <member name="T:CommonLang.Geometry.CurveContinuity">
            <summary>
            Defines the continuity of keys on a <see cref="T:CommonLang.Geometry.Curve"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveContinuity.Smooth">
            <summary>
            Interpolation can be used between this key and the next.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveContinuity.Step">
            <summary>
            Interpolation cannot be used. A position between the two points returns this point.
            </summary>
        </member>
        <member name="T:CommonLang.Geometry.CurveKey">
            <summary>
            Key point on the <see cref="T:CommonLang.Geometry.Curve"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.CurveKey.Continuity">
            <summary>
            Gets or sets the indicator whether the segment between this point and the next point on the curve is discrete or continuous.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.CurveKey.Position">
            <summary>
            Gets a position of the key on the curve.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.CurveKey.TangentIn">
            <summary>
            Gets or sets a tangent when approaching this point from the previous point on the curve.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.CurveKey.TangentOut">
            <summary>
            Gets or sets a tangent when leaving this point to the next point on the curve.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.CurveKey.Value">
            <summary>
            Gets a value of this point.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.CurveKey.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CommonLang.Geometry.CurveKey"/> class with position: 0 and value: 0.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.CurveKey.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:CommonLang.Geometry.CurveKey"/> class.
            </summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
        </member>
        <member name="M:CommonLang.Geometry.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:CommonLang.Geometry.CurveKey"/> class.
            </summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
            <param name="tangentIn">Tangent approaching point from the previous point on the curve.</param>
            <param name="tangentOut">Tangent leaving point toward next point on the curve.</param>
        </member>
        <member name="M:CommonLang.Geometry.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single,CommonLang.Geometry.CurveContinuity)">
            <summary>
            Creates a new instance of <see cref="T:CommonLang.Geometry.CurveKey"/> class.
            </summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
            <param name="tangentIn">Tangent approaching point from the previous point on the curve.</param>
            <param name="tangentOut">Tangent leaving point toward next point on the curve.</param>
            <param name="continuity">Indicates whether the curve is discrete or continuous.</param>
        </member>
        <member name="M:CommonLang.Geometry.CurveKey.op_Inequality(CommonLang.Geometry.CurveKey,CommonLang.Geometry.CurveKey)">
            <summary>
            
            Compares whether two <see cref="T:CommonLang.Geometry.CurveKey"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:CommonLang.Geometry.CurveKey"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:CommonLang.Geometry.CurveKey"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:CommonLang.Geometry.CurveKey.op_Equality(CommonLang.Geometry.CurveKey,CommonLang.Geometry.CurveKey)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.CurveKey"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:CommonLang.Geometry.CurveKey"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:CommonLang.Geometry.CurveKey"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CurveKey.Clone">
            <summary>
            Creates a copy of this key.
            </summary>
            <returns>A copy of this key.</returns>
        </member>
        <member name="T:CommonLang.Geometry.CurveKeyCollection">
            <summary>
            The collection of the <see cref="T:CommonLang.Geometry.CurveKey"/> elements and a part of the <see cref="T:CommonLang.Geometry.Curve"/> class.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.CurveKeyCollection.Item(System.Int32)">
            <summary>
            Indexer.
            </summary>
            <param name="index">The index of key in this collection.</param>
            <returns><see cref="T:CommonLang.Geometry.CurveKey"/> at <paramref name="index"/> position.</returns>
        </member>
        <member name="P:CommonLang.Geometry.CurveKeyCollection.Count">
            <summary>
            Returns the count of keys in this collection.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.CurveKeyCollection.IsReadOnly">
            <summary>
            Returns false because it is not a read-only collection.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.#ctor">
            <summary>
            Creates a new instance of <see cref="T:CommonLang.Geometry.CurveKeyCollection"/> class.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.Add(CommonLang.Geometry.CurveKey)">
            <summary>
            Adds a key to this collection.
            </summary>
            <param name="item">New key for the collection.</param>
            <exception cref="T:System.ArgumentNullException">Throws if <paramref name="item"/> is null.</exception>
            <remarks>The new key would be added respectively to a position of that key and the position of other keys.</remarks>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.Clear">
            <summary>
            Removes all keys from this collection.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.Clone">
            <summary>
            Creates a copy of this collection.
            </summary>
            <returns>A copy of this collection.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.Contains(CommonLang.Geometry.CurveKey)">
            <summary>
            Determines whether this collection contains a specific key.
            </summary>
            <param name="item">The key to locate in this collection.</param>
            <returns><c>true</c> if the key is found; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.CopyTo(CommonLang.Geometry.CurveKey[],System.Int32)">
            <summary>
            Copies the keys of this collection to an array, starting at the array index provided.
            </summary>
            <param name="array">Destination array where elements will be copied.</param>
            <param name="arrayIndex">The zero-based index in the array to start copying from.</param>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator for the <see cref="T:CommonLang.Geometry.CurveKeyCollection"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.IndexOf(CommonLang.Geometry.CurveKey)">
            <summary>
            Finds element in the collection and returns its index.
            </summary>
            <param name="item">Element for the search.</param>
            <returns>Index of the element; or -1 if item is not found.</returns>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes element at the specified index.
            </summary>
            <param name="index">The index which element will be removed.</param>
        </member>
        <member name="M:CommonLang.Geometry.CurveKeyCollection.Remove(CommonLang.Geometry.CurveKey)">
            <summary>
            Removes specific element.
            </summary>
            <param name="item">The element</param>
            <returns><c>true</c> if item is successfully removed; <c>false</c> otherwise. This method also returns <c>false</c> if item was not found.</returns>
        </member>
        <member name="T:CommonLang.Geometry.CurveLoopType">
            <summary>
            Defines how the <see cref="T:CommonLang.Geometry.Curve"/> value is determined for position before first point or after the end point on the <see cref="T:CommonLang.Geometry.Curve"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveLoopType.Constant">
            <summary>
            The value of <see cref="T:CommonLang.Geometry.Curve"/> will be evaluated as first point for positions before the beginning and end point for positions after the end.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveLoopType.Cycle">
            <summary>
            The positions will wrap around from the end to beginning of the <see cref="T:CommonLang.Geometry.Curve"/> for determined the value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveLoopType.CycleOffset">
            <summary>
            The positions will wrap around from the end to beginning of the <see cref="T:CommonLang.Geometry.Curve"/>.
            The value will be offset by the difference between the values of first and end <see cref="T:CommonLang.Geometry.CurveKey"/> multiplied by the wrap amount.
            If the position is before the beginning of the <see cref="T:CommonLang.Geometry.Curve"/> the difference will be subtracted from its value; otherwise the difference will be added.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveLoopType.Oscillate">
            <summary>
            The value at the end of the <see cref="T:CommonLang.Geometry.Curve"/> act as an offset from the same side of the <see cref="T:CommonLang.Geometry.Curve"/> toward the opposite side.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveLoopType.Linear">
            <summary>
            The linear interpolation will be performed for determined the value. 
            </summary>
        </member>
        <member name="T:CommonLang.Geometry.CurveTangent">
            <summary>
            Defines the different tangent types to be calculated for <see cref="T:CommonLang.Geometry.CurveKey"/> points in a <see cref="T:CommonLang.Geometry.Curve"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveTangent.Flat">
            <summary>
            The tangent which always has a value equal to zero. 
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveTangent.Linear">
            <summary>
            The tangent which contains a difference between current tangent value and the tangent value from the previous <see cref="T:CommonLang.Geometry.CurveKey"/>. 
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.CurveTangent.Smooth">
            <summary>
            The smoouth tangent which contains the inflection between <see cref="P:CommonLang.Geometry.CurveKey.TangentIn"/> and <see cref="P:CommonLang.Geometry.CurveKey.TangentOut"/> by taking into account the values of both neighbors of the <see cref="T:CommonLang.Geometry.CurveKey"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.SceneGraph2D.DisplayNode.Color">
            <summary>
            Color RGB
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.TransformLocalToParent(CommonLang.Geometry.Vector2[])">
            <summary>
            本地坐标转换为父节点坐标
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.TransformParentToLocal(CommonLang.Geometry.Vector2[])">
            <summary>
            父节点坐标转换为本地坐标
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.TransformRootToLocal(CommonLang.Geometry.Vector2[])">
            <summary>
            屏幕坐标转换为本地坐标
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.TransformLocalToRoot(CommonLang.Geometry.Vector2[])">
            <summary>
            本地坐标转换为屏幕坐标
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.GetChildren(System.Collections.Generic.List{CommonLang.Geometry.SceneGraph2D.DisplayNode},System.Boolean)">
            <summary>
            获取所有节点
            </summary>
            <param name="list"></param>
            <param name="recursion"></param>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.SceneGraphTreePath(System.Collections.Generic.List{CommonLang.Geometry.SceneGraph2D.DisplayNode})">
            <summary>
            获取场景数路径，从当前节点一直到根节点
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.ForEachChildren(System.Predicate{CommonLang.Geometry.SceneGraph2D.DisplayNode},System.Boolean)">
            <summary>
            遍历所有节点
            </summary>
            <param name="action">return true for break</param>
            <param name="recursion"></param>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.OnDrawBegin(CommonLang.Geometry.SceneGraph2D.IGraphics)">
            <summary>
            子节点前渲染
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:CommonLang.Geometry.SceneGraph2D.DisplayNode.OnDrawAfter(CommonLang.Geometry.SceneGraph2D.IGraphics)">
            <summary>
            子节点后渲染
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:CommonLang.Geometry.MathHelper">
            <summary>
            Contains commonly used precalculated values and mathematical operations.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.MathHelper.E">
            <summary>
            Represents the mathematical constant e(2.71828175).
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.MathHelper.Log10E">
            <summary>
            Represents the log base ten of e(0.4342945).
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.MathHelper.Log2E">
            <summary>
            Represents the log base two of e(1.442695).
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.MathHelper.Pi">
            <summary>
            Represents the value of pi(3.14159274).
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.MathHelper.PiOver2">
            <summary>
            Represents the value of pi divided by two(1.57079637).
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.MathHelper.PiOver4">
            <summary>
            Represents the value of pi divided by four(0.7853982).
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.MathHelper.TwoPi">
            <summary>
            Represents the value of pi times two(6.28318548).
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the coordinate of which is specified in value2.</param>
            <param name="amount2">The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the coordinate of which is specified in value3.</param>
            <returns>Cartesian coordinate of the specified point with respect to the axis being used.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Distance(System.Single,System.Single)">
            <summary>
            Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns> 
            <remarks>This method performs the linear interpolation based on the following formula.
            <c>value1 + (value2 - value1) * amount</c>
            Passing amount a value of 0 will cause value1 to be returned, a value of 1 will cause value2 to be returned.
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Max(System.Single,System.Single)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Max(System.Int32,System.Int32)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Min(System.Single,System.Single)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.Min(System.Int32,System.Int32)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.ToDegrees(System.Single)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>
            This method uses double precission internally,
            though it returns single float
            Factor = 180 / pi
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.ToRadians(System.Single)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>
            This method uses double precission internally,
            though it returns single float
            Factor = pi / 180
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.WrapAngle(System.Single)">
            <summary>
            Reduces a given angle to a value between π and -π.
            </summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:CommonLang.Geometry.MathHelper.IsPowerOfTwo(System.Int32)">
            <summary>
            Determines if value is powered by two.
            </summary>
            <param name="value">A value.</param>
            <returns><c>true</c> if <c>value</c> is powered by two; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:CommonLang.Geometry.Matrix">
            <summary>
            Represents the right-handed 4x4 floating point matrix, which can store translation, scale and rotation information.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="m11">A first row and first column value.</param>
            <param name="m12">A first row and second column value.</param>
            <param name="m13">A first row and third column value.</param>
            <param name="m14">A first row and fourth column value.</param>
            <param name="m21">A second row and first column value.</param>
            <param name="m22">A second row and second column value.</param>
            <param name="m23">A second row and third column value.</param>
            <param name="m24">A second row and fourth column value.</param>
            <param name="m31">A third row and first column value.</param>
            <param name="m32">A third row and second column value.</param>
            <param name="m33">A third row and third column value.</param>
            <param name="m34">A third row and fourth column value.</param>
            <param name="m41">A fourth row and first column value.</param>
            <param name="m42">A fourth row and second column value.</param>
            <param name="m43">A fourth row and third column value.</param>
            <param name="m44">A fourth row and fourth column value.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.#ctor(CommonLang.Geometry.Vector4,CommonLang.Geometry.Vector4,CommonLang.Geometry.Vector4,CommonLang.Geometry.Vector4)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="row1">A first row of the created matrix.</param>
            <param name="row2">A second row of the created matrix.</param>
            <param name="row3">A third row of the created matrix.</param>
            <param name="row4">A fourth row of the created matrix.</param>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M11">
            <summary>
            A first row and first column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M12">
            <summary>
            A first row and second column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M13">
            <summary>
            A first row and third column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M14">
            <summary>
            A first row and fourth column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M21">
            <summary>
            A second row and first column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M22">
            <summary>
            A second row and second column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M23">
            <summary>
            A second row and third column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M24">
            <summary>
            A second row and fourth column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M31">
            <summary>
            A third row and first column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M32">
            <summary>
            A third row and second column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M33">
            <summary>
            A third row and third column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M34">
            <summary>
            A third row and fourth column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M41">
            <summary>
            A fourth row and first column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M42">
            <summary>
            A fourth row and second column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M43">
            <summary>
            A fourth row and third column value.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Matrix.M44">
            <summary>
            A fourth row and fourth column value.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Backward">
            <summary>
            The backward vector formed from the third row M31, M32, M33 elements.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Down">
            <summary>
            The down vector formed from the second row -M21, -M22, -M23 elements.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Forward">
            <summary>
            The forward vector formed from the third row -M31, -M32, -M33 elements.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Identity">
            <summary>
            Returns the identity matrix.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Left">
            <summary>
            The left vector formed from the first row -M11, -M12, -M13 elements.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Right">
            <summary>
            The right vector formed from the first row M11, M12, M13 elements.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Rotation">
            <summary>
            Rotation stored in this matrix.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Translation">
            <summary>
            Position stored in this matrix.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Scale">
            <summary>
            Scale stored in this matrix.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Matrix.Up">
            <summary>
            The upper vector formed from the second row M21, M22, M23 elements.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Add(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <returns>The result of the matrix addition.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Add(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <param name="result">The result of the matrix addition as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateBillboard(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,System.Nullable{CommonLang.Geometry.Vector3})">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <returns>The <see cref="T:CommonLang.Geometry.Matrix"/> for spherical billboarding.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateBillboard(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Nullable{CommonLang.Geometry.Vector3},CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="result">The <see cref="T:CommonLang.Geometry.Matrix"/> for spherical billboarding as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateConstrainedBillboard(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,System.Nullable{CommonLang.Geometry.Vector3},System.Nullable{CommonLang.Geometry.Vector3})">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <returns>The <see cref="T:CommonLang.Geometry.Matrix"/> for cylindrical billboarding.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateConstrainedBillboard(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Nullable{CommonLang.Geometry.Vector3},System.Nullable{CommonLang.Geometry.Vector3},CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <param name="result">The <see cref="T:CommonLang.Geometry.Matrix"/> for cylindrical billboarding as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateFromAxisAngle(CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <returns>The rotation <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateFromAxisAngle(CommonLang.Geometry.Vector3@,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <param name="result">The rotation <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateFromQuaternion(CommonLang.Geometry.Quaternion)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> from a <see cref="T:CommonLang.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:CommonLang.Geometry.Quaternion"/> of rotation moment.</param>
            <returns>The rotation <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateFromQuaternion(CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> from a <see cref="T:CommonLang.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:CommonLang.Geometry.Quaternion"/> of rotation moment.</param>
            <param name="result">The rotation <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <returns>The rotation <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <param name="result">The rotation <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateLookAt(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new viewing <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <returns>The viewing <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateLookAt(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new viewing <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <param name="result">The viewing <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for orthographic view.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for orthographic view as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized orthographic view.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateOrthographicOffCenter(CommonLang.Geometry.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized orthographic view.
            </summary>
            <param name="viewingVolume">The viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized orthographic view.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized orthographic view as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view with FOV.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance of the near plane.</param>
            <param name="farPlaneDistance">Distance of the far plane.</param>
            <param name="result">The new projection <see cref="T:CommonLang.Geometry.Matrix"/> for perspective view with FOV as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:CommonLang.Geometry.Matrix"/> for customized perspective view.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreatePerspectiveOffCenter(CommonLang.Geometry.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized perspective view.
            </summary>
            <param name="viewingVolume">The viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:CommonLang.Geometry.Matrix"/> for customized perspective view.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:CommonLang.Geometry.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new <see cref="T:CommonLang.Geometry.Matrix"/> for customized perspective view as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateRotationX(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:CommonLang.Geometry.Matrix"/> around X axis.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateRotationX(System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:CommonLang.Geometry.Matrix"/> around X axis as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateRotationY(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Y axis.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateRotationY(System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Y axis as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateRotationZ(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Z axis.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateRotationZ(System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:CommonLang.Geometry.Matrix"/> around Z axis as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateScale(System.Single)">
            <summary>
            Creates a new scaling <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <returns>The scaling <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateScale(System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <param name="result">The scaling <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new scaling <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <returns>The scaling <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateScale(System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <param name="result">The scaling <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateScale(CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new scaling <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:CommonLang.Geometry.Vector3"/> representing x,y and z scale values.</param>
            <returns>The scaling <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateScale(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:CommonLang.Geometry.Vector3"/> representing x,y and z scale values.</param>
            <param name="result">The scaling <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateShadow(CommonLang.Geometry.Vector3,CommonLang.Geometry.Plane)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that flattens geometry into a specified <see cref="T:CommonLang.Geometry.Plane"/> as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <returns>A <see cref="T:CommonLang.Geometry.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction. </returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateShadow(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Plane@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that flattens geometry into a specified <see cref="T:CommonLang.Geometry.Plane"/> as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <param name="result">A <see cref="T:CommonLang.Geometry.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new translation <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <returns>The translation <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateTranslation(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <param name="result">The translation <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateTranslation(CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new translation <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <returns>The translation <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateTranslation(System.Single,System.Single,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <param name="result">The translation <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateReflection(CommonLang.Geometry.Plane)">
            <summary>
            Creates a new reflection <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <returns>The reflection <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateReflection(CommonLang.Geometry.Plane@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new reflection <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <param name="result">The reflection <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateWorld(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new world <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:CommonLang.Geometry.Vector3.Up"/>.</param>
            <returns>The world <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.CreateWorld(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new world <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:CommonLang.Geometry.Vector3.Up"/>.</param>
            <param name="result">The world <see cref="T:CommonLang.Geometry.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Decompose(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Vector3@)">
            <summary>
            Decomposes this matrix to translation, rotation and scale elements. Returns <c>true</c> if matrix can be decomposed; <c>false</c> otherwise.
            </summary>
            <param name="scale">Scale vector as an output parameter.</param>
            <param name="rotation">Rotation quaternion as an output parameter.</param>
            <param name="translation">Translation vector as an output parameter.</param>
            <returns><c>true</c> if matrix can be decomposed; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Determinant">
            <summary>
            Returns a determinant of this <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <returns>Determinant of this <see cref="T:CommonLang.Geometry.Matrix"/></returns>
            <remarks>See more about determinant here - http://en.wikipedia.org/wiki/Determinant.
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Divide(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:CommonLang.Geometry.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>The result of dividing the matrix.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Divide(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:CommonLang.Geometry.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">The result of dividing the matrix as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Divide(CommonLang.Geometry.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:CommonLang.Geometry.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Divide(CommonLang.Geometry.Matrix@,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:CommonLang.Geometry.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a matrix by a scalar as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Equals(CommonLang.Geometry.Matrix)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CommonLang.Geometry.Matrix"/> without any tolerance.
            </summary>
            <param name="other">The <see cref="T:CommonLang.Geometry.Matrix"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/> without any tolerance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Invert(CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> which contains inversion of the specified matrix. 
            </summary>
            <param name="matrix">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>The inverted matrix.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Invert(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> which contains inversion of the specified matrix. 
            </summary>
            <param name="matrix">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">The inverted matrix as output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Lerp(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>>The result of linear interpolation of the specified matrixes.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Lerp(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified matrixes as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Multiply(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>Result of the matrix multiplication.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Multiply(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">Result of the matrix multiplication as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Multiply(CommonLang.Geometry.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains a multiplication of <see cref="T:CommonLang.Geometry.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Multiply(CommonLang.Geometry.Matrix@,System.Single,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains a multiplication of <see cref="T:CommonLang.Geometry.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">Result of the matrix multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.ToFloatArray(CommonLang.Geometry.Matrix)">
            <summary>
            Copy the values of specified <see cref="T:CommonLang.Geometry.Matrix"/> to the float array.
            </summary>
            <param name="matrix">The source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>The array which matrix values will be stored.</returns>
            <remarks>
            Required for OpenGL 2.0 projection matrix stuff.
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Negate(CommonLang.Geometry.Matrix)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>Result of the matrix negation.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Negate(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">Result of the matrix negation as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Addition(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Adds two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the add sign.</param>
            <param name="matrix2">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the right of the add sign.</param>
            <returns>Sum of the matrixes.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Division(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:CommonLang.Geometry.Matrix"/> by the elements of another <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the div sign.</param>
            <param name="matrix2">Divisor <see cref="T:CommonLang.Geometry.Matrix"/> on the right of the div sign.</param>
            <returns>The result of dividing the matrixes.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Division(CommonLang.Geometry.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:CommonLang.Geometry.Matrix"/> by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Equality(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Matrix"/> instances are equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the equal sign.</param>
            <param name="matrix2">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Inequality(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Matrix"/> instances are not equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the not equal sign.</param>
            <param name="matrix2">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Multiply(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Multiplies two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the mul sign.</param>
            <param name="matrix2">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication.</returns>
            <remarks>
            Using matrix multiplication algorithm - see http://en.wikipedia.org/wiki/Matrix_multiplication.
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Multiply(CommonLang.Geometry.Matrix,System.Single)">
            <summary>
            Multiplies the elements of matrix by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_Subtraction(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Subtracts the values of one <see cref="T:CommonLang.Geometry.Matrix"/> from another <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the left of the sub sign.</param>
            <param name="matrix2">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the matrix subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.op_UnaryNegation(CommonLang.Geometry.Matrix)">
            <summary>
            Inverts values in the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="matrix">Source <see cref="T:CommonLang.Geometry.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Subtract(CommonLang.Geometry.Matrix,CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>The result of the matrix subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Subtract(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">The result of the matrix subtraction as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Matrix"/> in the format:
            {M11:[<see cref="F:CommonLang.Geometry.Matrix.M11"/>] M12:[<see cref="F:CommonLang.Geometry.Matrix.M12"/>] M13:[<see cref="F:CommonLang.Geometry.Matrix.M13"/>] M14:[<see cref="F:CommonLang.Geometry.Matrix.M14"/>]}
            {M21:[<see cref="F:CommonLang.Geometry.Matrix.M21"/>] M12:[<see cref="F:CommonLang.Geometry.Matrix.M22"/>] M13:[<see cref="F:CommonLang.Geometry.Matrix.M23"/>] M14:[<see cref="F:CommonLang.Geometry.Matrix.M24"/>]}
            {M31:[<see cref="F:CommonLang.Geometry.Matrix.M31"/>] M32:[<see cref="F:CommonLang.Geometry.Matrix.M32"/>] M33:[<see cref="F:CommonLang.Geometry.Matrix.M33"/>] M34:[<see cref="F:CommonLang.Geometry.Matrix.M34"/>]}
            {M41:[<see cref="F:CommonLang.Geometry.Matrix.M41"/>] M42:[<see cref="F:CommonLang.Geometry.Matrix.M42"/>] M43:[<see cref="F:CommonLang.Geometry.Matrix.M43"/>] M44:[<see cref="F:CommonLang.Geometry.Matrix.M44"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Matrix"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Transpose(CommonLang.Geometry.Matrix)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <returns>The new <see cref="T:CommonLang.Geometry.Matrix"/> which contains the transposing result.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.Transpose(CommonLang.Geometry.Matrix@,CommonLang.Geometry.Matrix@)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <param name="result">The new <see cref="T:CommonLang.Geometry.Matrix"/> which contains the transposing result as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Matrix.FindDeterminants(CommonLang.Geometry.Matrix@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Helper method for using the Laplace expansion theorem using two rows expansions to calculate major and 
            minor determinants of a 4x4 matrix. This method is used for inverting a matrix.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.PlaneHelper.ClassifyPoint(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Plane@)">
            <summary>
            Returns a value indicating what side (positive/negative) of a plane a point is
            </summary>
            <param name="point">The point to check with</param>
            <param name="plane">The plane to check against</param>
            <returns>Greater than zero if on the positive side, less than zero if on the negative size, 0 otherwise</returns>
        </member>
        <member name="M:CommonLang.Geometry.PlaneHelper.PerpendicularDistance(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Plane@)">
            <summary>
            Returns the perpendicular distance from a point to a plane
            </summary>
            <param name="point">The point to check</param>
            <param name="plane">The place to check</param>
            <returns>The perpendicular distance from the point to the plane</returns>
        </member>
        <member name="M:CommonLang.Geometry.Plane.Transform(CommonLang.Geometry.Plane,CommonLang.Geometry.Matrix)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Plane.Transform(CommonLang.Geometry.Plane@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Plane@)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="M:CommonLang.Geometry.Plane.Transform(CommonLang.Geometry.Plane,CommonLang.Geometry.Quaternion)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Plane.Transform(CommonLang.Geometry.Plane@,CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Plane@)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="T:CommonLang.Geometry.PlaneIntersectionType">
            <summary>
            Defines the intersection between a <see cref="T:CommonLang.Geometry.Plane"/> and a bounding volume.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.PlaneIntersectionType.Front">
            <summary>
            There is no intersection, the bounding volume is in the negative half space of the plane.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.PlaneIntersectionType.Back">
            <summary>
            There is no intersection, the bounding volume is in the positive half space of the plane.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.PlaneIntersectionType.Intersecting">
            <summary>
            The plane is intersected.
            </summary>
        </member>
        <member name="T:CommonLang.Geometry.Point">
            <summary>
            Describes a 2D-point.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Point.X">
            <summary>
            The x coordinate of this <see cref="T:CommonLang.Geometry.Point"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Point.Y">
            <summary>
            The y coordinate of this <see cref="T:CommonLang.Geometry.Point"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Point.Zero">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Point"/> with coordinates 0, 0.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a point wit X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:CommonLang.Geometry.Point.#ctor(System.Int32)">
            <summary>
            Constructs a point with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:CommonLang.Geometry.Point.op_Addition(CommonLang.Geometry.Point,CommonLang.Geometry.Point)">
            <summary>
            Adds two points.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Point"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Point"/> on the right of the add sign.</param>
            <returns>Sum of the points.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.op_Subtraction(CommonLang.Geometry.Point,CommonLang.Geometry.Point)">
            <summary>
            Subtracts a <see cref="T:CommonLang.Geometry.Point"/> from a <see cref="T:CommonLang.Geometry.Point"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Point"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Point"/> on the right of the sub sign.</param>
            <returns>Result of the subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.op_Multiply(CommonLang.Geometry.Point,CommonLang.Geometry.Point)">
            <summary>
            Multiplies the components of two points by each other.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Point"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Point"/> on the right of the mul sign.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.op_Division(CommonLang.Geometry.Point,CommonLang.Geometry.Point)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Point"/> by the components of another <see cref="T:CommonLang.Geometry.Point"/>.
            </summary>
            <param name="source">Source <see cref="T:CommonLang.Geometry.Point"/> on the left of the div sign.</param>
            <param name="divisor">Divisor <see cref="T:CommonLang.Geometry.Point"/> on the right of the div sign.</param>
            <returns>The result of dividing the points.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.op_Equality(CommonLang.Geometry.Point,CommonLang.Geometry.Point)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Point"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:CommonLang.Geometry.Point"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:CommonLang.Geometry.Point"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.op_Inequality(CommonLang.Geometry.Point,CommonLang.Geometry.Point)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Point"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:CommonLang.Geometry.Point"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:CommonLang.Geometry.Point"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:CommonLang.Geometry.Point.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.Equals(CommonLang.Geometry.Point)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CommonLang.Geometry.Point"/>.
            </summary>
            <param name="other">The <see cref="T:CommonLang.Geometry.Point"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CommonLang.Geometry.Point"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CommonLang.Geometry.Point"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Point"/> in the format:
            {X:[<see cref="F:CommonLang.Geometry.Point.X"/>] Y:[<see cref="F:CommonLang.Geometry.Point.Y"/>]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Point"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Point.ToVector2">
            <summary>
            Gets a <see cref="T:CommonLang.Geometry.Vector2"/> representation for this object.
            </summary>
            <returns>A <see cref="T:CommonLang.Geometry.Vector2"/> representation for this object.</returns>
        </member>
        <member name="T:CommonLang.Geometry.Rectangle">
            <summary>
            Describes a 2D-rectangle. 
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Rectangle.X">
            <summary>
            The x coordinate of the top-left corner of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Rectangle.Y">
            <summary>
            The y coordinate of the top-left corner of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Rectangle.Width">
            <summary>
            The width of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Rectangle.Height">
            <summary>
            The height of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Empty">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Rectangle"/> with X=0, Y=0, Width=0, Height=0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Left">
            <summary>
            Returns the x coordinate of the left edge of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Right">
            <summary>
            Returns the x coordinate of the right edge of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Top">
            <summary>
            Returns the y coordinate of the top edge of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Bottom">
            <summary>
            Returns the y coordinate of the bottom edge of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.IsEmpty">
            <summary>
            Whether or not this <see cref="T:CommonLang.Geometry.Rectangle"/> has a <see cref="F:CommonLang.Geometry.Rectangle.Width"/> and
            <see cref="F:CommonLang.Geometry.Rectangle.Height"/> of 0, and a <see cref="P:CommonLang.Geometry.Rectangle.Location"/> of (0, 0).
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Location">
            <summary>
            The top-left coordinates of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Size">
            <summary>
            The width-height coordinates of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Rectangle.Center">
            <summary>
            A <see cref="T:CommonLang.Geometry.Point"/> located in the center of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <remarks>
            If <see cref="F:CommonLang.Geometry.Rectangle.Width"/> or <see cref="F:CommonLang.Geometry.Rectangle.Height"/> is an odd number,
            the center point will be rounded down.
            </remarks>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:CommonLang.Geometry.Rectangle"/> struct, with the specified
            position, width, and height.
            </summary>
            <param name="x">The x coordinate of the top-left corner of the created <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="y">The y coordinate of the top-left corner of the created <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="width">The width of the created <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="height">The height of the created <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.#ctor(CommonLang.Geometry.Point,CommonLang.Geometry.Point)">
            <summary>
            Creates a new instance of <see cref="T:CommonLang.Geometry.Rectangle"/> struct, with the specified
            location and size.
            </summary>
            <param name="location">The x and y coordinates of the top-left corner of the created <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="size">The width and height of the created <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.op_Equality(CommonLang.Geometry.Rectangle,CommonLang.Geometry.Rectangle)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Rectangle"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:CommonLang.Geometry.Rectangle"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:CommonLang.Geometry.Rectangle"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.op_Inequality(CommonLang.Geometry.Rectangle,CommonLang.Geometry.Rectangle)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Rectangle"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:CommonLang.Geometry.Rectangle"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:CommonLang.Geometry.Rectangle"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
            Gets whether or not the provided coordinates lie within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="x">The x coordinate of the point to check for containment.</param>
            <param name="y">The y coordinate of the point to check for containment.</param>
            <returns><c>true</c> if the provided coordinates lie inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(System.Single,System.Single)">
            <summary>
            Gets whether or not the provided coordinates lie within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="x">The x coordinate of the point to check for containment.</param>
            <param name="y">The y coordinate of the point to check for containment.</param>
            <returns><c>true</c> if the provided coordinates lie inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(CommonLang.Geometry.Point)">
            <summary>
            Gets whether or not the provided <see cref="T:CommonLang.Geometry.Point"/> lies within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:CommonLang.Geometry.Point"/> lies inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(CommonLang.Geometry.Point@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:CommonLang.Geometry.Point"/> lies within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:CommonLang.Geometry.Point"/> lies inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(CommonLang.Geometry.Vector2)">
            <summary>
            Gets whether or not the provided <see cref="T:CommonLang.Geometry.Vector2"/> lies within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:CommonLang.Geometry.Vector2"/> lies inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(CommonLang.Geometry.Vector2@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:CommonLang.Geometry.Vector2"/> lies within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:CommonLang.Geometry.Vector2"/> lies inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(CommonLang.Geometry.Rectangle)">
            <summary>
            Gets whether or not the provided <see cref="T:CommonLang.Geometry.Rectangle"/> lies within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">The <see cref="T:CommonLang.Geometry.Rectangle"/> to check for inclusion in this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:CommonLang.Geometry.Rectangle"/>'s bounds lie entirely inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Contains(CommonLang.Geometry.Rectangle@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:CommonLang.Geometry.Rectangle"/> lies within the bounds of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">The <see cref="T:CommonLang.Geometry.Rectangle"/> to check for inclusion in this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:CommonLang.Geometry.Rectangle"/>'s bounds lie entirely inside this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Equals(CommonLang.Geometry.Rectangle)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="other">The <see cref="T:CommonLang.Geometry.Rectangle"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CommonLang.Geometry.Rectangle"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Inflate(System.Int32,System.Int32)">
            <summary>
            Adjusts the edges of this <see cref="T:CommonLang.Geometry.Rectangle"/> by specified horizontal and vertical amounts. 
            </summary>
            <param name="horizontalAmount">Value to adjust the left and right edges.</param>
            <param name="verticalAmount">Value to adjust the top and bottom edges.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Inflate(System.Single,System.Single)">
            <summary>
            Adjusts the edges of this <see cref="T:CommonLang.Geometry.Rectangle"/> by specified horizontal and vertical amounts. 
            </summary>
            <param name="horizontalAmount">Value to adjust the left and right edges.</param>
            <param name="verticalAmount">Value to adjust the top and bottom edges.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Intersects(CommonLang.Geometry.Rectangle)">
            <summary>
            Gets whether or not a specified <see cref="T:CommonLang.Geometry.Rectangle"/> intersects with this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">Other <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <returns><c>true</c> if other <see cref="T:CommonLang.Geometry.Rectangle"/> intersects with this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Intersects(CommonLang.Geometry.Rectangle@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:CommonLang.Geometry.Rectangle"/> intersects with this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="value">Other <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="result"><c>true</c> if other <see cref="T:CommonLang.Geometry.Rectangle"/> intersects with this <see cref="T:CommonLang.Geometry.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Intersect(CommonLang.Geometry.Rectangle,CommonLang.Geometry.Rectangle)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Rectangle"/> that contains overlapping region of two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <returns>Overlapping region of the two rectangles.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Intersect(CommonLang.Geometry.Rectangle@,CommonLang.Geometry.Rectangle@,CommonLang.Geometry.Rectangle@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Rectangle"/> that contains overlapping region of two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="result">Overlapping region of the two rectangles as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Offset(System.Int32,System.Int32)">
            <summary>
            Changes the <see cref="P:CommonLang.Geometry.Rectangle.Location"/> of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="offsetX">The x coordinate to add to this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="offsetY">The y coordinate to add to this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Offset(System.Single,System.Single)">
            <summary>
            Changes the <see cref="P:CommonLang.Geometry.Rectangle.Location"/> of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="offsetX">The x coordinate to add to this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="offsetY">The y coordinate to add to this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Offset(CommonLang.Geometry.Point)">
            <summary>
            Changes the <see cref="P:CommonLang.Geometry.Rectangle.Location"/> of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="amount">The x and y components to add to this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Offset(CommonLang.Geometry.Vector2)">
            <summary>
            Changes the <see cref="P:CommonLang.Geometry.Rectangle.Location"/> of this <see cref="T:CommonLang.Geometry.Rectangle"/>.
            </summary>
            <param name="amount">The x and y components to add to this <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Rectangle"/> in the format:
            {X:[<see cref="F:CommonLang.Geometry.Rectangle.X"/>] Y:[<see cref="F:CommonLang.Geometry.Rectangle.Y"/>] Width:[<see cref="F:CommonLang.Geometry.Rectangle.Width"/>] Height:[<see cref="F:CommonLang.Geometry.Rectangle.Height"/>]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Rectangle"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Union(CommonLang.Geometry.Rectangle,CommonLang.Geometry.Rectangle)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Rectangle"/> that completely contains two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <returns>The union of the two rectangles.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Rectangle.Union(CommonLang.Geometry.Rectangle@,CommonLang.Geometry.Rectangle@,CommonLang.Geometry.Rectangle@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Rectangle"/> that completely contains two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:CommonLang.Geometry.Rectangle"/>.</param>
            <param name="result">The union of the two rectangles as an output parameter.</param>
        </member>
        <member name="F:CommonLang.Geometry.Vector2.X">
            <summary>
            The x coordinate of this <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Vector2.Y">
            <summary>
            The y coordinate of this <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector2.Zero">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector2"/> with components 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector2.One">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector2"/> with components 1, 1.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector2.UnitX">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector2"/> with components 1, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector2.UnitY">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector2"/> with components 0, 1.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a 2d vector with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.#ctor(System.Single)">
            <summary>
            Constructs a 2d vector with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_UnaryNegation(CommonLang.Geometry.Vector2)">
            <summary>
            Inverts values in the specified <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Addition(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Subtraction(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Subtracts a <see cref="T:CommonLang.Geometry.Vector2"/> from a <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Multiply(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Multiply(CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Multiply(System.Single,CommonLang.Geometry.Vector2)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Division(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector2"/> by the components of another <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:CommonLang.Geometry.Vector2"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Division(CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Equality(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Vector2"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:CommonLang.Geometry.Vector2"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:CommonLang.Geometry.Vector2"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.op_Inequality(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Vector2"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:CommonLang.Geometry.Vector2"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:CommonLang.Geometry.Vector2"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Add(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Add(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Barycentric(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Barycentric(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single,System.Single,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.CatmullRom(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.CatmullRom(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Clamp(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Clamp(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Distance(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Distance(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.DistanceSquared(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.DistanceSquared(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Divide(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector2"/> by the components of another <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Divide(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector2"/> by the components of another <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Divide(CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Divide(CommonLang.Geometry.Vector2@,System.Single,CommonLang.Geometry.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Dot(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Dot(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Equals(CommonLang.Geometry.Vector2)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <param name="other">The <see cref="T:CommonLang.Geometry.Vector2"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CommonLang.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Hermite(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Hermite(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Length">
            <summary>
            Returns the length of this <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <returns>The length of this <see cref="T:CommonLang.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:CommonLang.Geometry.Vector2"/>.
            </summary>
            <returns>The squared length of this <see cref="T:CommonLang.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Lerp(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Lerp(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Max(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CommonLang.Geometry.Vector2"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Max(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CommonLang.Geometry.Vector2"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Min(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CommonLang.Geometry.Vector2"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Min(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CommonLang.Geometry.Vector2"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Multiply(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Multiply(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Multiply(CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a multiplication of <see cref="T:CommonLang.Geometry.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Multiply(CommonLang.Geometry.Vector2@,System.Single,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a multiplication of <see cref="T:CommonLang.Geometry.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Negate(CommonLang.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Negate(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Normalize">
            <summary>
            Turns this <see cref="T:CommonLang.Geometry.Vector2"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Normalize(CommonLang.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Normalize(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Reflect(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Reflect(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.SmoothStep(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.SmoothStep(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,System.Single,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Subtract(CommonLang.Geometry.Vector2,CommonLang.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains subtraction of on <see cref="T:CommonLang.Geometry.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Subtract(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains subtraction of on <see cref="T:CommonLang.Geometry.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Vector2"/> in the format:
            {X:[<see cref="F:CommonLang.Geometry.Vector2.X"/>] Y:[<see cref="F:CommonLang.Geometry.Vector2.Y"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.ToPoint">
            <summary>
            Gets a <see cref="T:CommonLang.Geometry.Point"/> representation for this object.
            </summary>
            <returns>A <see cref="T:CommonLang.Geometry.Point"/> representation for this object.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2,CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a transformation of vector(position.X,position.Y,0,1) by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>Transformed <see cref="T:CommonLang.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a transformation of vector(position.X,position.Y,0,1) by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:CommonLang.Geometry.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2,CommonLang.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a transformation of vector(position.X,position.Y,0,0) by the specified <see cref="T:CommonLang.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:CommonLang.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a transformation of vector(position.X,position.Y,0,0) by the specified <see cref="T:CommonLang.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:CommonLang.Geometry.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2[],System.Int32,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CommonLang.Geometry.Vector2"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CommonLang.Geometry.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2[],System.Int32,CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CommonLang.Geometry.Vector2"/> by the specified <see cref="T:CommonLang.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CommonLang.Geometry.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2[],CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CommonLang.Geometry.Vector2"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.Transform(CommonLang.Geometry.Vector2[],CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CommonLang.Geometry.Vector2"/> by the specified <see cref="T:CommonLang.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.TransformNormal(CommonLang.Geometry.Vector2,CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:CommonLang.Geometry.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.TransformNormal(CommonLang.Geometry.Vector2@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:CommonLang.Geometry.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.TransformNormal(CommonLang.Geometry.Vector2[],System.Int32,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:CommonLang.Geometry.Vector2"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CommonLang.Geometry.Vector2"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector2.TransformNormal(CommonLang.Geometry.Vector2[],CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector2[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:CommonLang.Geometry.Vector2"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="F:CommonLang.Geometry.Vector3.X">
            <summary>
            The x coordinate of this <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Vector3.Y">
            <summary>
            The y coordinate of this <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
        </member>
        <member name="F:CommonLang.Geometry.Vector3.Z">
            <summary>
            The z coordinate of this <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.Zero">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 0, 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.One">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 1, 1, 1.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.UnitX">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.UnitY">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.UnitZ">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.Up">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.Down">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 0, -1, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.Right">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.Left">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components -1, 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.Forward">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 0, 0, -1.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector3.Backward">
            <summary>
            Returns a <see cref="T:CommonLang.Geometry.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z from three values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.#ctor(System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z set to the same value.
            </summary>
            <param name="value">The x, y and z coordinates in 3d-space.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.#ctor(CommonLang.Geometry.Vector2,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y from <see cref="T:CommonLang.Geometry.Vector2"/> and Z from a scalar.
            </summary>
            <param name="value">The x and y coordinates in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Add(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Add(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Barycentric(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Barycentric(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single,System.Single,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.CatmullRom(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.CatmullRom(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Clamp(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Clamp(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Cross(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product of two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Cross(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The cross product of two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Distance(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Distance(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.DistanceSquared(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.DistanceSquared(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Divide(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector3"/> by the components of another <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Divide(CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Divide(CommonLang.Geometry.Vector3@,System.Single,CommonLang.Geometry.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Divide(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector3"/> by the components of another <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Dot(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Dot(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Equals(CommonLang.Geometry.Vector3)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="other">The <see cref="T:CommonLang.Geometry.Vector3"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CommonLang.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Hermite(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Hermite(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Length">
            <summary>
            Returns the length of this <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <returns>The length of this <see cref="T:CommonLang.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <returns>The squared length of this <see cref="T:CommonLang.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Lerp(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Lerp(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Max(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CommonLang.Geometry.Vector3"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Max(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CommonLang.Geometry.Vector3"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Min(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CommonLang.Geometry.Vector3"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Min(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CommonLang.Geometry.Vector3"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Multiply(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Multiply(CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a multiplication of <see cref="T:CommonLang.Geometry.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Multiply(CommonLang.Geometry.Vector3@,System.Single,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a multiplication of <see cref="T:CommonLang.Geometry.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Multiply(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Negate(CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Negate(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Normalize">
            <summary>
            Turns this <see cref="T:CommonLang.Geometry.Vector3"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Normalize(CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Normalize(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Reflect(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Reflect(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.SmoothStep(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.SmoothStep(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,System.Single,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Subtract(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains subtraction of on <see cref="T:CommonLang.Geometry.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Subtract(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains subtraction of on <see cref="T:CommonLang.Geometry.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Vector3"/> in the format:
            {X:[<see cref="F:CommonLang.Geometry.Vector3.X"/>] Y:[<see cref="F:CommonLang.Geometry.Vector3.Y"/>] Z:[<see cref="F:CommonLang.Geometry.Vector3.Z"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:CommonLang.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3,CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a transformation of vector(position.X,position.Y,position.Z,1) by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>Transformed <see cref="T:CommonLang.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a transformation of vector(position.X,position.Y,position.Z,1) by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:CommonLang.Geometry.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3,CommonLang.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a transformation of vector(position.X,position.Y,position.Z,0) by the specified <see cref="T:CommonLang.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:CommonLang.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a transformation of vector(position.X,position.Y,position.Z,0) by the specified <see cref="T:CommonLang.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:CommonLang.Geometry.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3[],System.Int32,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CommonLang.Geometry.Vector3"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CommonLang.Geometry.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3[],System.Int32,CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CommonLang.Geometry.Vector3"/> by the specified <see cref="T:CommonLang.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CommonLang.Geometry.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3[],CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CommonLang.Geometry.Vector3"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.Transform(CommonLang.Geometry.Vector3[],CommonLang.Geometry.Quaternion@,CommonLang.Geometry.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CommonLang.Geometry.Vector3"/> by the specified <see cref="T:CommonLang.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:CommonLang.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.TransformNormal(CommonLang.Geometry.Vector3,CommonLang.Geometry.Matrix)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:CommonLang.Geometry.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.TransformNormal(CommonLang.Geometry.Vector3@,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CommonLang.Geometry.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:CommonLang.Geometry.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:CommonLang.Geometry.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.TransformNormal(CommonLang.Geometry.Vector3[],System.Int32,CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:CommonLang.Geometry.Vector3"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CommonLang.Geometry.Vector3"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.TransformNormal(CommonLang.Geometry.Vector3[],CommonLang.Geometry.Matrix@,CommonLang.Geometry.Vector3[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:CommonLang.Geometry.Vector3"/> by the specified <see cref="T:CommonLang.Geometry.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CommonLang.Geometry.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Equality(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Vector3"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:CommonLang.Geometry.Vector3"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:CommonLang.Geometry.Vector3"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Inequality(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Compares whether two <see cref="T:CommonLang.Geometry.Vector3"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:CommonLang.Geometry.Vector3"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:CommonLang.Geometry.Vector3"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Addition(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_UnaryNegation(CommonLang.Geometry.Vector3)">
            <summary>
            Inverts values in the specified <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Subtraction(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Subtracts a <see cref="T:CommonLang.Geometry.Vector3"/> from a <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Multiply(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Multiply(CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Multiply(System.Single,CommonLang.Geometry.Vector3)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Division(CommonLang.Geometry.Vector3,CommonLang.Geometry.Vector3)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector3"/> by the components of another <see cref="T:CommonLang.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:CommonLang.Geometry.Vector3"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector3.op_Division(CommonLang.Geometry.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:CommonLang.Geometry.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CommonLang.Geometry.Vector3"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="P:CommonLang.Geometry.Vector4.Zero">
            <summary>
            Returns a <see>Vector4</see> with components 0, 0, 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector4.One">
            <summary>
            Returns a <see>Vector4</see> with components 1, 1, 1, 1.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector4.UnitX">
            <summary>
            Returns a <see>Vector4</see> with components 1, 0, 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector4.UnitY">
            <summary>
            Returns a <see>Vector4</see> with components 0, 1, 0, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector4.UnitZ">
            <summary>
            Returns a <see>Vector4</see> with components 0, 0, 1, 0.
            </summary>
        </member>
        <member name="P:CommonLang.Geometry.Vector4.UnitW">
            <summary>
            Returns a <see>Vector4</see> with components 0, 0, 0, 1.
            </summary>
        </member>
        <member name="M:CommonLang.Geometry.Vector4.Add(CommonLang.Geometry.Vector4,CommonLang.Geometry.Vector4)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector4.Add(CommonLang.Geometry.Vector4@,CommonLang.Geometry.Vector4@,CommonLang.Geometry.Vector4@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:CommonLang.Geometry.Vector4.Subtract(CommonLang.Geometry.Vector4,CommonLang.Geometry.Vector4)">
            <summary>
            Performs vector subtraction on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The vector to be subtracted from.</param>
            <param name="value2">The vector to be subtracted from <paramref name="value1"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:CommonLang.Geometry.Vector4.Subtract(CommonLang.Geometry.Vector4@,CommonLang.Geometry.Vector4@,CommonLang.Geometry.Vector4@)">
            <summary>
            Performs vector subtraction on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The vector to be subtracted from.</param>
            <param name="value2">The vector to be subtracted from <paramref name="value1"/>.</param>
            <param name="result">The result of the vector subtraction.</param>
        </member>
        <member name="P:CommonLang.TimeInterval`1.IntervalTimeMS">
            <summary>
            间隔时间
            </summary>
        </member>
        <member name="P:CommonLang.TimeInterval`1.TotalTickCount">
            <summary>
            触发过多少次
            </summary>
        </member>
        <member name="P:CommonLang.TimeInterval`1.TotalPassTimeMS">
            <summary>
            总共经过时间
            </summary>
        </member>
        <member name="M:CommonLang.TimeInterval`1.Reset">
            <summary>
            记录归零
            </summary>
        </member>
        <member name="M:CommonLang.TimeInterval`1.Update(System.Int32)">
            <summary>
            更新
            </summary>
            <param name="intervalMS">间隔时间</param>
            <returns>是否应该触发</returns>
        </member>
        <member name="M:CommonLang.TimeExpire`1.Reset">
            <summary>
            记录归零
            </summary>
        </member>
        <member name="M:CommonLang.TimeExpire`1.Update(System.Int32)">
            <summary>
            更新
            </summary>
            <param name="intervalMS">间隔时间</param>
            <returns>是否到期</returns>
        </member>
        <member name="P:CommonLang.TimeExpire`1.IsEnd">
            <summary>
            是否结束
            </summary>
        </member>
        <member name="P:CommonLang.TimeExpire`1.Percent">
            <summary>
            剩余百分比
            </summary>
        </member>
        <member name="M:CommonLang.TimeTaskMS.Update(System.Int32)">
            <summary>
            更新
            </summary>
            <param name="intervalMS">间隔时间</param>
        </member>
        <member name="M:CommonLang.TimeTaskQueue.AddTimeTask(System.Int32,System.Int32,System.Int32,CommonLang.TickHandler)">
            <summary>
            增加时间任务
            </summary>
            <param name="intervalMS"></param>
            <param name="delayMS"></param>
            <param name="repeat"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonLang.TimeTaskQueue.AddTimeDelayMS(System.Int32,CommonLang.TickHandler)">
            <summary>
            增加延时回调方法
            </summary>
            <param name="delayMS"></param>
            <param name="handler"></param>
        </member>
        <member name="M:CommonLang.TimeTaskQueue.AddTimePeriodicMS(System.Int32,CommonLang.TickHandler)">
            <summary>
            增加定时回调方法
            </summary>
            <param name="intervalMS"></param>
            <param name="handler"></param>
        </member>
        <member name="T:CommonLang.MultiTimeLine">
            <summary>
            同时执行多个Timer
            </summary>
        </member>
        <member name="P:CommonLang.Vector.IRoundObject.RadiusSize">
            <summary>
            半径
            </summary>
        </member>
        <member name="P:CommonLang.Vector.IPositionObject.Direction">
            <summary>
            方向
            </summary>
        </member>
        <member name="P:CommonLang.Vector.IPositionObject.RadiusSize">
            <summary>
            半径
            </summary>
        </member>
        <member name="T:CommonLang.Vector.Vector2">
            <summary>
            2D向量
            </summary>
        </member>
        <member name="T:CommonLang.Vector.TVector2">
            <summary>
            2D向量
            </summary>
        </member>
        <member name="T:CommonLang.Vector.Polar2">
            <summary>
            2D极坐标向量
            </summary>
        </member>
        <member name="M:CommonLang.Vector.MathVector.move(CommonLang.Vector.IVector2,System.Single,System.Single)">
            移动指定偏移
            @param v
            @param dx x距离
            @param dy y距离
        </member>
        <member name="M:CommonLang.Vector.MathVector.movePolar(CommonLang.Vector.IVector2,System.Single,System.Single)">
            通过极坐标来移动
            @param v
            @param degree 弧度
            @param distance 距离
        </member>
        <member name="M:CommonLang.Vector.MathVector.movePolar(CommonLang.Vector.IVector2,System.Single,System.Single,System.Single)">
            通过极坐标来移动
            @param v
            @param degree 弧度
            @param speed  速度 (单位距离/秒)
            @param interval_ms 毫秒时间
        </member>
        <member name="M:CommonLang.Vector.MathVector.moveTo(CommonLang.Vector.IVector2,System.Single,System.Single,System.Single)">
            向目标移动
            @param v
            @param x 目标x
            @param y 目标y
            @return 是否到达目的地
        </member>
        <member name="M:CommonLang.Vector.MathVector.getDistanceSpeedTime(System.Single,System.Single)">
            得到速度和时间产生的距离
            @param speed 速度 (单位距离/秒)
            @param interval_ms 毫秒时间
            @return
        </member>
        <member name="M:CommonLang.Vector.MathVector.getDegree(System.Single,System.Single)">
            <summary>
            得到弧度
            </summary>
            <param name="dx">x向量</param>
            <param name="dy">y向量</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Vector.MathVector.getDegree(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Vector.MathVector.getDegree(CommonLang.Vector.IVector2)">
            得到弧度
            @param v 向量
            @return
        </member>
        <member name="M:CommonLang.Vector.MathVector.vectorAdd(CommonLang.Vector.IVector2,CommonLang.Vector.IVector2)">
            将2个向量相加得到一个新的向量
            @param a
            @param b
            @return
        </member>
        <member name="M:CommonLang.Vector.MathVector.vectorSub(CommonLang.Vector.IVector2,CommonLang.Vector.IVector2)">
            将2个向量相减得到一个新的向量
            @param a
            @param b
            @return
        </member>
        <member name="M:CommonLang.Vector.MathVector.vectorAdd(CommonLang.Vector.IVector2,System.Single,System.Single)">
            将一个向量加上新的向量，得到一个新的向量
            @param a
            @param degree
            @param distance
            @return
        </member>
        <member name="M:CommonLang.Vector.MathVector.vectorAdd(CommonLang.Vector.IVector2,System.Single)">
            把一个向量向自己本身的方向相加，得到一个新的向量
            @param a
            @param distance
            @return
        </member>
        <member name="M:CommonLang.Vector.MathVector.vectorScale(CommonLang.Vector.IVector2,System.Single)">
            将一个向量缩放一定比率后，得到一个新的向量
            @param a
            @param scale
            @return
        </member>
        <member name="M:CommonLang.Vector.MathVector.moveImpact(System.Collections.Generic.ICollection{CommonLang.Vector.IRoundObject},CommonLang.Vector.IRoundObject,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            挤压移动单位，某个单位在集合中移动，碰撞并挤开其他单位
            </summary>
            <param name="vectors"></param>
            <param name="obj"></param>
            <param name="angle"></param>
            <param name="distance"></param>
            <param name="depth"></param>
            <param name="max_depth"></param>
        </member>
        <member name="M:CommonLang.Vector.VectorGroupHelper.DistributeSpacingSizeRandom``1(CommonLang.Vector.IVector2,System.Collections.Generic.ICollection{``0},System.Single,System.Random)">
            <summary>
            随机调整每个点，
            使得距离都最小保持在spacing_size
            </summary>
        </member>
        <member name="M:CommonLang.Vector.VectorGroupHelper.DistributeSpacingSizeSquare``1(CommonLang.Vector.IVector2,System.Collections.Generic.ICollection{``0},System.Single)">
            <summary>
            按正方形调整每个点，
            使得距离都最小保持在spacing_size
            </summary>
        </member>
        <member name="M:CommonLang.Vector.VectorGroupHelper.DistributeSpacingSizeRound``1(CommonLang.Vector.IVector2,System.Collections.Generic.ICollection{``0},System.Single)">
            <summary>
            按圆形调整每个点，
            使得距离都最小保持在spacing_size
            </summary>
        </member>
        <member name="M:CommonLang.Vector.VectorGroupHelper.DistributeSpacingSizeCycle``1(CommonLang.Vector.IVector2,System.Collections.Generic.ICollection{``0},System.Single)">
            <summary>
            按环形调整每个点，
            使得距离都最小保持在spacing_size
            </summary>
        </member>
        <member name="M:CommonLang.Vector.VectorGroupHelper.DistributeSpacingSizeBeehive``1(CommonLang.Vector.IVector2,System.Collections.Generic.ICollection{``0},System.Single)">
            <summary>
            按蜂窝状调整每个点，
            使得距离都最小保持在spacing_size
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOUtil.ReadTo(System.IO.Stream,System.IO.Stream,System.Int64,System.Predicate{System.Int32},System.Int32)">
            <summary>
            从输入流复制到输出流
            </summary>
            <param name="input">输入流</param>
            <param name="output">输出流</param>
            <param name="total_bytes">总共复制多少字节</param>
            <param name="progress">进度回调，返回False表示终止进程</param>
            <param name="buffer_size">缓冲区大小</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutVU32(System.UInt32)">
            <summary>
            写入可变长度32位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutVS32(System.Int32)">
            <summary>
            写入可变长度32位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutVS64(System.Int64)">
            <summary>
            写入可变长度64位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutVU64(System.UInt64)">
            <summary>
            写入可变长度64位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutData(System.Object)">
            <summary>
            自动检测类型
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutStructArray``1(``0[])">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutStructList``1(System.Collections.Generic.IList{``0})">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutExtArray``1(``0[])">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IOutputStream.PutExtList``1(System.Collections.Generic.IList{``0})">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetVU32">
            <summary>
            写入可变长度32位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetVS32">
            <summary>
            写入可变长度32位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetVS64">
            <summary>
            写入可变长度64位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetVU64">
            <summary>
            写入可变长度64位
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetData(CommonLang.IO.DataType@)">
            <summary>
            自动检测类型
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetStructArray``1">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetExtArray``1">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetStructList``1">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetExtList``1">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetGenericStructList``2">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.IInputStream.GetGenericExtList``2">
            <summary>
            不包括消息头，列表中元素必须保证类型一致
            </summary>
        </member>
        <member name="M:CommonLang.IO.Resource.ExistData(System.String)">
            <summary>
            判断资源是否存在
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.Resource.LoadData(System.String)">
            <summary>
            读取资源
            </summary>
            <param name="path">子目录对应的资源路径</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.Resource.ListFiles(System.String)">
            <summary>
            列出所有子文件，不包换目录
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.Resource.LoadDataAsStream(System.String)">
            <summary>
            读取资源
            </summary>
            <param name="path">子目录对应的资源路径</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.Resource.LoadAllText(System.String)">
            <summary>
            读取文本资源
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.IResourceLoader.ExistData(System.String)">
            <summary>
            判断一个文件是否存在
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.IResourceLoader.LoadData(System.String)">
            <summary>
            读取二进制数据
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.IResourceLoader.LoadDataAsStream(System.String)">
            <summary>
            尝试以流的方式读取，返回空表示不支持流
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.IO.IResourceLoader.ListFiles(System.String)">
            <summary>
            列出所有子文件，不包换目录
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Net.AbstractSession.GetAttribute(System.String)">
            <summary>
            获取属性
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Net.AbstractSession.SetAttribute(System.String,System.Object)">
            <summary>
            设置属性
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Net.AbstractSession.RemoveAttribute(System.String)">
            <summary>
            移除属性
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Net.AbstractSession.ContainsAttribute(System.String)">
            <summary>
            是否包含属性
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Net.AbstractSession.GetAttributeKeys">
            <summary>
            遍历属性列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Net.IPUtil.CreateLocalConnectorEndPoint">
            <summary>
            用System.net.dns类中的GetHostEntry()和GetHostName()方法来建立一个本
            地IP地址，并且建立了一个IPHostEntry对象。用以下两句代码来获取本地IP
            地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Net.INetPackageCodec.doDecode(System.IO.Stream,System.Object@)">
            <summary>
            将网络流中的数据解析成对象
            </summary>
            
            <param name="input"></param>
            <param name="message"></param>
            <returns>返回true则表示此次对象解析完成，进行下一次解析</returns>
        </member>
        <member name="M:CommonLang.Net.INetPackageCodec.doEncode(System.IO.Stream,System.Object)">
            <summary>
            将对象编码传输至网络流
            </summary>
            
            <param name="output"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Protocol.MessageFactoryGenerator.RegistAssembly(System.Reflection.Assembly[])">
            <summary>
            将一个程序集内的所有类符合[MessageType]的类全部注册到编解码器
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="T:CommonLang.Property.DescAttribute">
            <summary>
            编辑器支持，描述性文件
            </summary>
        </member>
        <member name="T:CommonLang.Property.DependOnPropertyAttribute">
            <summary>
            某个字段依赖于某个开关（字段或者属性）
            </summary>
        </member>
        <member name="T:CommonLang.Property.ListAttribute">
            <summary>
            编辑器支持，描述列表的成员类型
            </summary>
        </member>
        <member name="T:CommonLang.Property.TableClassAttribute">
            <summary>
            编辑器支持，描述一个类的主键是什么
            </summary>
        </member>
        <member name="T:CommonLang.Property.ExpandableAttribute">
            <summary>
            编辑器支持，此类型是可折叠
            </summary>
        </member>
        <member name="T:CommonLang.Property.NotNullAttribute">
            <summary>
            编辑器支持，字段是否可删除或改变
            </summary>
        </member>
        <member name="T:CommonLang.Property.OptionalValueAttribute">
            <summary>
            列取当前字段可能的值
            </summary>
        </member>
        <member name="T:CommonLang.Property.Int32ColorAttribute">
            <summary>
            标识 Field 字段为颜色
            </summary>
        </member>
        <member name="T:CommonLang.Property.FilePathAttribute">
            <summary>
            标识 Field 字段为文件
            </summary>
        </member>
        <member name="T:CommonLang.Property.DirectoryPathAttribute">
            <summary>
            标识 Field 字段为目录
            </summary>
        </member>
        <member name="M:CommonLang.Property.Catgorys.GetTypeDescAttribute(System.Type)">
            <summary>
            找到Type对应的TypeDescAttribute
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlValueNode.SetValue(System.Object)">
            <summary>
            设置当前节点值（此操作 将改变当前节点结构）
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlValueNode.SetFieldValue(CommonLang.Property.Modeling.UmlValueNode,System.Object)">
            <summary>
            设置当前节点值（此操作 将改变当前节点结构）
            </summary>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlUtils.UmlListSameElements.ListSameElements(CommonLang.Property.Modeling.UmlDocument[])">
            <summary>
            保留结构相同部分
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlUtils.StructEquationBalancer(System.Object,System.Object)">
            <summary>
            将两个结构内部配平，
            比如A对象内的一个数组为2个，B对象内部数组为4个，那么调用后，A对象内的数组将补齐为4个
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <returns>是否发生变化</returns>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlUtils.UmlBalancer.BalanceList(System.Collections.IList,System.Collections.IList)">
            <summary>
            将两个数组配平，少的自动补齐
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlUtils.UmlBalancer.BalanceArray(System.Array@,System.Array@)">
            <summary>
            将两个数组配平，少的自动补齐
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlUtils.UmlBalancer.FillArray(System.Collections.ArrayList,System.Collections.ArrayList,System.Array,System.Int32[])">
            <summary>
            将ret按照more标准配平
            </summary>
            <param name="more"></param>
            <param name="less"></param>
            <param name="ret"></param>
            <param name="ranges"></param>
        </member>
        <member name="M:CommonLang.Property.Modeling.UmlUtils.StructEquals(System.Collections.Generic.List{CommonLang.Property.Modeling.UmlNode},System.Collections.Generic.List{CommonLang.Property.Modeling.UmlNode})">
            <summary>
            深度判断结构是否一致
            </summary>
            <param name="r0"></param>
            <param name="r1"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.PropertyUtil.CollectFieldTypeValues``1(System.Object,System.Collections.Generic.List{``0})">
            <summary>
            将一个对象里面所有的Attribute的标记的Field值，全部取出
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.PropertyUtil.CollectFieldAttributeValues(System.Object,System.Type,System.Collections.Generic.List{CommonLang.Property.FieldAttributeValue})">
            <summary>
            将一个对象里面所有的Attribute的标记的Field值，全部取出
            </summary>
            <param name="data"></param>
            <param name="attributeType"></param>
            <param name="collection"></param>
        </member>
        <member name="M:CommonLang.Property.PropertyUtil.ToTypeDefineString(System.Type)">
            <summary>
            返回书写习惯的类型字符串
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.TypeDescAttribute.GetDescText(System.Type)">
            <summary>
            如果此类型有DescAttribute签名，则返回Desc
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.TypeDescAttribute.GetCatgoryName(System.Type)">
            <summary>
            如果此类型有DescAttribute签名，则返回Catgory
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.ReflectionUtil.GetNoneVirtualSubTypes(System.Type)">
            <summary>
            获取所有匹配的非虚子类
            </summary>
            <param name="superType"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Property.ReflectionUtil.GetNoneVirtualSubDescTypes(System.Type)">
            <summary>
            获取所有匹配的非虚子类，每个类必须标注DescAttribute
            </summary>
            <param name="superType"></param>
            <returns></returns>
        </member>
        <member name="T:CommonLang.ByteOrder.VLQEdian">
            <summary>
            VLQ Int取值范围21位
            </summary>
        </member>
        <member name="M:CommonLang.ByteOrder.VLQEdian.PutS32(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            save a value to data with Variable Length Queue (0xaa,0xbb,0xcc,0xdd = 0xaabbccdd)
            </summary>
            <param name="data"></param>
            <param name="p"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.ByteOrder.VLQEdian.GetS32(System.Byte[],System.Int32@)">
            <summary>
            read a value to data with Variable Length Queue (0xaa,0xbb,0xcc,0xdd = 0xaabbccdd)
            </summary>
            <param name="data"></param>
            <param name="p"></param>
            <returns>int[0] how many bytes ;int[1] value</returns>
        </member>
        <member name="M:CommonLang.HashMap`2.TryAdd(`0,`1)">
            <summary>
            添加成功返回true
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.Properties.LoadFields(System.Object)">
            <summary>
            通常载入配置文件
            </summary>
            <param name="cfg"></param>
        </member>
        <member name="M:CommonLang.SyncMessageQueue`1.Enqueue(`0)">
            <summary>
            添加一个消息到队列
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CommonLang.SyncMessageQueue`1.ProcessMessages(System.Action{`0})">
            <summary>
            尝试处理队列中所有消息
            </summary>
            <param name="action">处理函数</param>
        </member>
        <member name="T:CommonLang.CMath">
            util math function none float
            
            @author yifeizhang
            @since 2006-12-1 
            @version 1.0
        </member>
        <member name="M:CommonLang.CMath.cycNum(System.Int32,System.Int32,System.Int32)">
            <summary>
            compute cyc number: (value+d) within 0~max scope
            </summary>
            <param name="value"></param>
            <param name="d"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.cycNum(System.Int32,System.Int32)">
            <summary>
            compute cyc number: (value+d) within 0~max scope
            </summary>
            <param name="value"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.cycMod(System.Int32,System.Int32)">
            <summary>
            compute cyc mod: -1 mod 10 = -1
            </summary>
            <param name="value"></param>
            <param name="div"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.getDirect(System.Int32)">
            <summary>
            获得符号
            </summary>
            <param name="value"></param>
            <returns>1 or 0 or -1</returns>
        </member>
        <member name="M:CommonLang.CMath.getDirect(System.Single)">
            <summary>
            获得符号
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.roundMod(System.Int32,System.Int32)">
            <summary>
            comput round mod roundMode(33,8) = 5 => 33/8 + (33%8==0?:0:1)
            </summary>
            <param name="value"></param>
            <param name="div"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.roundMod(System.Single,System.Single)">
            <summary>
            comput round mod roundMode(33,8) = 5 => 33/8 + (33%8==0?:0:1)
            </summary>
            <param name="value"></param>
            <param name="div"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.getDistanceSpeedInTime(System.Single,System.Single)">
            <summary>
            根据速度和时间段得到距离
            </summary>
            <param name="speed">速度 (距离/秒)</param>
            <param name="interval_ms">毫秒</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.getDistance(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.getDistanceSquare(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includeFanPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            扇形和圆相交
            </summary>
            <param name="sx">扇形圆心</param>
            <param name="sy">扇形圆心</param>
            <param name="sr">扇形半径</param>
            <param name="dx">点</param>
            <param name="dy">点</param>
            <param name="startAngle">扇形起始角度</param>
            <param name="endAngle">扇形结束角度</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includeRoundPoint(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="sx">圆x</param>
            <param name="sy">圆y</param>
            <param name="sr">圆r</param>
            <param name="px">点</param>
            <param name="py">点</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includeRound2(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="sx">圆1x</param>
            <param name="sy">圆1y</param>
            <param name="sr">圆1r</param>
            <param name="dx">圆2x</param>
            <param name="dy">圆2y</param>
            <param name="dr">圆2r</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includeRectPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="sx1">矩形x1</param>
            <param name="sy1">矩形y1</param>
            <param name="sx2">矩形x2</param>
            <param name="sy2">矩形y2</param>
            <param name="dx">点</param>
            <param name="dy">点</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includeRectPoint2(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="sx1">矩形x</param>
            <param name="sy1">矩形y</param>
            <param name="sw">矩形w</param>
            <param name="sh">矩形h</param>
            <param name="dx">点</param>
            <param name="dy">点</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includeEllipsePoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            点在椭圆内
            </summary>
            <param name="x0">椭圆X</param>
            <param name="y0">椭圆Y</param>
            <param name="rx">椭圆宽</param>
            <param name="ry">椭圆高</param>
            <param name="dx">点</param>
            <param name="dy">点</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includeStripWidthPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            点在粗线条内
            </summary>
            <param name="lx1">线段X1</param>
            <param name="ly1">线段Y1</param>
            <param name="lx2">线段X2</param>
            <param name="ly2">线段Y2</param>
            <param name="line_r">线段半径(粗度的一半)</param>
            <param name="dx">点</param>
            <param name="dy">点</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.includePolygonPoint(CommonLang.Geometry.Vector2[],System.Single,System.Single)">
            <summary>
            点在多边形内
            </summary>
            <param name="list">多边形</param>
            <param name="dx">点</param>
            <param name="dy">点</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRound(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            两圆相交
            </summary>
            <param name="sx">圆1x</param>
            <param name="sy">圆1y</param>
            <param name="sr">圆1r</param>
            <param name="dx">圆2x</param>
            <param name="dy">圆2y</param>
            <param name="dr">圆2r</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectFanRound(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            扇形和圆相交
            </summary>
            <param name="sx">扇形圆心</param>
            <param name="sy">扇形圆心</param>
            <param name="sr">扇形半径</param>
            <param name="dx">圆形中心</param>
            <param name="dy">圆形中心</param>
            <param name="dr">圆形半径</param>
            <param name="startAngle">扇形起始角(弧度)</param>
            <param name="endAngle">扇形结束角(弧度)</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRect(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            两矩形相交
            </summary>
            <param name="sx1">矩形1</param>
            <param name="sy1">矩形1</param>
            <param name="sx2">矩形1</param>
            <param name="sy2">矩形1</param>
            <param name="dx1">矩形2</param>
            <param name="dy1">矩形2</param>
            <param name="dx2">矩形2</param>
            <param name="dy2">矩形2</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRect2(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            两矩形相交(宽高)
            </summary>
            <param name="sx1">矩形1</param>
            <param name="sy1">矩形1</param>
            <param name="sw"> 矩形1</param>
            <param name="sh"> 矩形1</param>
            <param name="dx1">矩形2</param>
            <param name="dy1">矩形2</param>
            <param name="dw"> 矩形2</param>
            <param name="dh"> 矩形2</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRectLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            矩形和线段相交
            </summary>
            <param name="sx1">矩形</param>
            <param name="sy1">矩形</param>
            <param name="sx2">矩形</param>
            <param name="sy2">矩形</param>
            <param name="lx1">线段</param>
            <param name="ly1">线段</param>
            <param name="lx2">线段</param>
            <param name="ly2">线段</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRectRound(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            矩形和圆相交
            </summary>
            <param name="sx">矩形</param>
            <param name="sy">矩形</param>
            <param name="dx">矩形</param>
            <param name="dy">矩形</param>
            <param name="cx">圆形</param>
            <param name="cy">圆形</param>
            <param name="r">圆形</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRectEllipse(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            计算椭圆和矩形是否相交 
            (x/rx)^2 + (y/ry)^2 = 1; 
            left is: (x* ry)^2 + (y* rx)^2 
            right is: (rx* ry)^2 
            if(left > right) out 
            else in 
            </summary>
            <param name="xmin">矩形左上角x</param>
            <param name="ymin">矩形左上角y</param>
            <param name="xmax">矩形右下角x</param>
            <param name="ymax">矩形右下角y</param>
            <param name="x0">椭圆圆心x </param>
            <param name="y0">椭圆圆心y </param>
            <param name="rx">椭圆x轴半径</param>
            <param name="ry">椭圆y轴半径</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            两个线段相交
             ((Q2-Q1)X(P1-Q1))*((P2-Q1)X(Q2-Q1)) >= 0 
             ((P2-P1)X(Q1-P1))*((Q2-P1)X(P2-P1)) >= 0
            </summary>
            <param name="p1_x">line 1</param>
            <param name="p1_y">line 1</param>
            <param name="p2_x">line 1</param>
            <param name="p2_y">line 1</param>
            <param name="q1_x">line 2</param>
            <param name="q1_y">line 2</param>
            <param name="q2_x">line 2</param>
            <param name="q2_y">line 2</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            两个线段相交
             ((Q2-Q1)X(P1-Q1))*((P2-Q1)X(Q2-Q1)) >= 0 
             ((P2-P1)X(Q1-P1))*((Q2-P1)X(P2-P1)) >= 0
            </summary>
            <param name="p1_x">line 1</param>
            <param name="p1_y">line 1</param>
            <param name="p2_x">line 1</param>
            <param name="p2_y">line 1</param>
            <param name="q1_x">line 2</param>
            <param name="q1_y">line 2</param>
            <param name="q2_x">line 2</param>
            <param name="q2_y">line 2</param>
            <param name="ignore_touch">忽略焦点在线段内</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectLineRound(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            求线段与圆碰撞
            </summary>
            <param name="lx1">线段起点</param>
            <param name="ly1">线段起点</param>
            <param name="lx2">线段终点</param>
            <param name="ly2">线段终点</param>
            <param name="cx">圆心坐标</param>
            <param name="cy">圆心坐标</param>
            <param name="Radius">半径</param>
            <returns>如果有交点返回true,否则返回false</returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRoundStripCapsule(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            圆与胶囊线段碰撞检测
            性能远好于 intersetctRoundStripWidth
            </summary>
            <param name="lx1">线段</param>
            <param name="ly1">线段</param>
            <param name="lx2">线段</param>
            <param name="ly2">线段</param>
            <param name="line_r">线段半径(粗度的一半)</param>
            <param name="cx">圆形</param>
            <param name="cy">圆形</param>
            <param name="r">圆形</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRoundStripWidth(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            圆与线段碰撞检测
            性能较差
            </summary>
            <param name="lx1">线段</param>
            <param name="ly1">线段</param>
            <param name="lx2">线段</param>
            <param name="ly2">线段</param>
            <param name="line_r">线段半径(粗度的一半)</param>
            <param name="cx">圆形</param>
            <param name="cy">圆形</param>
            <param name="r">圆形</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRectStripWidth(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            矩形与粗线段相交
            </summary>
            <param name="sx1">矩形</param>
            <param name="sy1">矩形</param>
            <param name="sx2">矩形</param>
            <param name="sy2">矩形</param>
            <param name="lx1">线段</param>
            <param name="ly1">线段</param>
            <param name="lx2">线段</param>
            <param name="ly2">线段</param>
            <param name="line_r">线段半径(粗度的一半)</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRoundPolygon(System.Single,System.Single,System.Single,CommonLang.Geometry.Vector2[])">
            <summary>
            圆形与多边形碰撞
            </summary>
            <param name="cx">圆形</param>
            <param name="cy">圆形</param>
            <param name="r">圆形</param>
            <param name="list">多边形</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.intersectRectPolygon(System.Single,System.Single,System.Single,System.Single,CommonLang.Geometry.Vector2[])">
            <summary>
            矩形与多边形碰撞
            </summary>
            <param name="sx1">矩形</param>
            <param name="sy1">矩形</param>
            <param name="sx2">矩形</param>
            <param name="sy2">矩形</param>
            <param name="list">多边形</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.toStripWidthPolygon(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            获得粗线段多边形表达式
            </summary>
            <param name="lx1">线段</param>
            <param name="ly1">线段</param>
            <param name="lx2">线段</param>
            <param name="ly2">线段</param>
            <param name="line_r">线段半径(粗度的一半)</param>
            <returns>多边形</returns>
        </member>
        <member name="M:CommonLang.CMath.toBoundingBox(CommonLang.Geometry.Vector2[],CommonLang.Geometry.Vector2@,CommonLang.Geometry.Vector2@)">
            <summary>
            获取多边形外包框
            </summary>
            <param name="list"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="M:CommonLang.CMath.isIncludeEqual(System.Int32,System.Int32,System.Int32)">
            <summary>
            max 大于等于 value 并且 min 小于等于 value
            </summary>
            <param name="value"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.isInclude(System.Int32,System.Int32,System.Int32)">
            <summary>
            max 大于 value 并且 min 小于 value
            </summary>
            <param name="value"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CommonLang.CMath.isInRange(System.Int32,System.Int32)" -->
        <member name="M:CommonLang.CMath.getInRange(System.Single,System.Single,System.Single)">
            <summary>
            将值定位于min和max之间
            </summary>
            <param name="value"></param>
            <param name="min"></param>
            <param name="max">包含</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.getRate(System.Single,System.Single,System.Single)">
            <summary>
            获得值在最大与最小之间的比率
            </summary>
            <param name="value"></param>
            <param name="min_v"></param>
            <param name="max_v"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.getMiddleValue(System.Single,System.Single,System.Single)">
            <summary>
            将比率换算为实际值
            </summary>
            <param name="rate"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="F:CommonLang.CMath.PI_DIV_180">
            <summary>
            Math.PI / 180
            </summary>
        </member>
        <member name="F:CommonLang.CMath.PI_DIV_2">
            <summary>
            Math.PI / 2
            </summary>
        </member>
        <member name="F:CommonLang.CMath.PI_MUL_2">
            <summary>
            Math.PI * 2
            </summary>
        </member>
        <member name="M:CommonLang.CMath.DegreesToRadians(System.Single)">
            <summary>
            角度转弧度
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.RadiansToDegrees(System.Single)">
            <summary>
            弧度转角度
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.OpitimizeDegrees(System.Single)">
            <summary>
            将角度控制在360度范围内
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.OpitimizeRadians(System.Single)">
            <summary>
            将弧度控制在2PI度范围内
            </summary>
            <param name="degrees"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.RadiansInRange(System.Single,System.Single,System.Single)">
            <summary>
            判断弧度是否在范围内
            </summary>
            <param name="angle"></param>
            <param name="startAngle"></param>
            <param name="endAngle"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.GetMinRadians(System.Single,System.Single)">
            <summary>
            获取两个角度间的最小距离
            </summary>
            <param name="src_angle"></param>
            <param name="dst_angle"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CMath.PointOnLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            输入三个点，并且判断第三个点在前两个点连成的直线的左边还是右边或者是在线上
            </summary>
            <param name="x0"></param>
            <param name="y0"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CUtils.FormatTime(System.DateTime,System.String)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <param name="format">YYMMDD_hhmmss</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.CUtils.FormatTime(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="seconds"></param>
            <param name="format">hhmmss</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.XCSV.CsvParser.LoadCSVObjectList``1(System.String,System.Int32,System.Int32,System.Char,System.Char)">
            <summary>
            解析CSV对象组，仅支持二维
            </summary>
            <typeparam name="T">列表对象</typeparam>
            <param name="csv_text">CSV文本</param>
            <param name="row_index">起始行</param>
            <param name="column_index">起始列</param>
            <param name="f_split">内容分隔符</param>
            <param name="o_split">组分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.XCSV.CsvParser.TextStreamToAny(System.String,System.Type,System.Char,System.Char)">
            <summary>
            文本序列转化为任何对象
            </summary>
            <param name="ftext">文本</param>
            <param name="type">解析类型</param>
            <param name="f_split">内容分隔符</param>
            <param name="o_split">组分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.XCSV.CsvParser.TextStreamToList(System.String,System.Type,System.Char,System.Char)">
            <summary>
            文本序列转化为对象列表
            </summary>
            <param name="ftext">文本</param>
            <param name="type">解析类型</param>
            <param name="f_split">内容分隔符</param>
            <param name="o_split">组分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.XCSV.CsvParser.TextStreamToObject(System.String,System.Type,System.Char)">
            <summary>
            文本序列转化为对象
            </summary>
            <param name="ftext">文本</param>
            <param name="type">解析类型</param>
            <param name="f_split">内容分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CommonLang.XCSV.CsvParser.IsTypePrimitive(System.Type)">
            <summary>
            基础类型或者字符串
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:CommonLang.Xml.XmlSerializableAttribute">
            <summary>
            标记当前Field或者Property是否参与Xml序列化
            </summary>
        </member>
        <member name="T:CommonLang.Xml.XmlUtil">
            <summary>
            Xml序列化与反序列化
            </summary>
        </member>
    </members>
</doc>

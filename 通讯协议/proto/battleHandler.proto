//***************************************************************************
//* 作者= agui
//* 创建时间= 2017-04-20
//* 用途= 战斗相关扩展处理器
//***************************************************************************
package pomelo.area;
import 'common.proto';

message ItemNormal {
	required string itemCode = 1;
	required int32 itemNum = 2;
}

message ThrowPointRequest {
	optional string id = 1; // 掷点的物品 掷点标识
}

message ThrowPointResponse {
  required int32 s2c_code = 1;
  optional string s2c_msg = 2;
  optional int32 point = 3; // 点数
}

message ThrowPointResultPush {
  required string id = 1; // 掷点索引
  required string name = 2; // 获得的玩家名
  required int32 point = 3; // 点数
  required int32 s2c_code = 4;
  required string itemCode = 5;// 获得的物品代码
  required int32 num = 6;//获得的物品数量
}

message FightLevelResultPush {
  optional int32 time = 1; 				// 倒计时
  optional int32 level = 2; 			// 层级
  optional int32 type = 3; 				// 界面类型（0：当前，1：通关）
  repeated ItemNormal itemLine1 = 4; 	// 第一行奖励
  repeated ItemNormal itemLine2 = 6; 	// 第二行奖励
  optional int32 isMax = 7;				// 收益已达上限
  optional DemonTowerFloorInfo demonTowerFloorInfo = 8;
  optional int32 currentTime = 9;//本次通关用时
  optional bool newRecordFloor = 10;//是否突破了自己的层记录
  optional bool newRecordTime = 11;//是否突破全服的时间记录
  optional int32 myMaxFloorId = 12;//我的最高层
}

//  资源副本结算推送
message ResourceDungeonResultPush {
  required int32 dungeonId = 1;				// 副本ID
  optional int32 killMonster = 2; 				// 杀怪数量
  optional int32 doubleCost = 3; 			// 双倍奖励领取元宝, -1表示没有双倍奖励
  optional int32 exp = 4;					// 掉落经验
  optional int32 gold = 5;					// 掉落金币
  repeated ItemNormal itemLine1 = 6; 		// 奖励
  optional int32 succ = 7;          // 0:失败  1:成功
}

message ItemDrop {
	optional string id = 1;
	required string name = 2;
	required string showId = 3;
	optional int32 groupCount = 4;
	required int32 qColor = 5;
	required int32 itemTypeId = 6;
	required string iconName = 7;
	optional int32 freezeTime = 8;
	optional int32 protectTime = 9;
	optional int32 lifeTime = 10;
}

message ItemDropPush {
	optional int32 x = 1;
	required int32 y = 2;
	repeated ItemDrop items = 3;
}

message PointItemView {
  required string id = 1; // 唯一标识
  required string itemCode = 2; // 物品模板
  required int32 num = 3;//物品数量
}

message ThrowPointItemListPush {
  required int32 s2c_code = 1;
  optional int32 time = 2; 		// 倒计时
  repeated PointItemView items = 3;	// 道具
}

message SceneNamePush {
	required string scene_name = 1;
}

// 战斗场景处理器
service battleHandler {

	// 掷点
    rpc throwPointRequest(ThrowPointRequest) returns (ThrowPointResponse);

}

//战斗消息推送
service battlePush {
    //掷点列表数据
    rpc throwPointItemListPush(ThrowPointItemListPush) returns (Void);
    //掷点结果推送
    rpc throwPointResultPush(ThrowPointResultPush) returns (Void);
	// 关卡奖励
	rpc fightLevelResultPush(FightLevelResultPush) returns (Void);
	// 关卡掉落
	rpc itemDropPush(ItemDropPush) returns (Void);
	// 场景名称
	rpc sceneNamePush(SceneNamePush) returns (Void);
	// 资源副本 结算推送
	rpc resourceDungeonResultPush(ResourceDungeonResultPush) returns (Void);
}